<ПравилаОбмена>
	<ВерсияФормата РежимСовместимости="РежимСовместимостиСБСП20">2.01</ВерсияФормата>
	<Ид>b717910e-7a6e-423a-9d40-1601c9ecb506    </Ид>
	<Наименование>ПО_ITIL_БП_ПолнаяВерсия</Наименование>
	<ДатаВремяСоздания>2023-08-30T15:34:32</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="8.0" ВерсияКонфигурации="1.2.3.6" СинонимКонфигурации="1С:ITIL Управление информационными технологиями предприятия. КОРП, редакция 1.2">ITILКОРП</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="3.0.119.9" СинонимКонфигурации="Управление недвижимостью и арендой КОРП на базе &quot;1С:Бухгалтерия 8 КОРП&quot;, редакция 3.0">УправлениеНедвижимостьюИАрендойКОРП</Приемник>
	<ПередКонвертациейОбъекта>пИсточник = Источник;

Если ВходящиеДанные = Неопределено Тогда
  ВходящиеДанные = Новый Структура;
КонецЕсли;

Если ЗначениеЗаполнено(пИсточник) И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(пИсточник)) 
	И ТипЗнч(пИсточник) &lt;&gt; Тип("ДокументСсылка.ПР_ПринятиеКУчетуОСДляОбмена") 
	И ТипЗнч(пИсточник) &lt;&gt; Тип("ДокументСсылка.ПР_ПередачаОСДляОбмена")
	И ТипЗнч(пИсточник) &lt;&gt; Тип("ДокументСсылка.ПР_ПеремещениеОСДляОбмена") Тогда
  
  РежимЗаписи = "Запись";
  МетаданныеОбъекта =  пИсточник.Метаданные();
  
  Если МетаданныеОбъекта.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
    РежимЗаписи = "Проведение";
    Если НЕ пИсточник.Проведен Тогда
      РежимЗаписи = "ОтменаПроведения";
    КонецЕсли;
  КонецЕсли; 
  
ИначеЕсли Лев(ПКО.Приемник, 8) = "Документ" 
  И НЕ ЗначениеЗаполнено(РежимЗаписи) 
  И ПКО.Приемник &lt;&gt; "ДокументСсылка.ПринятиеКУчетуОС" 
  И ПКО.Приемник &lt;&gt; "ДокументСсылка.ПеремещениеОС"
  И ПКО.Приемник &lt;&gt; "ДокументСсылка.ПередачаОС" Тогда
  
  РежимЗаписи = "Проведение";
  
КонецЕсли;</ПередКонвертациейОбъекта>
	<ПослеЗагрузкиОбъекта>Если ИмяТипаОбъекта = "Документ" Тогда
	ПроверкаДатыЗапрета = ДатыЗапретаИзмененияСлужебный.ПроверитьДатыЗапретаИзмененияЗагрузкиДанных(Объект, Ложь, Ложь, Ложь);
	Проверка = Ложь;
	Если ЗначениеЗаполнено(Ссылка) Тогда	
		Проверка = РегистрыСведений.пит_ПровереноБухгалтером.ПровереноБухгалтером(Ссылка);
	КонецЕсли;
	
	Отказ = ПроверкаДатыЗапрета.ИзменениеЗапрещено Или Проверка;
	
	Если Отказ Тогда
		
		ТекстСообщения = "";
		Если ПроверкаДатыЗапрета.ИзменениеЗапрещено Тогда
			ТекстСообщения = "ЗАПРЕТ ЗАГРУЗКИ: Дата запрета редактирования." + Символы.ПС;
		КонецЕсли;
		
		Если Проверка Тогда
			ТекстСообщения = ТекстСообщения + "ЗАПРЕТ ЗАГРУЗКИ: Объект " + Ссылка.Номер + " проверен.";
		КонецЕсли;
		
		Выполнить(Алгоритмы.ЗаписатьВПротоколЗагрузкаТолькоИнформация);
		
	КонецЕсли;
КонецЕсли;</ПослеЗагрузкиОбъекта>
	<Параметры/>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>Документы</Код>
			<Наименование>Документы</Наименование>
			<Порядок>50</Порядок>
			<Правило>
				<Код>ПоступлениеТоваровУслуг</Код>
				<Наименование>Документ: Поступление активов</Наименование>
				<Порядок>50</Порядок>
				<ПослеЗагрузки>Если НЕ Отказ Тогда
	Если Объект.Оборудование.Количество() = 0 Тогда
		Если Объект.Услуги.Количество() = 0 Тогда
			Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары;
		ИначеЕсли Объект.Товары.Количество() = 0 Тогда
			Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги;
		Иначе
			Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
		КонецЕсли;
	Иначе
		Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование;
	КонецЕсли;
	
	Объект.пит_СкладВТабличнойЧасти = Истина;
	
	КолонкиГруппировок = "Номенклатура, СтавкаНДС, пит_Склад, Цена, пит_Проект";
	КолонкиСуммирования = "Количество, Сумма, СуммаНДС";
	
	Объект.Товары.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
	Объект.Оборудование.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
	Объект.Услуги.Свернуть("Номенклатура, СтавкаНДС, Цена, пит_Проект", КолонкиСуммирования);
	
	ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
	ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
	ОтветственныйИзГРАО = Неопределено;
	Пока ВыборкаОтветственный.Следующий() Цикл
		ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
	КонецЦикла; 
	
	Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
		Объект.Ответственный = ОтветственныйИзГРАО;
	КонецЕсли;
	
	// Получение представления налогооблажения организации, Справочники.Организации.ФормаДокумента.ПриСозданииНаСервере()
	Если ОбщегоНазначения.СсылкаСуществует(Объект.Организация) Тогда
		
		Если Объект.Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо
			И Объект.Организация.ОбособленноеПодразделение
			И ЗначениеЗаполнено(Объект.Организация.ГоловнаяОрганизация) Тогда
			СтруктураУчетнойПолитики = ОрганизацииФормыВызовСервера.ПараметрыСистемыНалогообложенияПоОрганизации(Объект.Организация.ГоловнаяОрганизация);
		КонецЕсли;
		
		ИсточникУчетнойПолитики = ?(СтруктураУчетнойПолитики = Неопределено, Объект.Организация, СтруктураУчетнойПолитики);
		СистемаНалогообложения = ОрганизацииФормыКлиентСервер.ПредставлениеСистемыНалогообложения(ИсточникУчетнойПолитики);
		
		Если НЕ СистемаНалогообложения = "Общая" Тогда
			Объект.НДСВключенВСтоимость = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Объект.СуммаВключаетНДС = Истина;
	
	ЭУПДГУИД = Неопределено;
	ЭУПДГУИД = ПараметрыОбъекта["ЭУПД"];
	ЭУПДСсылка = Неопределено;
	ЭУПДДокумент = Неопределено;
	
	Если ЭУПДГУИД &lt;&gt; Неопределено Тогда
		ЭУПДСсылка = Документы.ЭлектронныйДокументУПД.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭУПДГУИД));
		Если ОбщегоНазначения.СсылкаСуществует(ЭУПДСсылка) Тогда
			ЭУПДДокумент = ЭУПДСсылка.ПолучитьОбъект();
		КонецЕсли;
	КонецЕсли;
	
	ДанныеОбъекта = Новый Структура(
	"Дата, ВидОперации, Организация, Склад, ТипЦен, СуммаВключаетНДС,
	|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов, Контрагент, НДСНеВыделять, ЕстьРасхождения,
	|РассчитыватьСуммаВРознице, ЗаполнятьСтавкуНДСВРознице, ЭтоКомиссия,
	|ДоговорКонтрагента, ПрименяютсяСтавки4и2, СпособЗаполненияСтавкиНДС,
	|УчетАгентскогоНДС, ВидАгентскогоДоговора, ПоставщикРезидентТаможенногоСоюза, ВедетсяУчетПрослеживаемыхТоваров,
	|СчетУчетаРасчетовСКонтрагентом, СчетУчетаРасчетовПоАвансам, СпособЗачетаАвансов, СчетУчетаРасчетовСКомиссионером, СпособОтраженияРасходовПоАмортизации, СчетУчетаРасчетовПоТаре,
	|ЭлектронныеУслуги, ВестиУчетПоДоговорам, ОбратноеНачислениеНДС");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	Выполнить(Алгоритмы.ПодготовкаРеквизитов);
	
	КЗаполнению = Новый Структура;
	КЗаполнению.Вставить("СпособОтраженияРасходовПоАмортизации", Истина);
	КЗаполнению.Вставить("СчетУчетаРасчетовПоТаре", Истина);
	КЗаполнению.Вставить("СпособЗачетаАвансов", Истина);
	КЗаполнению.Вставить("СчетУчетаРасчетовПоАвансам", Истина);
	КЗаполнению.Вставить("СчетУчетаРасчетовСКонтрагентом", Истина);
	КЗаполнению.Вставить("СчетУчетаРасчетовСКомиссионером", Истина);
	
	ПараметрыЗаполнения = Новый Структура;
	
	ПараметрыЗаполнения.Вставить("Заполнять", Истина);
	ПараметрыЗаполнения.Вставить("КЗаполнению", КЗаполнению);
	ПараметрыЗаполнения.Вставить("ИмяДокумента", "ПоступлениеТоваровУслуг");
	
	ПараметрыЗаполнения.Вставить("ДанныеФормы", Новый Структура);
	ПараметрыЗаполнения.ДанныеФормы.Вставить("Объект", ДанныеОбъекта);
	
	ПараметрыЗаполнения.Вставить("ПричиныИзменения", Новый Массив);
	ПараметрыЗаполнения.ПричиныИзменения.Добавить("Организация");
	ПараметрыЗаполнения.ПричиныИзменения.Добавить("Контрагент");
	ПараметрыЗаполнения.ПричиныИзменения.Добавить("ДоговорКонтрагента");
	
	ЗаполненыеСчетаУчетаОбъекта = СчетаУчетаВДокументах.ЗаполнитьОбъектПриИзменении(ПараметрыЗаполнения);
	
	ЗаполнитьЗначенияСвойств(Объект, ПараметрыЗаполнения.ДанныеФормы.Объект,
	"СпособЗачетаАвансов, СчетУчетаРасчетовПоАвансам, СчетУчетаРасчетовСКонтрагентом, СчетУчетаРасчетовСКомиссионером");
	
	Объект.СведенияПрослеживаемости.Очистить();
	
	Для Каждого ОбъектКоллекции Из Объект.Товары Цикл
		Это = "Товары";
		Выполнить(Алгоритмы.ЗаполнениеПолейСтроки);
	КонецЦикла;
	
	Для Каждого ОбъектКоллекции Из Объект.Оборудование Цикл
		Это = "Оборудование";
		Выполнить(Алгоритмы.ЗаполнениеПолейСтроки);
	КонецЦикла;
	
	Для Каждого ОбъектКоллекции Из Объект.Услуги Цикл
		Это = "Услуги";
		Выполнить(Алгоритмы.ЗаполнениеПолейСтроки);
	КонецЦикла;
	
	Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
	
	Если Объект.Проведен И Объект.ПометкаУдаления Тогда
		Попытка
			Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Исключение
			ВызватьИсключение;
		КонецПопытки;
	Иначе
		Попытка
			Объект.Записать();
		Исключение
			ВызватьИсключение;
		КонецПопытки;
	КонецЕсли;
	
	СсылкаНаДокумент = Объект.Ссылка;
	
	СрокОплаты = ПараметрыОбъекта["СрокОплаты"];
	Если ЗначениеЗаполнено(СрокОплаты) Тогда
		Менеджер = РегистрыСведений.СрокиОплатыДокументов.СоздатьМенеджерЗаписи();
		Менеджер.Организация = Объект.Организация;
		Менеджер.Документ = СсылкаНаДокумент;
		Менеджер.СрокОплаты = СрокОплаты;
		Менеджер.Записать();
	КонецЕсли;
	
	ЭтоРеализацияП8Ст161 =
	ДанныеОбъекта.ВидАгентскогоДоговора = ПредопределенноеЗначение("Перечисление.ВидыАгентскихДоговоров.РеализацияТоваров")
	И ДанныеОбъекта.ОбратноеНачислениеНДС;
	
	ВидОперации = ДанныеОбъекта.ВидОперации;
	
 	НомерСФ = ПараметрыОбъекта["НомерСчетаФактуры"];
	ДатаСФ = ПараметрыОбъекта["ДатаСчетаФактуры"];
	
	ТребуетсяСчетФактура = ЗначениеЗаполнено(НомерСФ) И ЗначениеЗаполнено(ДатаСФ)
	И НЕ ДанныеОбъекта.УчетАгентскогоНДС
	И НЕ ДанныеОбъекта.ЭтоКомиссия
	И ВидОперации &lt;&gt; ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку")
	И ВидОперации &lt;&gt; ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ПриобретениеЗемельныхУчастков")
	И (ЗначениеЗаполнено(ДанныеОбъекта.ДоговорКонтрагента) ИЛИ НЕ ДанныеОбъекта.ВестиУчетПоДоговорам)
	И НЕ ДанныеОбъекта.НДСНеВыделять
	И НЕ ДанныеОбъекта.ЭлектронныеУслуги
	ИЛИ ЭтоРеализацияП8Ст161;
		
	Если ЭУПДДокумент &lt;&gt; Неопределено Тогда
		Попытка
			ЭУПДДокумент.ОснованиеДокументУчетнойСистемы = СсылкаНаДокумент;
			ЭУПДДокумент.Записать();
			РегистрыСведений.РеестрДокументовЭДО.УстановитьСвязь(СсылкаНаДокумент, ЭУПДДокумент.Ссылка);
		Исключение
			ВызватьИсключение;
		КонецПопытки;
	КонецЕсли;
	
	Если НЕ Объект.ПометкаУдаления И ТребуетсяСчетФактура Тогда
		
		Если ЗначениеЗаполнено(ДанныеОбъекта.ДоговорКонтрагента) Тогда
			ЭтоКомиссияНаЗакупку = ДанныеОбъекта.ДоговорКонтрагента.ВидДоговора
			= Перечисления.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку;
		Иначе
			ЭтоКомиссияНаЗакупку = Ложь;
		КонецЕсли;
		
		Если ЭУПДДокумент &lt;&gt; Неопределено Тогда
			Если ЗначениеЗаполнено(ЭУПДДокумент.Контрагент) Тогда
				Продавец = ЭУПДДокумент.Контрагент;
			Иначе
				Продавец = Неопределено;
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(ДанныеОбъекта.Контрагент) Тогда
			Продавец = ДанныеОбъекта.Контрагент;
		Иначе
			Продавец = Неопределено;
		КонецЕсли;
		
		ПараметрыСозданияСчетаФактуры = УчетНДСКлиентСервер.НовыеПараметрыСозданияПолученногоСчетаФактуры();
		ПараметрыСозданияСчетаФактуры.Основание = СсылкаНаДокумент;
		ПараметрыСозданияСчетаФактуры.НомерСчетаФактурыПолученного = ПараметрыОбъекта["НомерСчетаФактуры"];
		ПараметрыСозданияСчетаФактуры.ДатаСчетаФактурыПолученного = ПараметрыОбъекта["ДатаСчетаФактуры"];
		ПараметрыСозданияСчетаФактуры.Продавец = ?(ЭтоКомиссияНаЗакупку, Продавец, Неопределено);
		
		СтруктураОтбора = Неопределено;
		
		Результат = УчетНДСВызовСервера.СоздатьСчетФактуруПолученныйНаОсновании(
		ПараметрыСозданияСчетаФактуры, СтруктураОтбора);
		
		бит_РеквизитДоговораВидРасчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДоговорКонтрагента,
		"ВидВзаиморасчетов");
		
		ВидВзаиморасчетовТовары = бит_РеквизитДоговораВидРасчета = Справочники.ВидыВзаиморасчетов.Товары;
		ЭтоГрупповоеПроведение = ПроведениеСервер.ГрупповоеПерепроведение(Объект);
		ПодчиненныйСчетФактура = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "Ссылка");
		
		УстановленСтатусДокумента = НЕ ВидВзаиморасчетовТовары И НЕ ЭтоГрупповоеПроведение
		И ПодчиненныйСчетФактура = Неопределено;
		
		УчетНДСПереопределяемый.СинхронизироватьРеквизитыСчетаФактурыПолученного(Объект, НЕ УстановленСтатусДокумента);
		
		Если ПодчиненныйСчетФактура &lt;&gt; Неопределено
			И (ПодчиненныйСчетФактура.НомерВходящегоДокумента &lt;&gt; ПараметрыОбъекта["НомерСчетаФактуры"]
			ИЛИ ПодчиненныйСчетФактура.ДатаВходящегоДокумента &lt;&gt; ПараметрыОбъекта["ДатаСчетаФактуры"]) Тогда
			СчФОб = ПодчиненныйСчетФактура.ПолучитьОбъект();
			СчфОб.НомерВходящегоДокумента = ПараметрыОбъекта["НомерСчетаФактуры"];
			СчфОб.ДатаВходящегоДокумента = ПараметрыОбъекта["ДатаСчетаФактуры"];
			СчфОб.Записать();	
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.ПометкаУдаления Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Документ", СсылкаНаДокумент);
		Запрос.Текст = "ВЫБРАТЬ
		|	ОчередьПроведения.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.пит_ОчередьОтложенногоПроведения КАК ОчередьПроведения
		|ГДЕ
		|	ОчередьПроведения.Документ = &amp;Документ
		|	И ОчередьПроведения.Состояние = ЗНАЧЕНИЕ(Перечисление.пит_СостояниеЗаписиОчередиПроведения.Ожидание)";
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			МенеджерЗаписи = РегистрыСведений.пит_ОчередьОтложенногоПроведения.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Документ = СсылкаНаДокумент;
			МенеджерЗаписи.Прочитать();
			Если МенеджерЗаписи.Выбран() Тогда
				МенеджерЗаписи.Удалить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.itilprofПоступлениеАктивов</Источник>
				<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>ДатаВходящегоДокумента --&gt; ДатаВходящегоДокумента</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаВходящегоДокумента" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ДоговорКонтрагента --&gt; ДоговорКонтрагента</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
						<Приемник Имя="ДоговорКонтрагента" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>Контрагент --&gt; Контрагент</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>ПР_Фирма --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПР_Фирма" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>ПР_Проект --&gt; пит_Проект</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ПР_Проект" Вид="Реквизит" Тип="СправочникСсылка.ПР_Проекты"/>
						<Приемник Имя="пит_Проект" Вид="Реквизит" Тип="СправочникСсылка.пит_Проекты"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>10</Код>
						<Наименование>НомерВходящегоДокумента --&gt; НомерВходящегоДокумента</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "" + Источник.Номер + " " + Источник.Дата;
Если ЗначениеЗаполнено(Источник.Комментарий) Тогда
	Значение = Значение + " - " + Источник.Комментарий;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>Ответственный --&gt; Ответственный</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование>ПР_ДатаСчетаФактуры --&gt; ДатаСчетаФактуры</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="ПР_ДатаСчетаФактуры" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ДатаСчетаФактуры</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>34</Код>
						<Наименование>ПР_НомерСчетаФактуры --&gt; НомерСчетаФактуры</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="ПР_НомерСчетаФактуры" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>НомерСчетаФактуры</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>ДокументОснование --&gt; ЭУПД</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="ДокументОснование" Вид="Реквизит"/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ЭУПД</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>Значение = ?(ЗначениеЗаполнено(Источник.ДокументОснование), Строка(Источник.ДокументОснование.УникальныйИдентификатор()), "");</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>43</Код>
						<Наименование>ПР_ДатаОплаты --&gt; СрокОплаты</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="ПР_ДатаОплаты" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>СрокОплаты</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>32</Код>
						<Наименование>ВалютаДокумента --&gt; ВалютаДокумента</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
					</Свойство>
					<Группа>
						<Код>16</Код>
						<Наименование>Активы --&gt; Товары</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="Активы" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<ПередВыгрузкой>Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	ГРАО.Раздел КАК Раздел,
|	ГРАО.Ключ КАК Ключ,
|	ГРАО.КлючСсылка КАК КлючСсылка
|ИЗ
|	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(&amp;ТекДата, Раздел = ""Обмен_БП_ITIL""
|																		И Ключ = ""ЯвляетсяОборудованием""
|																		И КлючСсылка = &amp;ВидНоменклатуры
|																		И Значение = Истина) КАК ГРАО";
ВидНоменклатуры = ОбъектКоллекции.КонфигурационнаяЕдиница.Владелец.ПР_ВидНоменклатуры;
Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
Результат = Запрос.Выполнить();
Отказ = Не Результат.Пустой() ИЛИ ВидНоменклатуры.ПР_Услуга;</ПередВыгрузкой>
						<Свойство>
							<Код>17</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>Сумма --&gt; Сумма</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>СуммаНДС --&gt; СуммаНДС</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>Цена --&gt; Цена</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>КонфигурационнаяЕдиница --&gt; Номенклатура</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="КонфигурационнаяЕдиница" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>Аналитика1 --&gt; пит_Склад</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Аналитика1" Вид="Реквизит"/>
							<Приемник Имя="пит_Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Выполнить(Алгоритмы.УстановитьСкладПередВыгрузкойПоступления);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование>ПР_Проект --&gt; пит_Проект</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПР_Проект" Вид="Реквизит" Тип="СправочникСсылка.ПР_Проекты"/>
							<Приемник Имя="пит_Проект" Вид="Реквизит" Тип="СправочникСсылка.пит_Проекты"/>
							<КодПравилаКонвертации>пит_Проекты                                       </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>22</Код>
						<Наименование>Активы --&gt; Оборудование</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="Активы" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="Оборудование" Вид="ТабличнаяЧасть"/>
						<ПередВыгрузкой>Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	ГРАО.Раздел КАК Раздел,
|	ГРАО.Ключ КАК Ключ,
|	ГРАО.КлючСсылка КАК КлючСсылка
|ИЗ
|	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(&amp;ТекДата, Раздел = ""Обмен_БП_ITIL""
|																		И Ключ = ""ЯвляетсяОборудованием""
|																		И КлючСсылка = &amp;ВидНоменклатуры
|																		И Значение = Истина) КАК ГРАО";
ВидНоменклатуры = ОбъектКоллекции.КонфигурационнаяЕдиница.Владелец.ПР_ВидНоменклатуры;
Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
Результат = Запрос.Выполнить();
Отказ = Результат.Пустой();</ПередВыгрузкой>
						<Свойство>
							<Код>25</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>КонфигурационнаяЕдиница --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="КонфигурационнаяЕдиница" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>Аналитика1 --&gt; пит_Склад</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Аналитика1" Вид="Реквизит"/>
							<Приемник Имя="пит_Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Выполнить(Алгоритмы.УстановитьСкладПередВыгрузкойПоступления);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>Сумма --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>СуммаНДС --&gt; СуммаНДС</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>Цена --&gt; Цена</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование>ПР_Проект --&gt; пит_Проект</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПР_Проект" Вид="Реквизит" Тип="СправочникСсылка.ПР_Проекты"/>
							<Приемник Имя="пит_Проект" Вид="Реквизит" Тип="СправочникСсылка.пит_Проекты"/>
							<КодПравилаКонвертации>пит_Проекты                                       </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>35</Код>
						<Наименование>Активы --&gt; Услуги</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="Активы" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="Услуги" Вид="ТабличнаяЧасть"/>
						<ПередВыгрузкой>ВидНоменклатуры = ОбъектКоллекции.КонфигурационнаяЕдиница.Владелец.ПР_ВидНоменклатуры;
Отказ = Не ВидНоменклатуры.ПР_Услуга;</ПередВыгрузкой>
						<Свойство>
							<Код>36</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование>КонфигурационнаяЕдиница --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="КонфигурационнаяЕдиница" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<КодПравилаКонвертации>СтавкиНДС                                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование>Сумма --&gt; Сумма</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование>СуммаНДС --&gt; СуммаНДС</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаНДС" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование>Цена --&gt; Цена</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование>ПР_Проект --&gt; пит_Проект</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ПР_Проект" Вид="Реквизит" Тип="СправочникСсылка.ПР_Проекты"/>
							<Приемник Имя="пит_Проект" Вид="Реквизит" Тип="СправочникСсылка.пит_Проекты"/>
							<КодПравилаКонвертации>пит_Проекты                                       </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>46</Код>
						<Наименование>ПР_ПроектВТабличнойЧасти --&gt; кх_ПроектВТабличнойЧасти</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="ПР_ПроектВТабличнойЧасти" Вид="Реквизит" Тип="Булево"/>
						<Приемник Имя="кх_ПроектВТабличнойЧасти" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПеремещениеТоваров</Код>
				<Наименование>Документ: Перемещение активов</Наименование>
				<Порядок>500</Порядок>
				<ПослеЗагрузки>Объект.НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
Объект.пит_Проект = Справочники.пит_Проекты.ВнеПроекта;
Объект.ВидОперации = Перечисления.ВидыОперацийПеремещениеТоваров.ПередачаМеждуСкладами;

ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла; 

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Объект.Ответственный = ОтветственныйИзГРАО;
КонецЕсли;

ДанныеОбъекта = Новый Структура("Дата, Организация, СкладОтправитель, СкладПолучатель, 
|ТипСкладаОтправитель, ТипСкладаПолучатель, РазделятьПоСтавкамНДС");
ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);

Для Каждого ОбъектКоллекции Из Объект.Товары Цикл
	ОбъектКоллекции.Коэффициент = 1;
	СчетаУчетаВДокументах.ЗаполнитьСтроки(Объект.Товары, "Товары", ДанныеОбъекта, Документы.ПеремещениеТоваров, Истина);	
КонецЦикла;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.ПР_ПеремещениеТоваровДляОбмена</Источник>
				<Приемник>ДокументСсылка.ПеремещениеТоваров</Приемник>
				<Свойства>
					<Свойство>
						<Код>4</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>СкладОтправитель --&gt; СкладОтправитель</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="СкладОтправитель" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<Приемник Имя="СкладОтправитель" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>СкладПолучатель --&gt; СкладПолучатель</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="СкладПолучатель" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<Приемник Имя="СкладПолучатель" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>ПодразделениеПолучатель --&gt; ПодразделениеПолучатель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПодразделениеПолучатель" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="ПодразделениеПолучатель" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>СтруктураПредприятия                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование>Товары --&gt; Товары</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>2</Код>
							<Наименование>Актив --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Актив" Вид="Реквизит"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ТипЗнч(ОбъектКоллекции.Актив) = Тип("СправочникСсылка.itilprofАктивы") Тогда
	Значение = ОбъектКоллекции.Актив.КонфигурационнаяЕдиница;
Иначе
	Значение = ОбъектКоллекции.Актив;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>9</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПеремещениеОС</Код>
				<Наименование>Документ: Перемещение активов</Наименование>
				<Порядок>550</Порядок>
				<ПослеЗагрузки>Объект.пит_ВидОперации = Перечисления.пит_ВидыОперацийПеремещениеОС.ТиповоеПеремещениеОС;
Объект.пит_Проект = Справочники.пит_Проекты.ВнеПроекта;
Объект.СобытиеОС = УчетОС.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.ВнутреннееПеремещение);

ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла; 

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Объект.Ответственный = ОтветственныйИзГРАО;
КонецЕсли;

ТЗКонтактнаяИнформация =Объект.ПодразделениеОрганизации.КонтактнаяИнформация.Выгрузить();
АдресСтрока = ТЗКонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Адрес, "Тип");

Если АдресСтрока &lt;&gt; Неопределено Тогда
	Объект.пит_АдресОтправитель = АдресСтрока.Значение;
КонецЕсли;

ТЗКонтактнаяИнформация =Объект.ПодразделениеПолучатель.КонтактнаяИнформация.Выгрузить();
АдресСтрока = ТЗКонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Адрес, "Тип");

Если АдресСтрока &lt;&gt; Неопределено Тогда
	Объект.пит_АдресПолучатель = АдресСтрока.Значение;
КонецЕсли;

НовоеОС = Неопределено;
Для Каждого ОбъектКоллекции Из Объект.ОС Цикл
	Выполнить(Алгоритмы.ЗаменаОСПоРегиструСоответствия);
	ОбъектКоллекции.ОсновноеСредство = НовоеОС;
КонецЦикла;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.ПР_ПеремещениеОСДляОбмена</Источник>
				<Приемник>ДокументСсылка.ПеремещениеОС</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>МОЛОрганизации --&gt; МОЛОрганизации</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="МОЛОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<Приемник Имя="МОЛОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>МОЛПолучатель --&gt; МОЛПолучатель</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="МОЛПолучатель" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<Приемник Имя="МОЛПолучатель" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПодразделениеОрганизации --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>СтруктураПредприятия                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПодразделениеПолучатель --&gt; ПодразделениеПолучатель</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ПодразделениеПолучатель" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="ПодразделениеПолучатель" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>СтруктураПредприятия                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>9</Код>
						<Наименование>ОС --&gt; ОС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ГУИДПрихода</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДПрихода</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>ЗапросПрихода = Новый Запрос("ВЫБРАТЬ
|	itilprofАктивы.Регистратор КАК Регистратор,
|	itilprofАктивы.Период КАК Период,
|	itilprofАктивы.ПР_Фирма КАК ПР_Фирма,
|	itilprofАктивы.Актив КАК Актив
|ИЗ
|	РегистрНакопления.itilprofАктивы КАК itilprofАктивы
|ГДЕ
|	itilprofАктивы.Актив = &amp;Актив
|	И itilprofАктивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
|	И itilprofАктивы.Регистратор ССЫЛКА Документ.itilprofПеремещениеАктивов
|	И itilprofАктивы.Регистратор &lt;&gt; &amp;Источник
|	И itilprofАктивы.Период &lt;= &amp;МоментВремени
|	И itilprofАктивы.Регистратор.Проведен
|	И itilprofАктивы.Регистратор.ПР_Цель = ЗНАЧЕНИЕ(Справочник.ПР_ЦелиПеремещения.ВводВЭксплуатацию)
|   И НЕ itilprofАктивы.Регистратор.ПР_ПеремещениеПослеИнвентаризации 
|
|УПОРЯДОЧИТЬ ПО
|	Период УБЫВ");

ЗапросПрихода.УстановитьПараметр("Актив", ОбъектКоллекции.Актив);
ЗапросПрихода.УстановитьПараметр("МоментВремени", Источник.Дата);
ЗапросПрихода.УстановитьПараметр("Источник", Источник.ДокументОснование);

ТЗПрихода = ЗапросПрихода.Выполнить().Выгрузить(); 
Если ТЗПрихода.Количество() &gt; 0 Тогда
	Значение = Строка(ТЗПрихода[0].Регистратор.УникальныйИдентификатор());     
Иначе
	Значение = "00000000-0000-0000-0000-000000000000";     
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ГУИДОС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДОС</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = Строка(ОбъектКоллекции.Актив.Ссылка.УникальныйИдентификатор());</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ИнвентарныйНомер</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ИнвентарныйНомер</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Актив.Код;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>11</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПринятиеКУчетуОС</Код>
				<Наименование>Документ: Перемещение активов</Наименование>
				<Порядок>600</Порядок>
				<ПослеЗагрузки>ИмяТаблицы = "ОС";

Объект.ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование;
Объект.ПорядокПогашенияСтоимостиБУ = Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации;
Объект.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПриобретениеЗаПлату;
Объект.СобытиеОС = УчетОС.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию);
Объект.ПорядокВключенияСтоимостиВСоставРасходовУСН = Перечисления.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ВключитьВСоставАмортизируемогоИмущества;
Объект.СчетУчетаВнеоборотногоАктива = Документы.ПринятиеКУчетуОС.СчетУчетаВнеоборотногоАктива(Объект.ВидОперации);

ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла; 

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Объект.Ответственный = ОтветственныйИзГРАО;
КонецЕсли;

Объект.СчетУчета = ПланыСчетов.Хозрасчетный.ОСвОрганизации;
Объект.ПорядокПогашенияСтоимостиБУ = Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации;
Объект.СпособНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.Линейный;
Объект.СчетНачисленияАмортизации = ПланыСчетов.Хозрасчетный.АмортизацияОС_01;
Объект.НачислятьАмортизациюБУ = Истина;

ТЗКонтактнаяИнформация = Объект.МестонахождениеОС.КонтактнаяИнформация.Выгрузить();
АдресСтрока = ТЗКонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Адрес, "Тип");
Если АдресСтрока &lt;&gt; Неопределено Тогда
	Объект.пит_Адрес = АдресСтрока.Значение;
КонецЕсли;

НовоеОС = Неопределено;
Инвентарный = Неопределено;

Для Каждого ОбъектКоллекции Из Объект.ОС Цикл
	Выполнить(Алгоритмы.ЗаменаОСПоРегиструСоответствия);
	ОбъектКоллекции.ОсновноеСредство = НовоеОС;
	ОбъектКоллекции.ИнвентарныйНомер = Инвентарный;
	ОбъектКоллекции.ПрослеживаемыйТовар = ОбъектКоллекции.ОсновноеСредство.ПрослеживаемыйТовар;
КонецЦикла;

ИсточникПринятияСтрока = ПараметрыОбъекта["ИсточникПринятия"];
Если ИсточникПринятияСтрока &lt;&gt; Неопределено Тогда
	ИсточникПринятия = ЗначениеИзСтрокиВнутр(ИсточникПринятияСтрока); 
	ТипПринятия = ИсточникПринятия["ТипПринятия"];
	ТаблицаГУИДов = Неопределено;
	
	Если ТипПринятия = "ПерепродажаТовара" ИЛИ ТипПринятия = "ПерепродажаОС" Тогда
		Объект.пит_Проект = Объект.пит_ДокументПоступление.пит_Проект;
		Объект.пит_Контрагент = Объект.пит_ДокументПоступление.Контрагент;
		Объект.пит_Договор = Объект.пит_ДокументПоступление.ДоговорКонтрагента;
	КонецЕсли;
КонецЕсли;

Если Объект.Номенклатура.ПрослеживаемыйТовар Тогда
	
	Если ТипПринятия = "ПерепродажаТовара" ИЛИ ТипПринятия = "ПерепродажаОС" Тогда
		Выполнить(Алгоритмы.ЗаполнениеСведенийПрослеживаемостиПоПоступлениям);
	ИначеЕсли ТипПринятия = "ВводВЭксплуатацию" Тогда
		Выполнить(Алгоритмы.ЗаполнениеСведенийПрослеживаемости);
	КонецЕсли;
	
КонецЕсли;

СтрокаВПоступлении = Объект.пит_ДокументПоступление.Оборудование.Найти(Объект.Номенклатура, "Номенклатура");
Если СтрокаВПоступлении &lt;&gt; Неопределено И (СтрокаВПоступлении.Сумма / СтрокаВПоступлении.Количество) &lt;= 100000 Тогда
	Объект.ПорядокВключенияСтоимостиВСоставРасходовНУ = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету;
КонецЕсли;

Попытка
	Объект.Записать();
Исключение
	ВызватьИсключение;
КонецПопытки;

НаборЗаписей = РегистрыСведений.пит_ФактДатаОС.СоздатьНаборЗаписей();

НаборЗаписей.Отбор.Регистратор.Установить(Объект.Ссылка);

Для Каждого СтрокаТаблицы Из Объект.ОС Цикл
	НоваяЗапись = НаборЗаписей.Добавить();
	
	НоваяЗапись.Регистратор = Объект.Ссылка;
	НоваяЗапись.Период = Объект.Дата;
	НоваяЗапись.ОсновноеСредство = СтрокаТаблицы.ОсновноеСредство;
	НоваяЗапись.Организация = Объект.Организация;
	НоваяЗапись.пит_ВидыОперацийОС = Перечисления.пит_ВидыОперацийОС.ВводОС;
	НоваяЗапись.пит_ФактическаяДатаОС = Объект.Дата;
КонецЦикла;

Попытка
	НаборЗаписей.Записать();
Исключение
	ВызватьИсключение;
КонецПопытки;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.ПР_ПринятиеКУчетуОСДляОбмена</Источник>
				<Приемник>ДокументСсылка.ПринятиеКУчетуОС</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>МестонахождениеОС --&gt; МестонахождениеОС</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="МестонахождениеОС" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="МестонахождениеОС" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>СтруктураПредприятия                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Склад --&gt; Склад</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>МОЛБУ --&gt; МОЛБУ</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="МОЛБУ" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<Приемник Имя="МОЛБУ" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ГруппаОС --&gt; пит_ГруппаОС</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ГруппаОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ПР_ГруппыУчетаОС"/>
						<Приемник Имя="пит_ГруппаОС" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыОС"/>
						<КодПравилаКонвертации>ГруппыОС                                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>КонфигурационнаяЕдиница --&gt; Номенклатура</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="КонфигурационнаяЕдиница" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
						<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
						<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>7</Код>
						<Наименование>ОС --&gt; ОС</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; ГУИДПрихода</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДПрихода</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>ЗапросПрихода = Новый Запрос("ВЫБРАТЬ
|	itilprofАктивы.Регистратор КАК Регистратор,
|	itilprofАктивы.Период КАК Период,
|	itilprofАктивы.ПР_Фирма КАК ПР_Фирма,
|	itilprofАктивы.Актив КАК Актив
|ИЗ
|	РегистрНакопления.itilprofАктивы КАК itilprofАктивы
|ГДЕ
|	itilprofАктивы.Актив = &amp;Актив
|	И itilprofАктивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
|	И itilprofАктивы.Регистратор ССЫЛКА Документ.itilprofПеремещениеАктивов 
|	И itilprofАктивы.Период &lt;= &amp;МоментВремени
|	И itilprofАктивы.Регистратор.Проведен
|	И itilprofАктивы.Регистратор.ПР_Цель = ЗНАЧЕНИЕ(Справочник.ПР_ЦелиПеремещения.ВводВЭксплуатацию)
|
|УПОРЯДОЧИТЬ ПО
|	Период УБЫВ");

ЗапросПрихода.УстановитьПараметр("Актив", ОбъектКоллекции.Актив);
ЗапросПрихода.УстановитьПараметр("МоментВремени", Источник.Дата);

ТЗПрихода = ЗапросПрихода.Выполнить().Выгрузить();
Значение = Строка(ТЗПрихода[0].Регистратор.УникальныйИдентификатор());</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; ГруппаОС</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГруппаОС</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Актив.ТипАктива.ПР_ГруппаУчетаОС;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; ГУИДОС</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДОС</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = Строка(ОбъектКоллекции.Актив.Ссылка.УникальныйИдентификатор());</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ГУИДРодителя</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДРодителя</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>ТипАктива = ОбъектКоллекции.Актив.ТипАктива;
Если ЗначениеЗаполнено(ТипАктива) Тогда
	Значение = ТипАктива.ПР_GUIDГруппыОСВБП;
Иначе
	Значение = "";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; ИнвентарныйНомер</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ИнвентарныйНомер</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Актив.Код;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; КонфигурационнаяЕдиница</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>КонфигурационнаяЕдиница</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>КЕ = ОбъектКоллекции.Актив.КонфигурационнаяЕдиница;
Если ЗначениеЗаполнено(КЕ) Тогда
	GUIDКонфЕдиницы = КЕ.УникальныйИдентификатор();
Иначе
	GUIDКонфЕдиницы = "";
КонецЕсли;

Значение = GUIDКонфЕдиницы;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; Наименование</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>Наименование</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Актив.Наименование;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; ПометкаУдаления</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ПометкаУдаления</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Актив.ПометкаУдаления;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>16</Код>
						<Наименование>Договор --&gt; пит_Договор</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
						<Приемник Имя="пит_Договор" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
						<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование>ДокументПоступление --&gt; пит_ДокументПоступление</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="ДокументПоступление" Вид="Реквизит"/>
						<Приемник Имя="пит_ДокументПоступление" Вид="Реквизит"/>
						<ПередВыгрузкой>Если ТипЗнч(Источник.ДокументПоступление) = Тип("ДокументСсылка.ПР_ПоступлениеТоваровУслугДляОбмена") Тогда
	ВыгрузитьПоПравилу(Источник.ДокументПоступление,,,,"ПоступлениеТоваровУслугИзПеремещения",,Истина);
ИначеЕсли ТипЗнч(Источник.ДокументПоступление) = Тип("ДокументСсылка.itilprofПоступлениеАктивов") Тогда
	ВыгрузитьПоПравилу(Источник.ДокументПоступление,,,,"ПоступлениеТоваровУслуг",,Истина);
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>Контрагент --&gt; пит_Контрагент</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="пит_Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование>Проект --&gt; пит_Проект</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="Проект" Вид="Реквизит" Тип="СправочникСсылка.ПР_Проекты"/>
						<Приемник Имя="пит_Проект" Вид="Реквизит" Тип="СправочникСсылка.пит_Проекты"/>
						<КодПравилаКонвертации>пит_Проекты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>30</Код>
						<Наименование>--&gt; ИсточникПринятия</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ИсточникПринятия</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>СтруктураПередачи = Новый Структура;
ТипПринятия = "";
ТаблицаГУИДов = Неопределено;

ДокПоступления = Источник.ДокументПоступление;
Если ТипЗнч(ДокПоступления) = Тип("ДокументСсылка.ПР_ПоступлениеТоваровУслугДляОбмена") Тогда
	ДокВыдачи = ДокПоступления.ДокументВыдачи;
	Если ТипЗнч(ДокВыдачи) = Тип("ДокументСсылка.ПР_РеализацияТовараДляОбмена") Тогда
		ТипПринятия = "ПерепродажаТовара";
	ИначеЕсли ТипЗнч(ДокВыдачи) = Тип("ДокументСсылка.ПР_ПередачаОСДляОбмена") Тогда
		ТипПринятия = "ПерепродажаОС";
		КС = Новый КвалификаторыСтроки(36, ДопустимаяДлина.Переменная);
		ТипСтрока = Новый ОписаниеТипов("Строка", , , , КС);
		
		ТаблицаГУИДов = Новый ТаблицаЗначений;
		ТаблицаГУИДов.Колонки.Добавить("ГУИДАктива", ТипСтрока);
		ТаблицаГУИДов.Колонки.Добавить("ГУИДПриходаПередачиОС", ТипСтрока);
		ТаблицаГУИДов.Колонки.Добавить("ГУИДПриходаПринятияОС", ТипСтрока);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("Источник", Источник.ДокументОснование);
		Запрос.УстановитьПараметр("МоментВремени", Источник.Дата);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ПР_ПринятиеКУчетуОСДляОбменаОС.Актив КАК Актив
		|ПОМЕСТИТЬ ВТ_АктивыПринятия
		|ИЗ
		|	Документ.ПР_ПринятиеКУчетуОСДляОбмена.ОС КАК ПР_ПринятиеКУчетуОСДляОбменаОС
		|ГДЕ
		|	ПР_ПринятиеКУчетуОСДляОбменаОС.Ссылка = &amp;Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	itilprofАктивы.Регистратор КАК Регистратор,
		|	ВТ_АктивыПринятия.Актив КАК Актив,
		|	itilprofАктивы.Период КАК Период
		|ПОМЕСТИТЬ ВТ_АктивыСРегистратором
		|ИЗ
		|	ВТ_АктивыПринятия КАК ВТ_АктивыПринятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.itilprofАктивы КАК itilprofАктивы
		|		ПО ВТ_АктивыПринятия.Актив = itilprofАктивы.Актив
		|ГДЕ
		|	itilprofАктивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И itilprofАктивы.Регистратор ССЫЛКА Документ.itilprofПеремещениеАктивов
		|	И itilprofАктивы.Регистратор &lt;&gt; &amp;Источник
		|	И itilprofАктивы.Регистратор.Проведен
		|	И itilprofАктивы.Регистратор.ПР_Цель = ЗНАЧЕНИЕ(Справочник.ПР_ЦелиПеремещения.ВводВЭксплуатацию)
		|	И itilprofАктивы.Период &lt;= &amp;МоментВремени
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_АктивыСРегистратором.Актив КАК Актив,
		|	МАКСИМУМ(ВТ_АктивыСРегистратором.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_АктивыСПериодом
		|ИЗ
		|	ВТ_АктивыСРегистратором КАК ВТ_АктивыСРегистратором
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_АктивыСРегистратором.Актив
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_АктивыСРегистратором.Регистратор КАК ПриходПередачи,
		|	ВТ_АктивыСРегистратором.Актив КАК Актив
		|ИЗ
		|	ВТ_АктивыСРегистратором КАК ВТ_АктивыСРегистратором
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АктивыСПериодом КАК ВТ_АктивыСПериодом
		|		ПО ВТ_АктивыСРегистратором.Актив = ВТ_АктивыСПериодом.Актив
		|			И ВТ_АктивыСРегистратором.Период = ВТ_АктивыСПериодом.Период";
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		ГУИДПередачиОС = Строка(ДокВыдачи.УникальныйИдентификатор());
		ГУИДПриходаПринятияОС = Строка(Источник.ДокументОснование.Ссылка.УникальныйИдентификатор());
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ТаблицаГУИДов.Добавить();
			НоваяСтрока.ГУИДАктива = Выборка.Актив.УникальныйИдентификатор();
			НоваяСтрока.ГУИДПриходаПередачиОС = Выборка.ПриходПередачи.УникальныйИдентификатор();
			НоваяСтрока.ГУИДПриходаПринятияОС = ГУИДПриходаПринятияОС;
		КонецЦикла;
		
	Иначе
		ТипПринятия = "";
	КонецЕсли;
ИначеЕсли ТипЗнч(ДокПоступления) = Тип("ДокументСсылка.itilprofПоступлениеАктивов") Тогда
	ТипПринятия = "ВводВЭксплуатацию";
Иначе
	ТипПринятия = "";
КонецЕсли;

СтруктураПередачи.Вставить("ТипПринятия", ТипПринятия);
Если ТаблицаГУИДов &lt;&gt; Неопределено Тогда
	СтруктураПередачи.Вставить("ТаблицаГУИДов", ТаблицаГУИДов);
	СтруктураПередачи.Вставить("ГУИДПередачиОС", ГУИДПередачиОС);
КонецЕсли;

Значение = ЗначениеВСтрокуВнутр(СтруктураПередачи);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасходМатериалов</Код>
				<Наименование>Документ: Перемещение активов</Наименование>
				<Порядок>650</Порядок>
				<ПослеЗагрузки>ИмяТаблицы = "Материалы";

Если Не Объект.СчетаУчетаЗатратВТаблице Тогда
	Объект.СчетЗатрат = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
КонецЕсли;

Если Объект.СчетЗатрат = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств Тогда     
	Объект.Субконто1 = ПараметрыОбъекта["Субконто1"];
КонецЕсли;

Объект.ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ИспользованиеМатериалов;

ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла; 

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Объект.Ответственный = ОтветственныйИзГРАО;
КонецЕсли;

Отбор = Новый Структура;
Отбор.Вставить("Реквизиты", Новый Структура("СпособУчетаНДС, ОтражениеВУСН, НДСВСтоимостиТоваров", Истина, Истина, Истина));
Отбор.Вставить("НеЗаполненныеРеквизиты", Истина);

СчетаУчетаВДокументах.Заполнить(Объект, Отбор);

ДанныеОбъекта = Новый Структура("Дата, Организация");
ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);

Запрос = Запросы.ПоискПодразделения;
Запрос.УстановитьПараметр("ОрганизацияКонтрагент", Объект.Организация);
Запрос.УстановитьПараметр("КлючСтрока", "ПапкаДирекцияСобственногоПроизводства");
Выборка = Запрос.Выполнить().Выбрать(); 

ПапкаВГРАО = Неопределено;
Пока Выборка.Следующий() Цикл
	ПапкаВГРАО = Выборка.Подразделение;
КонецЦикла;

Запрос.УстановитьПараметр("КлючСтрока", "Подразделение1210СПБуфетЦО");
Выборка = Запрос.Выполнить().Выбрать(); 

СсылкаБуфетИзГРАО = Неопределено;
Пока Выборка.Следующий() Цикл
	СсылкаБуфетИзГРАО = Выборка.Подразделение;
КонецЦикла;

Запрос = Запросы.ПоискСчетаУчета;
Если ЗначениеЗаполнено(ПапкаВГРАО) И ЗначениеЗаполнено(СсылкаБуфетИзГРАО) 
	И (Не Объект.ПодразделениеЗатрат.ПринадлежитЭлементу(ПапкаВГРАО)
	Или Объект.ПодразделениеЗатрат = СсылкаБуфетИзГРАО) Тогда 
	Запрос.УстановитьПараметр("КлючСтрока", "СчетУчета44_01");
Иначе
	Запрос.УстановитьПараметр("КлючСтрока", "СчетУчета26");
КонецЕсли;

Выборка = Запрос.Выполнить().Выбрать();
СчетЗатрат = Неопределено;
Пока Выборка.Следующий() Цикл
	СчетЗатрат = Выборка.СчетУчета;
КонецЦикла;

Для Каждого ОбъектКоллекции Из Объект.Материалы Цикл
	ОбъектКоллекции.Коэффициент = 1;
	ОбъектКоллекции.ОтражениеВУСН = Перечисления.ОтражениеВУСН.НеПринимаются;
	СчетаУчетаВДокументах.ЗаполнитьСтроки(Объект.Материалы, "Материалы", ДанныеОбъекта, Документы.ТребованиеНакладная, Истина);
	
	Если ЗначениеЗаполнено(СчетЗатрат) Тогда
		ОбъектКоллекции.СчетЗатрат = СчетЗатрат;
	КонецЕсли;
	
	Если ОбъектКоллекции.СчетЗатрат = ПланыСчетов.Хозрасчетный.ПрочиеРасходы Тогда
		ОбъектКоллекции.РеализуемыеАктивы = ОбъектКоллекции.Номенклатура;
	КонецЕсли;
	
	ОбъектКоллекции.ПрослеживаемыйКомплект = ОбъектКоллекции.Номенклатура.ПрослеживаемыйКомплект;
	ОбъектКоллекции.СтранаПроисхождения = ОбъектКоллекции.Номенклатура.СтранаПроисхождения;
	ОбъектКоллекции.ПрослеживаемыйТовар = ОбъектКоллекции.Номенклатура.ПрослеживаемыйТовар;
КонецЦикла;

Выполнить(Алгоритмы.ЗаполнениеСведенийПрослеживаемости); 

// {{ ПРОФРЕШЕНИЕ, Мальцев Е.Д. - 09.08.2023 - #УправлениеАктивами
ПрослеживаемыйТоварВТЧ = Объект.Материалы.НайтиСтроки(Новый Структура("ПрослеживаемыйТовар", Истина));

ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
									И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Объект.Дата); 
									
Если Объект.СчетаУчетаЗатратВТаблице И ПрослеживаемыйТоварВТЧ.Количество() &gt; 0 Тогда
	СтатьяЗатрат = ПрослеживаемыйТоварВТЧ[0].СтатьяЗатрат;
Иначе
	СтатьяЗатрат = Объект.Субконто1;
КонецЕсли;

Если ЗначениеЗаполнено(СтатьяЗатрат) Тогда		
	Если  ПрослеживаемыйТоварВТЧ.Количество() &gt; 0 
		И ВедетсяУчетПрослеживаемыхТоваров
		И (Объект.ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ИспользованиеМатериалов Или 
		(Объект.ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ПередачаСотруднику
		И Объект.СпособУчетаМатериаловПоСотруднику = Перечисления.СпособыУчетаМатериаловПоСотрудникам.Расход))
		И (Не Объект.СчетЗатрат = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств")
		Или Объект.СчетаУчетаЗатратВТаблице = Истина) Тогда
		
		Объект.КодОперацииПрослеживаемости = СтатьяЗатрат.ПР_КодОперацииПрослеживаемости;
	Иначе
		Объект.КодОперацииПрослеживаемости =
		ПредопределенноеЗначение("Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка");				
	КонецЕсли;
КонецЕсли;
// }} ПРОФРЕШЕНИЕ, Мальцев Е.Д. - 09.08.2023 - #УправлениеАктивами</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.ПР_РасходМатериаловДляОбмена</Источник>
				<Приемник>ДокументСсылка.ТребованиеНакладная</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>ПодразделениеЗатрат --&gt; ПодразделениеЗатрат</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ПодразделениеЗатрат" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="ПодразделениеЗатрат" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование>ПодразделениеЗатрат --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ПодразделениеЗатрат" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>СтруктураПредприятия                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>СкладВТабличнойЧасти --&gt; пит_СкладВТабличнойЧасти</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="СкладВТабличнойЧасти" Вид="Реквизит" Тип="Булево"/>
						<Приемник Имя="пит_СкладВТабличнойЧасти" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>Материалы --&gt; Материалы</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Материалы" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="Материалы" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>5</Код>
							<Наименование>КонфигурационнаяЕдиница --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="КонфигурационнаяЕдиница" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>ЕдиницаИзмерения --&gt; ЕдиницаИзмерения</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
							<Приемник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ПодразделениеЗатрат --&gt; ПодразделениеЗатрат</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="ПодразделениеЗатрат" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
							<Приемник Имя="ПодразделениеЗатрат" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<ПередВыгрузкой>Если Источник.пр_ТипРемонта = Перечисления.ПР_ПричиныЗаменыКомплектующих.МодернизацияМоральныйИзнос
	Или Источник.пр_ТипРемонта = Перечисления.ПР_ПричиныЗаменыКомплектующих.МодернизацияДооборудование Тогда	
	Значение = Неопределено;	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Склад --&gt; пит_Склад</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
							<Приемник Имя="пит_Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>Проект --&gt; пит_Проект</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Проект" Вид="Реквизит" Тип="СправочникСсылка.ПР_Проекты"/>
							<Приемник Имя="пит_Проект" Вид="Реквизит" Тип="СправочникСсылка.пит_Проекты"/>
							<КодПравилаКонвертации>пит_Проекты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>КонфигурационнаяЕдиница --&gt; пит_РеализуемыеАктивы</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="КонфигурационнаяЕдиница" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
							<Приемник Имя="пит_РеализуемыеАктивы" Вид="Реквизит"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>СтатьяЗатрат --&gt; СтатьяЗатрат</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="СтатьяЗатрат" Вид="Реквизит" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<Приемник Имя="СтатьяЗатрат" Вид="Реквизит" Тип="СправочникСсылка.СтатьиЗатрат"/>
							<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>14</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование>Склад --&gt; Склад</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<КодПравилаКонвертации>Склады                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Если Не (Источник.пр_ТипРемонта = Перечисления.ПР_ПричиныЗаменыКомплектующих.МодернизацияМоральныйИзнос
	Или Источник.пр_ТипРемонта = Перечисления.ПР_ПричиныЗаменыКомплектующих.МодернизацияДооборудование) Тогда	
	Значение = Неопределено;	
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование>--&gt; СчетаУчетаЗатратВТаблице</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетаУчетаЗатратВТаблице" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Не(Источник.пр_ТипРемонта = Перечисления.ПР_ПричиныЗаменыКомплектующих.МодернизацияМоральныйИзнос
	Или Источник.пр_ТипРемонта = Перечисления.ПР_ПричиныЗаменыКомплектующих.МодернизацияДооборудование);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование>ОбъектСтроительства --&gt; Субконто1</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="ОбъектСтроительства" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
						<Приемник Имя="" Вид=""/>
						<КодПравилаКонвертации>ОбъектыСтроительстваМожноСоздать                  </КодПравилаКонвертации>
						<ИмяПараметраДляПередачи>Субконто1</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("СсылкаДокумента", Источник);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РеализацияТовара</Код>
				<Наименование>Документ: Перемещение активов</Наименование>
				<Порядок>700</Порядок>
				<ПослеЗагрузки>ИмяТаблицы = "Товары";

Объект.КурсВзаиморасчетов = 1;
Объект.КратностьВзаиморасчетов = 1;
Объект.ВидЭлектронногоДокумента = Перечисления.ТипыДокументовЭДО.УПД;
Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
Объект.АР_ВидПериода = Перечисления.ДоступныеПериодыОтчета.Месяц;
Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Товары;
Объект.ЭтоУниверсальныйДокумент = Истина;
Объект.СуммаВключаетНДС = Ложь;
Объект.СпособДоставки = Справочники.СпособыДоставки.Самовывоз;

ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла; 

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Объект.Ответственный = ОтветственныйИзГРАО;
КонецЕсли;

Запрос = Запросы.ПоискПроектаПерепродажи;
Объект.пит_Проект = Запрос.Выполнить().Выгрузить()[0].Проект;

Объект.БанковскийСчетОрганизации = Объект.Организация.ОсновнойБанковскийСчет;

Запрос = Запросы.ПоискКонтрагентаПоОрганизации;
ОрганизацияКонтрагент = ПараметрыОбъекта["ОрганизацияКонтрагент"];
Запрос.УстановитьПараметр("ОрганизацияКонтрагент", ОрганизацияКонтрагент);
Выборка = Запрос.Выполнить().Выбрать();

Контрагент = Неопределено;
Пока Выборка.Следующий() Цикл
	Контрагент = Выборка.Контрагент;
КонецЦикла;

Если ЗначениеЗаполнено(Контрагент) Тогда
	Объект.Контрагент = Контрагент;
	Объект.УчаствуетВЭДО = Контрагент.РаботаетПоЭДО;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	ПараметрыОтбора.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	КонтактнаяИнформацияКонтрагента = Контрагент.КонтактнаяИнформация.НайтиСтроки(ПараметрыОтбора);
	
	Если КонтактнаяИнформацияКонтрагента.Количество() &gt; 0 Тогда
		Адрес = КонтактнаяИнформацияКонтрагента[0].Значение;
	Иначе
		Адрес = "";
	КонецЕсли;
	
	Объект.АдресДоставки = Адрес; 
	
	Запрос = Запросы.ПоискДоговораПоКонтрагентуИОрганизации;
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Договор = Неопределено;
	ТипЦен = Неопределено;
	Валюта = Неопределено;
	Пока Выборка.Следующий() Цикл
		Договор = Выборка.Договор;
		ТипЦен = Выборка.ТипЦен;
		Валюта = Выборка.Валюта;	
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Договор) Тогда
		Объект.ДоговорКонтрагента = Договор;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипЦен) Тогда
		Объект.ТипЦен = ТипЦен;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Валюта) Тогда
		Объект.ВалютаДокумента = Валюта;
	КонецЕсли;
	
КонецЕсли;

ДанныеОбъекта = Новый Структура(
		"Дата, ВидОперации, Организация, ДеятельностьНаПатенте,
		|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов,
		|СуммаВключаетНДС, ДоговорКонтрагента,
		|СчетУчетаРасчетовСКонтрагентом, СчетУчетаРасчетовПоАвансам, СчетУчетаРасчетовПоТаре");
ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);

КЗаполнению = Новый Структура;
КЗаполнению.Вставить("СчетУчетаРасчетовПоТаре", Истина);
КЗаполнению.Вставить("СчетУчетаРасчетовПоАвансам", Истина);
КЗаполнению.Вставить("СчетУчетаРасчетовСКонтрагентом", Истина);

ПараметрыЗаполнения = Новый Структура;

ПараметрыЗаполнения.Вставить("Заполнять", Истина);
ПараметрыЗаполнения.Вставить("КЗаполнению", КЗаполнению);
ПараметрыЗаполнения.Вставить("ИмяДокумента", "РеализацияТоваровУслуг");

ПараметрыЗаполнения.Вставить("ДанныеФормы", Новый Структура);
ПараметрыЗаполнения.ДанныеФормы.Вставить("Объект", ДанныеОбъекта);

ПараметрыЗаполнения.Вставить("ПричиныИзменения", Новый Массив);
ПараметрыЗаполнения.ПричиныИзменения.Добавить("Организация");
ПараметрыЗаполнения.ПричиныИзменения.Добавить("Контрагент");
ПараметрыЗаполнения.ПричиныИзменения.Добавить("ДоговорКонтрагента");

ЗаполненыеСчетаУчетаОбъекта = СчетаУчетаВДокументах.ЗаполнитьОбъектПриИзменении(ПараметрыЗаполнения);

ЗаполнитьЗначенияСвойств(Объект, ПараметрыЗаполнения.ДанныеФормы.Объект,
	"СчетУчетаРасчетовПоАвансам, СчетУчетаРасчетовСКонтрагентом, СчетУчетаРасчетовПоТаре");

Запрос = Запросы.ПоискСтатьиДохода;
СтатьяДохода = Запрос.Выполнить().Выгрузить()[0].СтатьяДохода;

СчетаУчетаВДокументах.ЗаполнитьСтроки(Объект.Товары, "Товары", ДанныеОбъекта,
	Документы.РеализацияТоваровУслуг, Истина);

Для Каждого ОбъектКоллекции Из Объект.Товары Цикл
	ОбъектКоллекции.Коэффициент = 1;
	ОбъектКоллекции.Сумма = ОбъектКоллекции.Цена * ОбъектКоллекции.Количество;
	
	ОбъектКоллекции.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ОбъектКоллекции.Сумма, Ложь,
		УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ОбъектКоллекции.СтавкаНДС, Ложь));
		
	ОбъектКоллекции.пит_СтатьяДохода = СтатьяДохода;
	ОбъектКоллекции.Субконто = СтатьяДохода;
	
	ОбъектКоллекции.ПрослеживаемыйКомплект = ОбъектКоллекции.Номенклатура.ПрослеживаемыйКомплект;
	ОбъектКоллекции.СтранаПроисхождения = ОбъектКоллекции.Номенклатура.СтранаПроисхождения;
	ОбъектКоллекции.ПрослеживаемыйТовар = ОбъектКоллекции.Номенклатура.ПрослеживаемыйТовар;		
	
КонецЦикла;

Выполнить(Алгоритмы.ЗаполнениеСведенийПрослеживаемости);

Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Товары");

Объект.Записать();

Если ЗначениеЗаполнено(Ссылка) Тогда
	СсылкаНаДокумент = Ссылка;
ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка) Тогда
	СсылкаНаДокумент = Объект.Ссылка;
Иначе
	СсылкаНаДокумент = Неопределено;
КонецЕсли;

ПараметрыСозданияСчетаФактуры = УчетНДСКлиентСервер.НовыеПараметрыСозданияВыданногоСчетаФактуры();
ПараметрыСозданияСчетаФактуры.Основание = СсылкаНаДокумент;
Результат = УчетНДСВызовСервера.СоздатьСчетФактуруВыданныйНаОсновании(ПараметрыСозданияСчетаФактуры);</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.ПР_РеализацияТовараДляОбмена</Источник>
				<Приемник>ДокументСсылка.РеализацияТоваровУслуг</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПодразделениеОрганизации --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Склад --&gt; Склад</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Перевозчик --&gt; Перевозчик</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Перевозчик" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="Перевозчик" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>6</Код>
						<Наименование>Товары --&gt; Товары</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>7</Код>
							<Наименование>КонфигурационнаяЕдиница --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="КонфигурационнаяЕдиница" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>ЕдиницаИзмерения --&gt; ЕдиницаИзмерения</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
							<Приемник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; СтавкаНДС</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<КодПравилаКонвертации>СтавкиНДС                                         </КодПравилаКонвертации>
							<ПередВыгрузкой>Значение = Перечисления.СтавкиНДС.НДС20;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>Цена --&gt; Цена</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>13</Код>
						<Наименование>ОрганизацияПолучатель --&gt; ОрганизацияКонтрагент</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ОрганизацияПолучатель" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ОрганизацияКонтрагент</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПоступлениеТоваровУслугИзПеремещения</Код>
				<Наименование>Документ: Перемещение активов</Наименование>
				<Порядок>750</Порядок>
				<ПослеЗагрузки>Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование;
Объект.КурсВзаиморасчетов = 1;
Объект.КратностьВзаиморасчетов = 1;
Объект.СуммаВключаетНДС = Истина;
Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
Объект.НДСВключенВСтоимость = Ложь;
Объект.АР_ВидПериода = Перечисления.ДоступныеПериодыОтчета.Месяц;
Объект.ЭтоУниверсальныйДокумент = Истина;

ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла;

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Объект.Ответственный = ОтветственныйИзГРАО;
КонецЕсли;

Запрос = Запросы.ПоискПроектаПерепродажи;
Объект.пит_Проект = Запрос.Выполнить().Выгрузить()[0].Проект;

Запрос = Запросы.ПоискКонтрагентаПоОрганизации;
ОрганизацияКонтрагент = ПараметрыОбъекта["ОрганизацияКонтрагент"];
Запрос.УстановитьПараметр("ОрганизацияКонтрагент", ОрганизацияКонтрагент);
Выборка = Запрос.Выполнить().Выбрать();

Контрагент = Неопределено;
Пока Выборка.Следующий() Цикл
	Контрагент = Выборка.Контрагент;
КонецЦикла;

Если ЗначениеЗаполнено(Контрагент) Тогда
	Объект.Контрагент = Контрагент;
	
	Запрос = Запросы.ПоискДоговораПоКонтрагентуИОрганизации;
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Договор = Неопределено;
	ТипЦен = Неопределено;
	Валюта = Неопределено;
	Пока Выборка.Следующий() Цикл
		Договор = Выборка.Договор;
		ТипЦен = Выборка.ТипЦен;
		Валюта = Выборка.Валюта;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Договор) Тогда
		Объект.ДоговорКонтрагента = Договор;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипЦен) Тогда
		Объект.ТипЦен = ТипЦен;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Валюта) Тогда
		Объект.ВалютаДокумента = Валюта;
	КонецЕсли;
	
КонецЕсли;

ДанныеОбъекта = Новый Структура(
"Дата, ВидОперации, Организация, Склад, ТипЦен, СуммаВключаетНДС,
|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов, Контрагент, НДСНеВыделять, ЕстьРасхождения, 
|СчетУчетаРасчетовСКонтрагентом, СчетУчетаРасчетовПоАвансам, СпособЗачетаАвансов, 
|СчетУчетаРасчетовСКомиссионером, СпособОтраженияРасходовПоАмортизации, СчетУчетаРасчетовПоТаре");
ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);

КЗаполнению = Новый Структура;
КЗаполнению.Вставить("СпособОтраженияРасходовПоАмортизации", Истина);
КЗаполнению.Вставить("СчетУчетаРасчетовПоТаре", Истина);
КЗаполнению.Вставить("СпособЗачетаАвансов", Истина);
КЗаполнению.Вставить("СчетУчетаРасчетовПоАвансам", Истина);
КЗаполнению.Вставить("СчетУчетаРасчетовСКонтрагентом", Истина);
КЗаполнению.Вставить("СчетУчетаРасчетовСКомиссионером", Истина);

ПараметрыЗаполнения = Новый Структура;

ПараметрыЗаполнения.Вставить("Заполнять", Истина);
ПараметрыЗаполнения.Вставить("КЗаполнению", КЗаполнению);
ПараметрыЗаполнения.Вставить("ИмяДокумента", "ПоступлениеТоваровУслуг");

ПараметрыЗаполнения.Вставить("ДанныеФормы", Новый Структура);
ПараметрыЗаполнения.ДанныеФормы.Вставить("Объект", ДанныеОбъекта);

ПараметрыЗаполнения.Вставить("ПричиныИзменения", Новый Массив);
ПараметрыЗаполнения.ПричиныИзменения.Добавить("Организация");
ПараметрыЗаполнения.ПричиныИзменения.Добавить("Контрагент");
ПараметрыЗаполнения.ПричиныИзменения.Добавить("ДоговорКонтрагента");

ЗаполненыеСчетаУчетаОбъекта = СчетаУчетаВДокументах.ЗаполнитьОбъектПриИзменении(ПараметрыЗаполнения);

ЗаполнитьЗначенияСвойств(Объект, ПараметрыЗаполнения.ДанныеФормы.Объект,
"СчетУчетаРасчетовПоАвансам, СчетУчетаРасчетовСКонтрагентом, СчетУчетаРасчетовПоТаре");

УИД = Новый УникальныйИдентификатор(ПараметрыОбъекта["ГУИДДокументаВыдачи"]);
ДокОснование = Документы[ПараметрыОбъекта["ВидДокументаВыдачи"]].ПолучитьСсылку(УИД);

Если ТипЗнч(ДокОснование) = Тип("ДокументСсылка.ПередачаОС") Тогда
	МассивСоответствий = ЗначениеИзСтрокиВнутр(ПараметрыОбъекта["ТаблицаСоответствийКЕ"]);
	ТабНоменклатур = Новый ТаблицаЗначений;
	ТипСтрока = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(36, ДопустимаяДлина.Переменная));
	ТабНоменклатур.Колонки.Добавить("КонфигурационнаяЕдиница", ТипСтрока);
	ТабНоменклатур.Колонки.Добавить("Актив", ТипСтрока);
	ТабНоменклатур.Колонки.Добавить("GUIDПрихода", ТипСтрока);
	
	Для Каждого СтруктураСоответствий Из МассивСоответствий Цикл
		СтрНоменклатур = ТабНоменклатур.Добавить();
		ЗаполнитьЗначенияСвойств(СтрНоменклатур, СтруктураСоответствий);
	КонецЦикла;
	
	МенеджерВремТаб = Новый МенеджерВременныхТаблиц();
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВремТаб;
	Запрос.УстановитьПараметр("ТабАктивы", ТабНоменклатур);
	Запрос.УстановитьПараметр("ДокОснование", ДокОснование);
	Запрос.Текст = "ВЫБРАТЬ
	|	ТабАктивы.Актив КАК GUIDАктива,
	|	ТабАктивы.GUIDПрихода КАК GUIDПрихода,
	|	ТабАктивы.КонфигурационнаяЕдиница КАК GUIDКонфЕдиницы
	|ПОМЕСТИТЬ ВТ_Активы
	|ИЗ
	|	&amp;ТабАктивы КАК ТабАктивы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ_Активы.GUIDКонфЕдиницы КАК GUIDКонфЕдиницы
	|ПОМЕСТИТЬ ВТ_ОсновныеСредства
	|ИЗ
	|	ВТ_Активы КАК ВТ_Активы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПР_ОсновныеСредстваITIL КАК РегистрОС
	|		ПО ВТ_Активы.GUIDАктива = РегистрОС.GUIDОСВITIL
	|			И ВТ_Активы.GUIDПрихода = РегистрОС.GUIDПриходаВITIL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПередачаОС.Цена КАК Цена,
	|	ПередачаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТ_ПередачаОС
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОС
	|ГДЕ
	|	ПередачаОС.Ссылка = &amp;ДокОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПередачаОС.Цена КАК Цена,
	|	ВТ_ОсновныеСредства.GUIDКонфЕдиницы КАК GUIDКонфЕдиницы,
	|	СУММА(1) КАК Количество
	|ИЗ
	|	ВТ_ОсновныеСредства КАК ВТ_ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПередачаОС КАК ВТ_ПередачаОС
	|		ПО ВТ_ОсновныеСредства.ОсновноеСредство = ВТ_ПередачаОС.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПередачаОС.Цена,
	|	ВТ_ОсновныеСредства.GUIDКонфЕдиницы";
	Выборка = Запрос.Выполнить().Выбрать();
	ТабОборудование = Объект.Оборудование;
	ТабОборудование.Очистить();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТабОборудование.Добавить();
		НомраГУИД = Новый УникальныйИдентификатор(Выборка.GUIDКонфЕдиницы);
		НоменклатураСсылка = Справочники.Номенклатура.ПолучитьСсылку(НомраГУИД);
		
		НоваяСтрока.Номенклатура = НоменклатураСсылка;
		НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Номенклатура.ЕдиницаИзмерения;
		НоваяСтрока.Коэффициент = 1;
		НоваяСтрока.Количество = Выборка.Количество;
		НоваяСтрока.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС20");
		НоваяСтрока.Цена = Выборка.Цена;
		НоваяСтрока.Сумма = НоваяСтрока.Цена * НоваяСтрока.Количество;
		СтавкаНДСЦифрой = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС, Ложь);
		НоваяСтрока.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(НоваяСтрока.Сумма, Ложь, СтавкаНДСЦифрой);
		
		СчетаУчетаВДокументах.ЗаполнитьСтроки(ТабОборудование, "Оборудование",
		ДанныеОбъекта, Документы.ПоступлениеТоваровУслуг, Истина);
		
		НоваяСтрока.ПрослеживаемыйТовар = НоваяСтрока.Номенклатура.ПрослеживаемыйТовар;
		НоваяСтрока.СтранаПроисхождения = НоваяСтрока.Номенклатура.СтранаПроисхождения;
		НоваяСтрока.ПрослеживаемыйКомплект = НоваяСтрока.Номенклатура.ПрослеживаемыйКомплект;
		НоваяСтрока.пит_Проект = Объект.пит_Проект;
	КонецЦикла;
	
	ЗапросРНПТ = Новый Запрос;
	ЗапросРНПТ.МенеджерВременныхТаблиц = МенеджерВремТаб;
	ЗапросРНПТ.УстановитьПараметр("ДокОснование", ДокОснование);
	ЗапросРНПТ.Текст = "ВЫБРАТЬ
	|	ВТ_ПередачаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВТ_ПередачаОС.Цена КАК Цена,
	|	ВТ_ОсновныеСредства.GUIDКонфЕдиницы КАК GUIDКонфЕдиницы
	|ПОМЕСТИТЬ ВТ_ПрослеживаемыйТовар
	|ИЗ
	|	ВТ_ОсновныеСредства КАК ВТ_ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПередачаОС КАК ВТ_ПередачаОС
	|		ПО ВТ_ОсновныеСредства.ОсновноеСредство = ВТ_ПередачаОС.ОсновноеСредство
	|ГДЕ
	|	ВТ_ПередачаОС.ИдентификаторСтроки &lt;&gt; """"
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПередачаОС.Цена,
	|	ВТ_ПередачаОС.ИдентификаторСтроки,
	|	ВТ_ОсновныеСредства.GUIDКонфЕдиницы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаПрослеживаемость.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ПередачаПрослеживаемость.РНПТ КАК РНПТ,
	|	ПередачаПрослеживаемость.Количество КАК Количество	
	|ПОМЕСТИТЬ ВТ_СведенияПрослеживаемости
	|ИЗ
	|	Документ.ПередачаОС.СведенияПрослеживаемости КАК ПередачаПрослеживаемость
	|ГДЕ
	|	ПередачаПрослеживаемость.Ссылка = &amp;ДокОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПрослеживаемыйТовар.GUIDКонфЕдиницы КАК GUIDКонфЕдиницы,
	|	ВТ_ПрослеживаемыйТовар.Цена КАК Цена,
	|	ВТ_СведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СУММА(ВТ_СведенияПрослеживаемости.Количество) КАК Количество
	|ИЗ
	|	ВТ_ПрослеживаемыйТовар КАК ВТ_ПрослеживаемыйТовар
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияПрослеживаемости КАК ВТ_СведенияПрослеживаемости
	|		ПО ВТ_ПрослеживаемыйТовар.ИдентификаторСтроки = ВТ_СведенияПрослеживаемости.ИдентификаторСтроки
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПрослеживаемыйТовар.GUIDКонфЕдиницы,
	|	ВТ_ПрослеживаемыйТовар.Цена,
	|	ВТ_СведенияПрослеживаемости.РНПТ";
	РезультатЗапроса = ЗапросРНПТ.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТабСведенияПрослеживаемости = Объект.СведенияПрослеживаемости;
		ТабСведенияПрослеживаемости.Очистить();
		
		ТабПрослеживаемость = РезультатЗапроса.Выгрузить();
		ТаблицаНоменклатура = ТабПрослеживаемость.Скопировать();
		ТаблицаНоменклатура.Свернуть("GUIDКонфЕдиницы, Цена");
		ТаблицаНоменклатура.Колонки.Добавить("ИДСтроки", ТипСтрока);
		
		Для Каждого Строка Из ТаблицаНоменклатура Цикл
			Строка.ИДСтроки = Строка(Новый УникальныйИдентификатор());
		КонецЦикла;
		
		Для Каждого Строка Из ТабПрослеживаемость Цикл
			НомраГУИД = Новый УникальныйИдентификатор(Строка.GUIDКонфЕдиницы);
			НоменклатураСсылка = Справочники.Номенклатура.ПолучитьСсылку(НомраГУИД);
			
			НоваяСтрока = ТабСведенияПрослеживаемости.Добавить();
			НоваяСтрока.РНПТ = Строка.РНПТ;
			НоваяСтрока.Количество = Строка.Количество;
			НоваяСтрока.КоличествоПрослеживаемости = НоваяСтрока.Количество;
			
			СтруктураОтбор = Новый Структура("GUIDКонфЕдиницы, Цена", Строка.GUIDКонфЕдиницы, Строка.Цена);
			РезультатОтбора = ТаблицаНоменклатура.НайтиСтроки(СтруктураОтбор);
			Для Каждого Стр Из РезультатОтбора Цикл
				ИДСтроки = Стр.ИДСтроки;
			КонецЦикла;
			
			НоваяСтрока.ИдентификаторСтроки = ИДСтроки;
			НоваяСтрока.СтранаПроисхождения = НоменклатураСсылка.СтранаПроисхождения;
			
			СтруктураОтбор = Новый Структура("Номенклатура, Цена", НоменклатураСсылка, Строка.Цена);
			ПоискОборудование = ТабОборудование.НайтиСтроки(СтруктураОтбор);
			Для Каждого СтрокаОборудование Из ПоискОборудование Цикл
				СтрокаОборудование.ИдентификаторСтроки = ИДСтроки;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	МенеджерВремТаб.Закрыть();
	
ИначеЕсли ТипЗнч(ДокОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
	
	Для Каждого ОбъектКоллекции Из Объект.Оборудование Цикл
		
		ОбъектКоллекции.Коэффициент = 1;
		
		ОбъектКоллекции.Сумма = ОбъектКоллекции.Цена * ОбъектКоллекции.Количество;
		
		СтавкаНДСЦифрой = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ОбъектКоллекции.СтавкаНДС, Ложь);
		
		ОбъектКоллекции.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ОбъектКоллекции.Сумма, 
			Объект.СуммаВключаетНДС, СтавкаНДСЦифрой);
		
		СчетаУчетаВДокументах.ЗаполнитьСтроки(Объект.Оборудование, "Оборудование",
		ДанныеОбъекта, Документы.ПоступлениеТоваровУслуг, Истина);
			
		ОбъектКоллекции.ПрослеживаемыйКомплект = ОбъектКоллекции.Номенклатура.ПрослеживаемыйКомплект;
		ОбъектКоллекции.СтранаПроисхождения = ОбъектКоллекции.Номенклатура.СтранаПроисхождения;
		ОбъектКоллекции.ПрослеживаемыйТовар = ОбъектКоллекции.Номенклатура.ПрослеживаемыйТовар;
		ОбъектКоллекции.пит_Проект = Объект.пит_Проект;
		
	КонецЦикла;
	
	ТЗСведенияПрослеживаемости = ДокОснование.СведенияПрослеживаемости.Выгрузить();
	ТЗДокументаОснования = ДокОснование.Товары.Выгрузить();
	
	Для Каждого Строка Из Объект.Оборудование Цикл
		СтрокаТЗ = ТЗДокументаОснования.Найти(Строка.Номенклатура, "Номенклатура");
		Строка.ИдентификаторСтроки = СтрокаТЗ.ИдентификаторСтроки;
	КонецЦикла;
	
	Объект.СведенияПрослеживаемости.Загрузить(ТЗСведенияПрослеживаемости);
	
КонецЕсли;

Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Оборудование");

Объект.Записать();

Если ЗначениеЗаполнено(Ссылка) Тогда
	СсылкаНаДокумент = Ссылка;
ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка) Тогда
	СсылкаНаДокумент = Объект.Ссылка;
Иначе
	СсылкаНаДокумент = Неопределено;
КонецЕсли;

Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
	ВидДоговора = Объект.ДоговорКонтрагента.ВидДоговора;
	ЭтоКомиссияНаЗакупку = ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку;
Иначе
	ЭтоКомиссияНаЗакупку = Ложь;
КонецЕсли;

Если ЗначениеЗаполнено(Объект.Контрагент) И ЭтоКомиссияНаЗакупку Тогда
	Продавец = Объект.Контрагент;
Иначе
	Продавец = Неопределено;
КонецЕсли;

ПараметрыСозданияСчетаФактуры = УчетНДСКлиентСервер.НовыеПараметрыСозданияПолученногоСчетаФактуры();
ПараметрыСозданияСчетаФактуры.Основание = СсылкаНаДокумент;
ПараметрыСозданияСчетаФактуры.НомерСчетаФактурыПолученного = ДокОснование.Номер;
ПараметрыСозданияСчетаФактуры.ДатаСчетаФактурыПолученного = ДокОснование.Дата;

ПараметрыСозданияСчетаФактуры.Продавец = Продавец;

СтруктураОтбора = Неопределено;

Результат = УчетНДСВызовСервера.СоздатьСчетФактуруПолученныйНаОсновании(
ПараметрыСозданияСчетаФактуры, СтруктураОтбора);

Объект.НомерВходящегоДокумента = ДокОснование.Номер;
Объект.ДатаВходящегоДокумента = ДокОснование.Дата;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.ПР_ПоступлениеТоваровУслугДляОбмена</Источник>
				<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Склад --&gt; Склад</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПодразделениеОрганизации --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>5</Код>
						<Наименование>Оборудование --&gt; Оборудование</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Оборудование" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="Оборудование" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>6</Код>
							<Наименование>КонфигурационнаяЕдиница --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="КонфигурационнаяЕдиница" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ЕдиницаИзмерения --&gt; ЕдиницаИзмерения</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
							<Приемник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; СтавкаНДС</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Значение = Перечисления.СтавкиНДС.НДС20;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>Цена --&gt; Цена</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>10</Код>
						<Наименование>ОрганизацияОтправитель --&gt; ОрганизацияКонтрагент</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ОрганизацияОтправитель" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ОрганизацияКонтрагент</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>ДокументВыдачи --&gt; ВидДокументаВыдачи</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="ДокументВыдачи" Вид="Реквизит"/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ВидДокументаВыдачи</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>Если ТипЗнч(Источник.ДокументВыдачи) = Тип("ДокументСсылка.ПР_РеализацияТовараДляОбмена") Тогда
	Значение = "РеализацияТоваровУслуг";
ИначеЕсли ТипЗнч(Источник.ДокументВыдачи) = Тип("ДокументСсылка.ПР_ПередачаОСДляОбмена") Тогда
	Значение = "ПередачаОС";
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>ДокументВыдачи --&gt; ГУИДДокументаВыдачи</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="ДокументВыдачи" Вид="Реквизит"/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ГУИДДокументаВыдачи</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>ДокВыдачи = Источник.ДокументВыдачи;
Если ЗначениеЗаполнено(ДокВыдачи) Тогда
	Значение = Строка(ДокВыдачи.УникальныйИдентификатор());
Иначе
	Значение = "";
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; ТаблицаСоответствийКЕ</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ТаблицаСоответствийКЕ</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>Если ТипЗнч(Источник.ДокументВыдачи) = Тип("ДокументСсылка.ПР_ПередачаОСДляОбмена") Тогда
	ТаблицаСоответствий = Источник.СоответствиеКЕАктив.Выгрузить();
	ТаблицаСоответствий.Свернуть("КонфигурационнаяЕдиница, Актив");
	ТаблицаСоответствий.Колонки.Добавить("АктивСсылка", Новый ОписаниеТипов("СправочникСсылка.itilprofАктивы"));
	
	Для Каждого Строка Из ТаблицаСоответствий Цикл
		АктивГУИД = Новый УникальныйИдентификатор(Строка.Актив);
		Строка.АктивСсылка = Справочники.itilprofАктивы.ПолучитьСсылку(АктивГУИД);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТабСоответствий", ТаблицаСоответствий);
	Запрос.УстановитьПараметр("Источник", Источник.ДокументОснование);
	Запрос.УстановитьПараметр("МоментВремени", Источник.Дата);
	Запрос.Текст = "ВЫБРАТЬ
	|	ТабСоответствий.КонфигурационнаяЕдиница КАК КонфигурационнаяЕдиница,
	|	ТабСоответствий.Актив КАК Актив,
	|	ТабСоответствий.АктивСсылка КАК АктивСсылка
	|ПОМЕСТИТЬ ВТ_Соответствий
	|ИЗ
	|	&amp;ТабСоответствий КАК ТабСоответствий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Соответствий.КонфигурационнаяЕдиница КАК КонфигурационнаяЕдиница,
	|	ВТ_Соответствий.Актив КАК Актив,
	|	ВТ_Соответствий.АктивСсылка КАК АктивСсылка,
	|	РегистрАктивы.Регистратор КАК ДокПрихода,
	|	РегистрАктивы.Регистратор.Дата КАК ДатаПрихода
	|ПОМЕСТИТЬ ВТ_ПриходыПоАктиву
	|ИЗ
	|	ВТ_Соответствий КАК ВТ_Соответствий
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.itilprofАктивы КАК РегистрАктивы
	|		ПО ВТ_Соответствий.АктивСсылка = РегистрАктивы.Актив
	|ГДЕ
	|	РегистрАктивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РегистрАктивы.Регистратор ССЫЛКА Документ.itilprofПеремещениеАктивов
	|	И РегистрАктивы.Регистратор &lt;&gt; &amp;Источник
	|	И РегистрАктивы.Регистратор.Проведен
	|	И РегистрАктивы.Регистратор.ПР_Цель = ЗНАЧЕНИЕ(Справочник.ПР_ЦелиПеремещения.ВводВЭксплуатацию)
	|	И РегистрАктивы.Период &lt;= &amp;МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПриходыПоАктиву.АктивСсылка КАК АктивСсылка,
	|	МАКСИМУМ(ВТ_ПриходыПоАктиву.ДатаПрихода) КАК ДатаПрихода
	|ПОМЕСТИТЬ ВТ_ПоследниеПриходы
	|ИЗ
	|	ВТ_ПриходыПоАктиву КАК ВТ_ПриходыПоАктиву
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПриходыПоАктиву.АктивСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПриходыПоАктиву.КонфигурационнаяЕдиница КАК КонфигурационнаяЕдиница,
	|	ВТ_ПриходыПоАктиву.Актив КАК Актив,
	|	ВТ_ПриходыПоАктиву.ДокПрихода КАК ДокПрихода
	|ИЗ
	|	ВТ_ПриходыПоАктиву КАК ВТ_ПриходыПоАктиву
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследниеПриходы КАК ВТ_ПоследниеПриходы
	|		ПО ВТ_ПриходыПоАктиву.АктивСсылка = ВТ_ПоследниеПриходы.АктивСсылка
	|			И ВТ_ПриходыПоАктиву.ДатаПрихода = ВТ_ПоследниеПриходы.ДатаПрихода
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПриходыПоАктиву.КонфигурационнаяЕдиница,
	|	ВТ_ПриходыПоАктиву.Актив,
	|	ВТ_ПриходыПоАктиву.ДокПрихода";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	МассивПередачи = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		СтруктураПередачи = Новый Структура();
		СтруктураПередачи.Вставить("КонфигурационнаяЕдиница", Выборка.КонфигурационнаяЕдиница);
		СтруктураПередачи.Вставить("Актив", Выборка.Актив);
		
		GUIDПрихода = Выборка.ДокПрихода.УникальныйИдентификатор();
		СтруктураПередачи.Вставить("GUIDПрихода", Строка(GUIDПрихода));
		
		МассивПередачи.Добавить(СтруктураПередачи);
	КонецЦикла;
	
	Значение = ЗначениеВСтрокуВнутр(МассивПередачи);
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПередачаОС</Код>
				<Наименование>Документ: Перемещение активов</Наименование>
				<Порядок>800</Порядок>
				<ПослеЗагрузки>ИмяТаблицы = "ОС";

Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
Объект.СобытиеОС = Справочники.СобытияОС.НайтиПоРеквизиту("ВидСобытияОС", Перечисления.ВидыСобытийОС.Передача);
Объект.КурсВзаиморасчетов = 1;
Объект.КратностьВзаиморасчетов = 1;  
Объект.НДСВключенВСтоимость = Ложь;
Объект.ЭтоУниверсальныйДокумент = Истина;

ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла;

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Объект.Ответственный = ОтветственныйИзГРАО;
КонецЕсли;

Запрос = Запросы.ПоискПроектаПерепродажи;
Объект.пит_Проект = Запрос.Выполнить().Выгрузить()[0].Проект;

Объект.СуммаВключаетНДС = Истина;
Объект.пит_ФактическаяДатаВводаОС = Объект.Дата;

Запрос = Запросы.ПоискКонтрагентаПоОрганизации;
Запрос.УстановитьПараметр("ОрганизацияКонтрагент", Объект.Организация);
Выборка = Запрос.Выполнить().Выбрать();

Грузоотправитель = Неопределено;
Пока Выборка.Следующий() Цикл
	Грузоотправитель = Выборка.Контрагент;
КонецЦикла;

Если ЗначениеЗаполнено(Грузоотправитель) Тогда
	Объект.Грузоотправитель = Грузоотправитель;
КонецЕсли;

Запрос = Запросы.ПоискКонтрагентаПоОрганизации;
ОрганизацияКонтрагент = ПараметрыОбъекта["ОрганизацияКонтрагент"];
Запрос.УстановитьПараметр("ОрганизацияКонтрагент", ОрганизацияКонтрагент);
Выборка = Запрос.Выполнить().Выбрать();

Грузополучатель = Неопределено;
Пока Выборка.Следующий() Цикл
	Грузополучатель = Выборка.Контрагент;
КонецЦикла;

Если ЗначениеЗаполнено(Грузополучатель) Тогда
	
	Объект.Грузополучатель = Грузополучатель;
	Объект.Контрагент = Грузополучатель;   
	Объект.УчаствуетВЭДО = Грузополучатель.РаботаетПоЭДО;
	
	Запрос = Запросы.ПоискДоговораПоКонтрагентуИОрганизации;
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Договор = Неопределено;
	Валюта = Неопределено;
	Пока Выборка.Следующий() Цикл
		Договор = Выборка.Договор;
		Валюта = Выборка.Валюта;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Договор) Тогда
		Объект.ДоговорКонтрагента = Договор;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Валюта) Тогда
		Объект.ВалютаДокумента = Валюта;
	КонецЕсли;
	
КонецЕсли;

ДанныеОбъекта = Новый Структура(
"Дата, ВидОперации, Организация, Склад, ТипЦен, СуммаВключаетНДС,
|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов, Контрагент, НДСНеВыделять, ЕстьРасхождения, 
|СчетУчетаРасчетовСКонтрагентом, СчетУчетаРасчетовПоАвансам"); 		
ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);

МенеджерОбъекта = Документы["ПередачаОС"];  
МенеджерОбъекта.ЗаполнитьСчетаУчетаРасчетов(Объект);

НовоеОС = Неопределено;

Запрос = Запросы.ПоискСтатьиДохода;                 
Статья651 = Запрос.Выполнить().Выгрузить()[0].СтатьяДохода;  

Запрос = Запросы.ПоискСтатьиДохода652;                 
Статья652 = Запрос.Выполнить().Выгрузить()[0].СтатьяДохода;  

НУСоответствует = Истина;
ДатаСоответствует = Истина;

Субконто = Неопределено;

Для Каждого ОбъектКоллекции Из Объект.ОС Цикл
	
	Выполнить(Алгоритмы.ЗаменаОСПоРегиструСоответствия);
	
	Если ЗначениеЗаполнено(НовоеОС) Тогда
		ОбъектКоллекции.ОсновноеСредство = НовоеОС;
		ОбъектКоллекции.КодТНВЭД = НовоеОС.КодТНВЭД;
		ОбъектКоллекции.ПрослеживаемыйТовар = НовоеОС.ПрослеживаемыйТовар;
		Выполнить(Алгоритмы.РасчетЦеныСуммыСуммыНДСПередачаОС);
	КонецЕсли;

	ОбъектКоллекции.СчетДоходов = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
	ОбъектКоллекции.СчетРасходов = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
	
	Если ЗначениеЗаполнено(Субконто) Тогда
		ОбъектКоллекции.Субконто = Субконто;
	КонецЕсли;
			
	Если ОбъектКоллекции.СтавкаНДС &lt;&gt; Перечисления.СтавкиНДС.БезНДС Тогда 		
		ОбъектКоллекции.СчетУчетаНДСПоРеализации = ОбъектКоллекции.СчетРасходов;
	КонецЕсли;
	
	ПараметрыОС = Новый Структура("Организация", Объект.Организация);
	ПараметрыОС.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.пит_ВидыОперацийОС.ВводОС")); 
	ПараметрыОС.Вставить("Дата", Дата(1,1,1)); 
	
	МассивОС = Новый Массив;
	МассивОС.Добавить(ОбъектКоллекции.ОсновноеСредство);
	
	ПараметрыОС.Вставить("ОС", МассивОС); 	
	
	ДатаВводаВЭксплуатацию = РегистрыСведений.пит_ФактДатаОС.ПолучитьФактическуюДатуОС(ПараметрыОС); 
	
	МесяцНачала = Месяц(Объект.Дата);
	МесяцКонца = Месяц(ДатаВводаВЭксплуатацию);
	ЛетМеждуДатами = Год(Объект.Дата) - Год(ДатаВводаВЭксплуатацию);
	РезультатВМесяцах = ЛетМеждуДатами * 12 - МесяцНачала + МесяцКонца;
	
	Если РезультатВМесяцах &gt; 60 Тогда
		ДатаСоответствует = Ложь;
	КонецЕсли;
	
КонецЦикла;  

ДопРеквизит = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "пит_КатегорияДоговора");
Строка = Неопределено;
Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
	Строка = Объект.ДоговорКонтрагента.ДополнительныеРеквизиты.Найти(ДопРеквизит, "Свойство");   
КонецЕсли; 

Запрос = Запросы.ПоискКатегорииДоговора;
КатегорияДоговора = Запрос.Выполнить().Выгрузить()[0].КатегорияДоговора;

КатегорияСоответствует = Строка &lt;&gt; Неопределено И Строка.Значение = КатегорияДоговора;

Объект.ВосстановитьАмортизационнуюПремию = НУСоответствует И КатегорияСоответствует И ДатаСоответствует;	

Если Объект.ВосстановитьАмортизационнуюПремию Тогда
	Объект.СтатьяДляВосстановленияАмортизационнойПремии = Справочники.ПрочиеДоходыИРасходы.ВосстановлениеАмортизационнойПремии;	
КонецЕсли;

Выполнить(Алгоритмы.ЗаполнениеСведенийПрослеживаемости);     

Запрос = Запросы.УчавствуетВЭДОЗапрос; 
Запрос.УстановитьПараметр("Ссылка", Объект.Грузополучатель);
Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "КонтрагентРаботаетПоЭДОУслугиИсходящие"));

РезультатЗапроса = Запрос.Выполнить();

ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	Объект.УчаствуетВЭДО = ВыборкаДетальныеЗаписи.Значение;
КонецЕсли;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.ПР_ПередачаОСДляОбмена</Источник>
				<Приемник>ДокументСсылка.ПередачаОС</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПодразделениеОрганизации --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>ОС --&gt; ОС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>8</Код>
							<Наименование>ЕдиницаИзмерения --&gt; ЕдиницаИзмерения</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
							<Приемник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
							<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; СтавкаНДС</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<ПередВыгрузкой>Значение = Перечисления.СтавкиНДС.НДС20;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Цена --&gt; Цена</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ГУИДПрихода</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДПрихода</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>ЗапросПрихода = Новый Запрос("ВЫБРАТЬ
|	itilprofАктивы.Регистратор КАК Регистратор,
|	itilprofАктивы.Период КАК Период,
|	itilprofАктивы.ПР_Фирма КАК ПР_Фирма,
|	itilprofАктивы.Актив КАК Актив
|ИЗ
|	РегистрНакопления.itilprofАктивы КАК itilprofАктивы
|ГДЕ
|	itilprofАктивы.Актив = &amp;Актив
|	И itilprofАктивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
|	И itilprofАктивы.Регистратор ССЫЛКА Документ.itilprofПеремещениеАктивов
|	И itilprofАктивы.Регистратор &lt;&gt; &amp;Источник
|	И itilprofАктивы.Период &lt;= &amp;МоментВремени
|	И itilprofАктивы.Регистратор.Проведен
|	И itilprofАктивы.Регистратор.ПР_Цель = ЗНАЧЕНИЕ(Справочник.ПР_ЦелиПеремещения.ВводВЭксплуатацию)
|   И НЕ itilprofАктивы.Регистратор.ПР_ПеремещениеПослеИнвентаризации 
|
|УПОРЯДОЧИТЬ ПО
|	Период УБЫВ");

ЗапросПрихода.УстановитьПараметр("Актив", ОбъектКоллекции.Актив);
ЗапросПрихода.УстановитьПараметр("МоментВремени", Источник.Дата);
ЗапросПрихода.УстановитьПараметр("Источник", Источник.ДокументОснование);

ТЗПрихода = ЗапросПрихода.Выполнить().Выгрузить(); 
Если ТЗПрихода.Количество() &gt; 0 Тогда
	Значение = Строка(ТЗПрихода[0].Регистратор.УникальныйИдентификатор());     
Иначе
	Значение = "00000000-0000-0000-0000-000000000000";     
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ГУИДОС</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДОС</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = Строка(ОбъектКоллекции.Актив.Ссылка.УникальныйИдентификатор());</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ИнвентарныйНомер</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ИнвентарныйНомер</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.Актив.Код;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>9</Код>
						<Наименование>ОрганизацияПолучатель --&gt; ОрганизацияКонтрагент</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ОрганизацияПолучатель" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ОрганизацияКонтрагент</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПереносПризнакаПометкаУдаленияИНеПроведен</Код>
				<Наименование>:</Наименование>
				<Порядок>850</Порядок>
				<ПослеЗагрузки>Объект.ДополнительныеСвойства.Вставить("НеЗаписывать", Истина);

GUIDИсточника = ПараметрыОбъекта.Получить("GUIDИсточника");
ИмяМетаданныхПриемника = ПараметрыОбъекта.Получить("ИмяМетаданныхПриемника");

ОбъектНайденВБазе = Ложь;

Попытка
	
	СсылкаДокумента = Документы[ИмяМетаданныхПриемника].ПолучитьСсылку(Новый УникальныйИдентификатор(GUIDИсточника));
	
	Если ЗначениеЗаполнено(СсылкаДокумента) Тогда
		НайденныйОбъект = СсылкаДокумента.ПолучитьОбъект();
	КонецЕсли; 
	
	ОбъектНайденВБазе = НайденныйОбъект &lt;&gt; Неопределено;
	
Исключение
	
	ТекстСообщения = "ОШИБКА ЗАГРУЗКИ: Не удалось получить Объект "+ ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	Выполнить(Алгоритмы.ЗаписатьВПротоколЗагрузкаТолькоИнформация); 
	
КонецПопытки;

Если ОбъектНайденВБазе Тогда
	
	Попытка 
		
		ПроверкаДатыЗапрета = ДатыЗапретаИзмененияСлужебный.ПроверитьДатыЗапретаИзмененияЗагрузкиДанных(НайденныйОбъект, Ложь, Ложь, Ложь);
		Отказ = ПроверкаДатыЗапрета.ИзменениеЗапрещено;
		Если Отказ Тогда
			ТекстСообщения = "ЗАПРЕТ ЗАГРУЗКИ: Дата запрета редактирования";
			Выполнить(Алгоритмы.ЗаписатьВПротоколЗагрузкаТолькоИнформация);
		КонецЕсли;
		
	Исключение 
		
		Отказ = Истина;
		ТекстСообщения = "ЗАПРЕТ ЗАГРУЗКИ: " + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Выполнить(Алгоритмы.ЗаписатьВПротоколЗагрузкаТолькоИнформация);
		
	КонецПопытки;
	
	Если Не Отказ Тогда
		
		ЕстьПараметрПометкаУдаления = ПараметрыОбъекта.Получить("ПометкаУдаления"); 		
		ЕстьПараметрПроведен = ПараметрыОбъекта.Получить("Проведен");
		
		НеЗамещатьОбъект = Не ЕстьПараметрПроведен ИЛИ ЕстьПараметрПометкаУдаления;	
		
		Если ЕстьПараметрПометкаУдаления Тогда
			
			Попытка
				НайденныйОбъект.УстановитьПометкуУдаления(Истина);
				НаборЗаписей = РегистрыСведений.пит_ОчередьОтложенногоПроведения.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Документ.Установить(СсылкаДокумента);
				НаборЗаписей.Записать(Истина);
			Исключение
				ТекстСообщения = "ОШИБКА ЗАГРУЗКИ: " + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				Выполнить(Алгоритмы.ЗаписатьВПротоколЗагрузкаТолькоИнформация);
			КонецПопытки;
			
		ИначеЕсли Не ЕстьПараметрПроведен Тогда 
			
			Попытка
				НайденныйОбъект.УстановитьПометкуУдаления(Истина);
				НаборЗаписей = РегистрыСведений.пит_ОчередьОтложенногоПроведения.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Документ.Установить(СсылкаДокумента);
				НаборЗаписей.Записать(Истина);
			Исключение
				ТекстСообщения = "ОШИБКА ЗАГРУЗКИ: " + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());;
				Выполнить(Алгоритмы.ЗаписатьВПротоколЗагрузкаТолькоИнформация);
				
			КонецПопытки; 
			
		КонецЕсли;
		
	КонецЕсли;
Иначе
	Отказ = Истина;
	ТекстСообщения = "ЗАПРЕТ ЗАГРУЗКИ: Новые, но помеченные на удаление документы не сохраняем.";
	Выполнить(Алгоритмы.ЗаписатьВПротоколЗагрузкаТолькоИнформация);
	
КонецЕсли;
ОбъектМодифицирован = Ложь;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Приемник>ДокументСсылка.ПеремещениеТоваров</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; GUIDИсточника</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>GUIDИсточника</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ИмяМетаданныхПриемника</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ИмяМетаданныхПриемника</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Проведен</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Проведен</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ПометкаУдаления</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>МодернизацияОС</Код>
				<Наименование>Документ: Модернизация ОС (для обмена)</Наименование>
				<Порядок>900</Порядок>
				<ПослеЗагрузки>ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла; 

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Объект.Ответственный = ОтветственныйИзГРАО;
КонецЕсли;           

Объект.СобытиеОС = Справочники.СобытияОС.НайтиПоРеквизиту("ВидСобытияОС", Перечисления.ВидыСобытийОС.Модернизация);
Объект.СчетУчетаВнеоборотногоАктива = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;

//Расчет стоимостей БУ/НУ/ПР/ВР
СтруктураСтоимости = УчетОСВызовСервера.РассчитатьСтоимостьОбъектаСтроительства(Объект.Организация,
Объект.ПодразделениеОрганизации, КонецМесяца(Объект.Дата), Объект.СчетУчетаВнеоборотногоАктива, Объект.ОбъектСтроительства);

ЗаполнитьЗначенияСвойств(Объект, СтруктураСтоимости);

Объект.СтоимостьУСН = СтруктураСтоимости.СтоимостьБУ;
ПолныйАпгрейдАктива = ПараметрыОбъекта["ПолныйАпгрейдАктива"];

Для Каждого Строка Из Объект.ОС Цикл
	ОСТабличнаяЧасть = ПараметрыОбъекта["ОСТабличнаяЧасть"];
	ИндексСтроки = Объект.ОС.Индекс(Строка);
	СтрокаТЧ = ОСТабличнаяЧасть.Получить(ИндексСтроки);
	ГУИДАктива = СтрокаТЧ.ГУИДАктив;
	ГУИДПрихода = СтрокаТЧ.ГУИДПрихода;
	СрокПолезногоИспользвания = СтрокаТЧ.СрокПолезногоИспользования; 
	
	Запись = РегистрыСведений.пр_ОсновныеСредстваITIL.СоздатьМенеджерЗаписи();
	Запись.GUIDОСВITIL = ГУИДАктива;
	Запись.GUIDПриходаВITIL = ГУИДПрихода; 
	Запись.Организация = Объект.Организация;
	Запись.Прочитать();
	Строка.ОсновноеСредство = Запись.ОсновноеСредство; 
	
	СтруктураСведений = Неопределено;
	Выполнить(Алгоритмы.ДопСведенияТЧМодернизацииОС); 
	ЗаполнитьЗначенияСвойств(Строка, СтруктураСведений,,"ОбъемПродукцииРаботБУ");  
	
	Строка.ПрослеживаемыйТовар = ПрослеживаемостьФормыВызовСервера.ПолучитьПризнакПрослеживаемости(Строка.ОсновноеСредство); 

	Если Строка.ПрослеживаемыйТовар Тогда
		Строка.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;
	
	Если ПолныйАпгрейдАктива Тогда	
		Строка.СрокПолезногоИспользованияБУ = Строка.СрокПолезногоИспользованияБУ + СрокПолезногоИспользвания;
	КонецЕсли;
КонецЦикла;

ЕстьУчетНУ = Ложь;
ЗапросУчета = Запросы.НайтиОСВБухУчете;
ЗапросУчета.УстановитьПараметр("Субконто1", Объект.ОС[0].ОсновноеСредство);
ЗапросУчета.УстановитьПараметр("Счет", Пит_общегоназначения.СчетУчетаПоКоду("01"));
ВыборкаУчета = ЗапросУчета.Выполнить().Выбрать();	

ВключатьАмортизационнуюПремиюВСоставРасходов = ВыборкаУчета.Следующий() Или Объект.СтоимостьБУ &gt; 100000; // поменять условие

Если ВключатьАмортизационнуюПремиюВСоставРасходов И Объект.ОС.Количество() &gt; 0 Тогда
	
	ОсновноеСредство = Объект.ОС[0].ОсновноеСредство;
	Если ЗначениеЗаполнено(ОсновноеСредство) Тогда
		
		СтруктураПараметровАмортизационнойПремии = 
		УчетОСВызовСервера.ПараметрыНачисленияАмортизационнойПремии(ОсновноеСредство, Объект.Организация, Объект.Дата);
		Если СтруктураПараметровАмортизационнойПремии &lt;&gt; Неопределено Тогда
			ЗаполнитьЗначенияСвойств(Объект, СтруктураПараметровАмортизационнойПремии);
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;

Запрос = Запросы.МОЛиМестонахождениеОСИзРС;
Запрос.УстановитьПараметр("ОсновноеСредство", Объект.ОС[0].ОсновноеСредство);  
Выборка = Запрос.Выполнить().Выбрать();	
Если Выборка.Следующий() Тогда
	Объект.МестонахождениеОС = Выборка.Местонахождение;
	Объект.пит_МОЛБУ = Выборка.МОЛ;
	Объект.пит_СубконтоПоМодернизацияВНУ1 = Объект.МестонахождениеОС;
	Объект.пит_ПодразделениеОрганизацииПоМодернизацияВНУ = Объект.МестонахождениеОС;
КонецЕсли;

ПроверкаДляСтатьиРасхода = Пит_общегоназначения.пит_ДоступностьСтатьиДоходаРасхода(Объект.СчетУчетаЗатратПоАмортизационнойПремии, 
													Пит_общегоназначения.СчетУчетаПоКоду("91.02"),
													Объект.Дата,
													Объект.СубконтоПоАмортизационнойПремии1,
													"Расходы");
													
Если ПроверкаДляСтатьиРасхода Тогда
	Объект.пит_СтатьяРасхода = Пит_общегоназначения.СчетУчетаПоКоду("18.5");
КонецЕсли;  

Если Не ВключатьАмортизационнуюПремиюВСоставРасходов Тогда 
	Запрос = Запросы.НайтиСтатьюЗатратМодернизацияОСВГРАО;
	Выборка = Запрос.Выполнить().Выбрать();	
	Если Выборка.Следующий() Тогда
		Объект.пит_СтатьяЗатрат = Выборка.Статья;
	КонецЕсли;
	
	Запрос = Запросы.НайтиСубконтоПоМодернизацииВНУ2МодернизацияОСВГРАО;
	Выборка = Запрос.Выполнить().Выбрать();	
	Если Выборка.Следующий() Тогда
		Объект.пит_СубконтоПоМодернизацияВНУ2 = Выборка.СубконтоВНУ2;
	КонецЕсли;
КонецЕсли;

ТаблицаОС = Объект.ОС.Выгрузить();

Показатели = Новый Массив;
Показатели.Добавить("БУ");
Показатели.Добавить("НУ");
Показатели.Добавить("ПР");
Показатели.Добавить("УСН");

Коэффициенты = Новый Массив;
Для Счетчик = 1 По ТаблицаОС.Количество() Цикл
	Коэффициенты.Добавить(1);
КонецЦикла;

Для Каждого Показатель Из Показатели Цикл
	
	МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Объект["Стоимость" + Показатель], Коэффициенты);
	
	Если МассивСумм &lt;&gt; Неопределено Тогда
		ТаблицаОС.ЗагрузитьКолонку(МассивСумм, "СуммаМодернизации" + Показатель);
	КонецЕсли;
	
КонецЦикла;

Запрос = Запросы.ПоискПодразделения;
Запрос.УстановитьПараметр("ОрганизацияКонтрагент", Объект.Организация);
Запрос.УстановитьПараметр("КлючСтрока", "ПапкаДирекцияСобственногоПроизводства");
Выборка = Запрос.Выполнить().Выбрать(); 

ПапкаВГРАО = Неопределено;
Пока Выборка.Следующий() Цикл
	ПапкаВГРАО = Выборка.Подразделение;
КонецЦикла;

Запрос.УстановитьПараметр("КлючСтрока", "Подразделение1210СПБуфетЦО");
Выборка = Запрос.Выполнить().Выбрать(); 

СсылкаБуфетИзГРАО = Неопределено;
Пока Выборка.Следующий() Цикл
	СсылкаБуфетИзГРАО = Выборка.Подразделение;
КонецЦикла;

Запрос = Запросы.ПоискСчетаУчета;
Если ЗначениеЗаполнено(Объект.ПодразделениеОрганизацииПоАмортизационнойПремии) И ЗначениеЗаполнено(ПапкаВГРАО) И ЗначениеЗаполнено(СсылкаБуфетИзГРАО) 
	И (Не Объект.ПодразделениеОрганизацииПоАмортизационнойПремии.ПринадлежитЭлементу(ПапкаВГРАО)
	Или Объект.ПодразделениеОрганизацииПоАмортизационнойПремии = СсылкаБуфетИзГРАО) Тогда 
	Запрос.УстановитьПараметр("КлючСтрока", "СчетУчета44_01");
Иначе
	Запрос.УстановитьПараметр("КлючСтрока", "СчетУчета26");
КонецЕсли;

Выборка = Запрос.Выполнить().Выбрать();
СчетЗатрат = Неопределено;
Пока Выборка.Следующий() Цикл
	СчетЗатрат = Выборка.СчетУчета;
КонецЦикла;

Объект.пит_СчетУчетаЗатратПоМодернизацияВНУ = СчетЗатрат;

Для Каждого СтрокаТаблицы Из ТаблицаОС Цикл
	
	СтрокаТаблицы.СуммаМодернизацииВР = СтрокаТаблицы.СуммаМодернизацииБУ
	- СтрокаТаблицы.СуммаМодернизацииНУ - СтрокаТаблицы.СуммаМодернизацииПР;
	
КонецЦикла;

Объект.ОС.Загрузить(ТаблицаОС);

Для Каждого Строка Из Объект.ОС Цикл
	Если Строка.ПрослеживаемыйТовар Тогда
		НоваяСтрока = Объект.СведенияПрослеживаемости.Добавить();
		НоваяСтрока.ИдентификаторСтроки = Строка.ИдентификаторСтроки;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.КоличествоПрослеживаемости = 1;
		
		Запрос = Запросы.ЗапросСведенийПрослеживаемостиПоОС;
		Запрос.УстановитьПараметр("ОсновноеСредство", Строка.ОсновноеСредство);  
		Запрос.УстановитьПараметр("Организация", Объект.Организация);  
		Выборка = Запрос.Выполнить().Выбрать();	
		Если Выборка.Следующий() Тогда
			НоваяСтрока.СтранаПроисхождения = Выборка.СтранаПроисхождения;
			НоваяСтрока.РНПТ = Выборка.РНПТ;
		КонецЕсли;   
		
		НоваяСтрока.Номенклатура = Выборка.Комплектующие;
	КонецЕсли;
КонецЦикла;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.ПР_МодернизацияОСДляОбмена</Источник>
				<Приемник>ДокументСсылка.МодернизацияОС</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ОбъектСтроительства --&gt; ОбъектСтроительства</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ОбъектСтроительства" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
						<Приемник Имя="ОбъектСтроительства" Вид="Реквизит" Тип="СправочникСсылка.ОбъектыСтроительства"/>
						<КодПравилаКонвертации>ОбъектыСтроительстваНельзяСоздать                 </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Договор --&gt; пит_Договор</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Договор" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
						<Приемник Имя="пит_Договор" Вид="Реквизит" Тип="СправочникСсылка.ДоговорыКонтрагентов"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ДокументПоступления --&gt; пит_ДокументПоступление</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ДокументПоступления" Вид="Реквизит" Тип="ДокументСсылка.itilprofПоступлениеАктивов"/>
						<Приемник Имя="пит_ДокументПоступление" Вид="Реквизит"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Контрагент --&gt; пит_Контрагент</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="пит_Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>Проект --&gt; пит_Проект</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Проект" Вид="Реквизит" Тип="СправочникСсылка.ПР_Проекты"/>
						<Приемник Имя="пит_Проект" Вид="Реквизит" Тип="СправочникСсылка.пит_Проекты"/>
					</Свойство>
					<Группа>
						<Код>10</Код>
						<Наименование>ОС --&gt; ОС</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ГУИДАктив</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДАктив</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = Строка(ОбъектКоллекции.ОсновноеСредство.УникальныйИдентификатор());</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ГУИДПрихода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДПрихода</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>ЗапросПрихода = Новый Запрос("ВЫБРАТЬ
|	itilprofАктивы.Регистратор КАК Регистратор,
|	itilprofАктивы.Период КАК Период,
|	itilprofАктивы.ПР_Фирма КАК ПР_Фирма,
|	itilprofАктивы.Актив КАК Актив
|ИЗ
|	РегистрНакопления.itilprofАктивы КАК itilprofАктивы
|ГДЕ
|	itilprofАктивы.Актив = &amp;Актив
|	И itilprofАктивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
|	И itilprofАктивы.Регистратор ССЫЛКА Документ.itilprofПеремещениеАктивов 
|	И itilprofАктивы.Период &lt;= &amp;МоментВремени
|	И itilprofАктивы.Регистратор.Проведен
|	И itilprofАктивы.Регистратор.ПР_Цель = ЗНАЧЕНИЕ(Справочник.ПР_ЦелиПеремещения.ВводВЭксплуатацию)
|
|УПОРЯДОЧИТЬ ПО
|	Период УБЫВ");

ЗапросПрихода.УстановитьПараметр("Актив", ОбъектКоллекции.ОсновноеСредство);
ЗапросПрихода.УстановитьПараметр("МоментВремени", Источник.Дата);

ТЗПрихода = ЗапросПрихода.Выполнить().Выгрузить();
Значение = Строка(ТЗПрихода[0].Регистратор.УникальныйИдентификатор());</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; СрокПолезногоИспользования</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>СрокПолезногоИспользования</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = ОбъектКоллекции.СрокПолезногоИспользования</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; ГУИДДокументПоступления</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ГУИДДокументПоступления</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>Значение = Строка(Источник.ДокументПоступления.УникальныйИдентификатор());</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; ПолныйАпгрейдАктива</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ПолныйАпгрейдАктива</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>Значение = Источник.ПолныйАпгрейдАктива</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КомплектацияНоменклатуры</Код>
				<Наименование>Документ: Комплектация номенклатуры (для обмена)</Наименование>
				<Порядок>950</Порядок>
				<ПослеЗагрузки>ИмяТаблицы = "Комплектующие";

ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла; 

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Объект.Ответственный = ОтветственныйИзГРАО;
КонецЕсли; 

ВедетсяУчетПрослеживаемыхТоваров  = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Объект.Дата);

ДанныеОбъекта = Новый Структура(
"Дата, ВидОперации, Склад, ПодразделениеОрганизации, Организация, ВедетсяУчетПрослеживаемыхТоваров, Номенклатура,
|СчетУчета, СпособУчетаНДС, СчетСписанияНДС, СубконтоСписанияНДС1, СубконтоСписанияНДС2, СубконтоСписанияНДС3,
|Комплект, Ответственный, Проект, ПрослеживаемыйКомплект");
ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
ДанныеОбъекта.ВедетсяУчетПрослеживаемыхТоваров = ВедетсяУчетПрослеживаемыхТоваров;

КЗаполнению = Новый Структура;
КЗаполнению.Вставить("СчетУчета", Истина);
КЗаполнению.Вставить("СпособУчетаНДС", Истина);
КЗаполнению.Вставить("СчетСписанияНДС", Истина);
КЗаполнению.Вставить("СубконтоСписанияНДС1", Истина);
КЗаполнению.Вставить("СубконтоСписанияНДС2", Истина);
КЗаполнению.Вставить("СубконтоСписанияНДС3", Истина);

ПараметрыЗаполнения = Новый Структура;

ПараметрыЗаполнения.Вставить("Заполнять", Истина);
ПараметрыЗаполнения.Вставить("КЗаполнению", КЗаполнению);
ПараметрыЗаполнения.Вставить("ИмяДокумента", "КомплектацияНоменклатуры");

ПараметрыЗаполнения.Вставить("ДанныеФормы", Новый Структура);
ПараметрыЗаполнения.ДанныеФормы.Вставить("Объект", ДанныеОбъекта);

ПараметрыЗаполнения.Вставить("ПричиныИзменения", Новый Массив);
ПараметрыЗаполнения.ПричиныИзменения.Добавить("Номенклатура");
	
ЗаполненныеСчета = СчетаУчетаВДокументах.ЗаполнитьОбъектПриИзменении(ПараметрыЗаполнения);

ЗаполнитьЗначенияСвойств(Объект, ДанныеОбъекта);

Если ВедетсяУчетПрослеживаемыхТоваров Тогда
	Объект.ПрослеживаемыйКомплект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Номенклатура, "ПрослеживаемыйКомплект");
Иначе
	Объект.ПрослеживаемыйКомплект = Ложь;
КонецЕсли;

СчетаУчетаВДокументах.ЗаполнитьСтроки(Объект.Комплектующие, "Комплектующие", ДанныеОбъекта,
	Документы.КомплектацияНоменклатуры, Истина);
	
Для Каждого Строка Из Объект.Комплектующие Цикл
	
	Строка.СтранаПроисхождения = Строка.Номенклатура.СтранаПроисхождения;
	Строка.НомерГТД = Строка.Номенклатура.НомерГТД;
	Строка.ПрослеживаемыйТовар = Строка.Номенклатура.ПрослеживаемыйТовар;
	
КонецЦикла;   

Выполнить(Алгоритмы.ЗаполнениеСведенийПрослеживаемости);</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.ПР_КомплектацияНоменклатурыДляОбмена</Источник>
				<Приемник>ДокументСсылка.КомплектацияНоменклатуры</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>ВидОперации --&gt; ВидОперации</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ПР_ПричиныЗаменыКомплектующих"/>
						<Приемник Имя="ВидОперации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОперацийКомплектацияНоменклатуры"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПодразделениеОрганизации --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Склад --&gt; Склад</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Комплект --&gt; Номенклатура</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Комплект" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
						<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
						<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>Проект --&gt; пит_Проект</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Проект" Вид="Реквизит" Тип="СправочникСсылка.ПР_Проекты"/>
						<Приемник Имя="пит_Проект" Вид="Реквизит" Тип="СправочникСсылка.пит_Проекты"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; Количество</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой> Значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; СуммаДокумента</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СуммаДокумента" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Значение = 0;</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>11</Код>
						<Наименование>Комплектующие --&gt; Комплектующие</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="Комплектующие" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="Комплектующие" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>12</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>Комплектующее --&gt; Номенклатура</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Комплектующее" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СписаниеОС</Код>
				<Наименование>Документ: Списание ОС (для обмена)</Наименование>
				<Порядок>1000</Порядок>
				<ПослеЗагрузки>ИмяТаблицы = "ОС";

ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла; 

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Объект.Ответственный = ОтветственныйИзГРАО;
КонецЕсли;
    
Запрос = Запросы.НайтиПричинуСписанияОСВГРАО;
Выборка = Запрос.Выполнить().Выбрать();
ПричинаИзГРАО = Неопределено;
Пока Выборка.Следующий() Цикл
	ПричинаИзГРАО = Выборка.Причина;	
КонецЦикла; 

Если ЗначениеЗаполнено(ПричинаИзГРАО) Тогда 
	Объект.ПричинаСписания = ПричинаИзГРАО;
КонецЕсли;

Запрос = Запросы.НайтиСобытиеОСОСВГРАО;
Запрос.УстановитьПараметр("КлючСсылка", ПараметрыОбъекта["ЧастичноеСписание"]);
Выборка = Запрос.Выполнить().Выбрать();
СобытиеИзГРАО = Неопределено;
Пока Выборка.Следующий() Цикл
	СобытиеИзГРАО = Выборка.Событие;	
КонецЦикла; 

Если ЗначениеЗаполнено(СобытиеИзГРАО) Тогда 
	Объект.СобытиеОС = СобытиеИзГРАО;
КонецЕсли;

Запрос = Запросы.НайтиСтатьюРасходаДляСписанияОСОСВГРАО;
Выборка = Запрос.Выполнить().Выбрать();
СтатьяИзГРАО = Неопределено;
Пока Выборка.Следующий() Цикл
	СтатьяИзГРАО = Выборка.Статья;	
КонецЦикла; 

Если ЗначениеЗаполнено(СтатьяИзГРАО) Тогда 
	Объект.пит_СтатьяРасхода = СтатьяИзГРАО;
КонецЕсли;


Объект.СчетСписания 	= Пит_общегоназначения.СчетУчетаПоКоду("91.02");  
Объект.СчетУчетаДоходов = Пит_общегоназначения.СчетУчетаПоКоду("91.01");  

Запрос = Запросы.НайтиСубконтоСписаниеОСОСВГРАО;
Выборка = Запрос.Выполнить().Выбрать();
СубконтоИзГРАО = Неопределено;
Пока Выборка.Следующий() Цикл
	СубконтоИзГРАО = Выборка.Субконто;	
КонецЦикла; 

Если ЗначениеЗаполнено(СубконтоИзГРАО) Тогда 
	Объект.Субконто = СубконтоИзГРАО;
КонецЕсли;  

Объект.СубконтоДоходов = Объект.Субконто;    

Для Каждого Строка Из Объект.ОС Цикл 
	ОСТабличнаяЧасть = ПараметрыОбъекта["ОСТабличнаяЧасть"];
	ИндексСтроки = Объект.ОС.Индекс(Строка);
	СтрокаТЧ = ОСТабличнаяЧасть.Получить(ИндексСтроки);
	ГУИДАктива = СтрокаТЧ.ГУИДАктив;
	ГУИДПрихода = СтрокаТЧ.ГУИДПрихода;
	
	Запись = РегистрыСведений.пр_ОсновныеСредстваITIL.СоздатьМенеджерЗаписи();
	Запись.GUIDОСВITIL = ГУИДАктива;
	Запись.GUIDПриходаВITIL = ГУИДПрихода; 
	Запись.Организация = Объект.Организация;
	Запись.Прочитать();
	Строка.ОсновноеСредство = Запись.ОсновноеСредство; 
	
	Строка.Количество = 1;
	Строка.ПрослеживаемыйТовар = Строка.ОсновноеСредство.ПрослеживаемыйТовар;  
КонецЦикла;

ДанныеОбъекта = Новый Структура(
"Дата, Организация, Подразделениеорганизации, ПричинаСписания,
|СобытиеОС, СчетСписания, Субконто, СчетУчетаДоходов, СубконтоДоходов, Ответственный,
|пит_ВидСкладскойОперации, пит_Проект, пит_СтатьяРасхода, ОсталисьМатериальныеЦенностиОтВыбытия, Склад");
ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);

СчетаУчетаВДокументах.ЗаполнитьСтроки(Объект.ЦенностиОтВыбытия, "ЦенностиОтВыбытия", ДанныеОбъекта,
	Документы.СписаниеОС, Истина);
	
Если ЗначениеЗаполнено(Объект.СобытиеОС) И Объект.СобытиеОС.ВидСобытияОС = ПредопределенноеЗначение("Перечисление.ВидыСобытийОС.ЧастичнаяЛиквидация") Тогда  
	Выполнить(Алгоритмы.РасчетАмортизацииСписаниеОС);		
КонецЕсли;

Для Каждого Строка Из Объект.ЦенностиОтВыбытия Цикл	
	//Строка.СтранаПроисхождения = Строка.Номенклатура.СтранаПроисхождения;
	Строка.ПрослеживаемыйТовар = Ложь;;  
КонецЦикла;

Выполнить(Алгоритмы.ЗаполнениеСведенийПрослеживаемости); 

СтатьяЗатрат = Объект.Субконто;

Если ЗначениеЗаполнено(СтатьяЗатрат) Тогда				
	Объект.КодОперацииПрослеживаемости = СтатьяЗатрат.ПР_КодОперацииПрослеживаемости;
КонецЕсли;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>ДокументСсылка.ПР_СписаниеОСДляОбмена</Источник>
				<Приемник>ДокументСсылка.СписаниеОС</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.ПР_Фирмы"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Склад --&gt; Склад</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>МестонахождениеОС --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="МестонахождениеОС" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ОсталисьТМЦ --&gt; ОсталисьМатериальныеЦенностиОтВыбытия</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ОсталисьТМЦ" Вид="Реквизит" Тип="Булево"/>
						<Приемник Имя="ОсталисьМатериальныеЦенностиОтВыбытия" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Проект --&gt; пит_Проект</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Проект" Вид="Реквизит" Тип="СправочникСсылка.ПР_Проекты"/>
						<Приемник Имя="пит_Проект" Вид="Реквизит" Тип="СправочникСсылка.пит_Проекты"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>ЧастичноеСписание --&gt; ЧастичноеСписание</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ЧастичноеСписание" Вид="Реквизит" Тип="Булево"/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ЧастичноеСписание</ИмяПараметраДляПередачи>
					</Свойство>
					<Группа>
						<Код>9</Код>
						<Наименование>ОС --&gt; ОС</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="ОС" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>10</Код>
							<Наименование>КлючСтроки --&gt; КлючСтроки</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="КлючСтроки" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="КлючСтроки" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ГУИДАктив</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДАктив</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>Значение = Строка(ОбъектКоллекции.ОсновноеСредство.УникальныйИдентификатор());</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ГУИДПрихода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="" Вид=""/>
							<ИмяПараметраДляПередачи>ГУИДПрихода</ИмяПараметраДляПередачи>
							<ПередВыгрузкой>ЗапросПрихода = Новый Запрос("ВЫБРАТЬ
|	itilprofАктивы.Регистратор КАК Регистратор,
|	itilprofАктивы.Период КАК Период,
|	itilprofАктивы.ПР_Фирма КАК ПР_Фирма,
|	itilprofАктивы.Актив КАК Актив
|ИЗ
|	РегистрНакопления.itilprofАктивы КАК itilprofАктивы
|ГДЕ
|	itilprofАктивы.Актив = &amp;Актив
|	И itilprofАктивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
|	И itilprofАктивы.Регистратор ССЫЛКА Документ.itilprofПеремещениеАктивов 
|	И itilprofАктивы.Период &lt;= &amp;МоментВремени
|	И itilprofАктивы.Регистратор.Проведен
|	И itilprofАктивы.Регистратор.ПР_Цель = ЗНАЧЕНИЕ(Справочник.ПР_ЦелиПеремещения.ВводВЭксплуатацию)
|
|УПОРЯДОЧИТЬ ПО
|	Период УБЫВ");

ЗапросПрихода.УстановитьПараметр("Актив", ОбъектКоллекции.ОсновноеСредство);
ЗапросПрихода.УстановитьПараметр("МоментВремени", Источник.Дата);

ТЗПрихода = ЗапросПрихода.Выполнить().Выгрузить();
Значение = Строка(ТЗПрихода[0].Регистратор.УникальныйИдентификатор());</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>12</Код>
						<Наименование>ЦенностиОтВыбытия --&gt; ЦенностиОтВыбытия</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="ЦенностиОтВыбытия" Вид="ТабличнаяЧасть"/>
						<Приемник Имя="ЦенностиОтВыбытия" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>13</Код>
							<Наименование>КлючСтроки --&gt; КлючСтроки</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="КлючСтроки" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="КлючСтроки" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>Количество --&gt; Количество</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Количество" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>Сумма --&gt; Сумма</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>Цена --&gt; Цена</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Цена" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>РасходныйМатериал --&gt; Номенклатура</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="РасходныйМатериал" Вид="Реквизит"/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<ПередВыгрузкой>Если ТипЗнч(ОбъектКоллекции.РасходныйМатериал) = Тип("СправочникСсылка.itilprofАктивы") Тогда
	Значение = ОбъектКоллекции.РасходныйМатериал.КонфигурационнаяЕдиница;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>100</Порядок>
			<Правило>
				<Код>ДоговорыКонтрагентов</Код>
				<Наименование>Справочник: Договоры</Наименование>
				<Порядок>50</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ДоговорыКонтрагентов</Источник>
				<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Владелец --&gt; Владелец</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Контрагенты"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>5</Код>
						<Наименование>--&gt; ЭтоГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Контрагенты</Код>
				<Наименование>Справочник: Контрагенты</Наименование>
				<Порядок>100</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>СправочникСсылка.Контрагенты</Приемник>
				<Свойства>
					<Свойство Поиск="true" Обязательное="true">
						<Код>2</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>пит_Проекты</Код>
				<Наименование>Справочник: Проекты</Наименование>
				<Порядок>150</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ПР_Проекты</Источник>
				<Приемник>СправочникСсылка.пит_Проекты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>2</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Склады</Код>
				<Наименование>Справочник: Склады (места хранения)</Наименование>
				<Порядок>150</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.Склады</Источник>
				<Приемник>СправочникСсылка.Склады</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Склады"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Склады"/>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>5</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Организации</Код>
				<Наименование>Справочник: Фирмы</Наименование>
				<Порядок>200</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ПР_Фирмы</Источник>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Пользователи</Код>
				<Наименование>Справочник: Пользователи</Наименование>
				<Порядок>250</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.Пользователи</Источник>
				<Приемник>СправочникСсылка.Пользователи</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Номенклатура</Код>
				<Наименование>Справочник: Конфигурационные единицы</Наименование>
				<Порядок>300</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.itilprofКонфигурационныеЕдиницы</Источник>
				<Приемник>СправочникСсылка.Номенклатура</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>2</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НоменклатураПоставщиков</Код>
				<Наименование>Справочник: Номенклатура поставщиков</Наименование>
				<Порядок>350</Порядок>
				<ПослеЗагрузки>Объект.Упаковка = Объект.Номенклатура.ЕдиницаИзмерения;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ПР_НоменклатураПоставщиков</Источник>
				<Приемник>СправочникСсылка.НоменклатураКонтрагентов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Поставщик --&gt; ВладелецНоменклатуры</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Поставщик" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<Приемник Имя="ВладелецНоменклатуры" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Наименование --&gt; НаименованиеНоменклатуры</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="НаименованиеНоменклатуры" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>НаименованиеПолное --&gt; НаименованиеПолное</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>КонфигурационнаяЕдиница --&gt; Номенклатура</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="КонфигурационнаяЕдиница" Вид="Реквизит" Тип="СправочникСсылка.itilprofКонфигурационныеЕдиницы"/>
						<Приемник Имя="Номенклатура" Вид="Реквизит"/>
						<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>Идентификатор --&gt; Идентификатор</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Идентификатор" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Идентификатор" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Валюты</Код>
				<Наименование>Справочник: Валюты</Наименование>
				<Порядок>400</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>СправочникСсылка.Валюты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФизическиеЛица</Код>
				<Наименование>Справочник: Физические лица</Наименование>
				<Порядок>500</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ФизическиеЛица</Источник>
				<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ДатаРождения --&gt; ДатаРождения</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтруктураПредприятия</Код>
				<Наименование>Справочник: Подразделения предприятия</Наименование>
				<Порядок>550</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.СтруктураПредприятия</Источник>
				<Приемник>СправочникСсылка.ПодразделенияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>9</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; Владелец</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификаторЕдиницИзмерения</Код>
				<Наименование>Справочник: Классификатор единиц измерения</Наименование>
				<Порядок>600</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.КлассификаторЕдиницИзмерения</Источник>
				<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>НаименованиеПолное --&gt; НаименованиеПолное</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>4</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатьиЗатрат</Код>
				<Наименование>Справочник: Статьи затрат</Наименование>
				<Порядок>650</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.СтатьиЗатрат</Источник>
				<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиЗатрат"/>
						<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>5</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОбъектыСтроительстваНельзяСоздать</Код>
				<Наименование>Справочник: Конфигурационные единицы</Наименование>
				<Порядок>700</Порядок>
				<ПослеЗагрузки>СсылкаНаНоменклатуру = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(ПараметрыОбъекта["ГУИДКЕ"])); 

Если ЗначениеЗаполнено(СсылкаНаНоменклатуру) Тогда
	Объект.КодОКВЭД = СсылкаНаНоменклатуру.КодОКВЭД;
	Объект.КодОКВЭД2 = СсылкаНаНоменклатуру.КодОКВЭД2;
КонецЕсли;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.itilprofКонфигурационныеЕдиницы</Источник>
				<Приемник>СправочникСсылка.ОбъектыСтроительства</Приемник>
				<Свойства/>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОбъектыСтроительстваМожноСоздать</Код>
				<Наименование>Справочник: Конфигурационные единицы</Наименование>
				<Порядок>700</Порядок>
				<ПослеЗагрузки>СсылкаНаНоменклатуру = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(ПараметрыОбъекта["ГУИДКЕ"])); 

Если ЗначениеЗаполнено(СсылкаНаНоменклатуру) Тогда
	Объект.КодОКВЭД = СсылкаНаНоменклатуру.КодОКВЭД;
	Объект.КодОКВЭД2 = СсылкаНаНоменклатуру.КодОКВЭД2;
КонецЕсли;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.itilprofКонфигурационныеЕдиницы</Источник>
				<Приемник>СправочникСсылка.ОбъектыСтроительства</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Родитель</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ОбъектыСтроительства"/>
						<ПослеВыгрузки>ЗапросГруппа = Запросы.НайтиГруппуОбъектаСтроительстваВГРАО;
ВыборкаГруппа = ЗапросГруппа.Выполнить().Выбрать();
ГруппаИзГРАО = Неопределено;

Пока ВыборкаГруппа.Следующий() Цикл
	ГруппаИзГРАО = ВыборкаГруппа.Группа;	
КонецЦикла; 

Значение = ГруппаИзГРАО;</ПослеВыгрузки>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ГУИДКЕ</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ГУИДКЕ</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>Значение = Строка(Источник.УникальныйИдентификатор());</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; пит_ОтветственныйСотрудникДУиО</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="пит_ОтветственныйСотрудникДУиО" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<ПослеВыгрузки>ЗапросОтветственный = Запросы.НайтиОтветственногоВГРАО;
ВыборкаОтветственный = ЗапросОтветственный.Выполнить().Выбрать();
ОтветственныйИзГРАО = Неопределено;
Пока ВыборкаОтветственный.Следующий() Цикл
	ОтветственныйИзГРАО = ВыборкаОтветственный.Ответственный;	
КонецЦикла; 

Если ЗначениеЗаполнено(ОтветственныйИзГРАО) Тогда 
	Значение = ОтветственныйИзГРАО;
КонецЕсли;</ПослеВыгрузки>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; пит_ЦФУ</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="пит_ЦФУ" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<ПередВыгрузкой>Если ВходящиеДанные.Свойство("СсылкаДокумента") Тогда
	Значение = ВходящиеДанные.СсылкаДокумента.ПодразделениеЗатрат;         
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ТипИсточника</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ТипИсточника</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>Если ВходящиеДанные.Свойство("СсылкаДокумента") Тогда
	Значение = ТипЗнч(ВходящиеДанные.СсылкаДокумента) = Тип("ДокументСсылка.МодернизацияОС");         
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Перечисления</Код>
			<Наименование>Перечисления</Наименование>
			<Порядок>150</Порядок>
			<Правило>
				<Код>СтавкиНДС</Код>
				<Наименование>Перечисление: Ставки НДС</Наименование>
				<Порядок>100</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>ПеречислениеСсылка.СтавкиНДС</Источник>
				<Приемник>ПеречислениеСсылка.СтавкиНДС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>БезНДС --&gt; БезНДС</Наименование>
						<Порядок>50</Порядок>
						<Источник>БезНДС</Источник>
						<Приемник>БезНДС</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>НДС0 --&gt; НДС0</Наименование>
						<Порядок>100</Порядок>
						<Источник>НДС0</Источник>
						<Приемник>НДС0</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>НДС10 --&gt; НДС10</Наименование>
						<Порядок>150</Порядок>
						<Источник>НДС10</Источник>
						<Приемник>НДС10</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>НДС10_110 --&gt; НДС10_110</Наименование>
						<Порядок>200</Порядок>
						<Источник>НДС10_110</Источник>
						<Приемник>НДС10_110</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>НДС18 --&gt; НДС18</Наименование>
						<Порядок>250</Порядок>
						<Источник>НДС18</Источник>
						<Приемник>НДС18</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>НДС18_118 --&gt; НДС18_118</Наименование>
						<Порядок>300</Порядок>
						<Источник>НДС18_118</Источник>
						<Приемник>НДС18_118</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>НДС20 --&gt; НДС20</Наименование>
						<Порядок>350</Порядок>
						<Источник>НДС20</Источник>
						<Приемник>НДС20</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>НДС20_120 --&gt; НДС20_120</Наименование>
						<Порядок>400</Порядок>
						<Источник>НДС20_120</Источник>
						<Приемник>НДС20_120</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ГруппыОС</Код>
				<Наименование>Перечисление: Группы учета ОС</Наименование>
				<Порядок>150</Порядок>
				<Источник>ПеречислениеСсылка.ПР_ГруппыУчетаОС</Источник>
				<Приемник>ПеречислениеСсылка.ГруппыОС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДругиеВидыОсновныхСрдеств --&gt; ДругиеВидыОсновныхСр</Наименование>
						<Порядок>50</Порядок>
						<Источник>ДругиеВидыОсновныхСредств</Источник>
						<Приемник>ДругиеВидыОсновныхСредств</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Здания --&gt; Здания</Наименование>
						<Порядок>100</Порядок>
						<Источник>Здания</Источник>
						<Приемник>Здания</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ЗемельныеУчастки --&gt; ЗемельныеУчастки</Наименование>
						<Порядок>150</Порядок>
						<Источник>ЗемельныеУчастки</Источник>
						<Приемник>ЗемельныеУчастки</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>КапитальныеВложенияВАрендованноеИмущество --&gt; Капи</Наименование>
						<Порядок>200</Порядок>
						<Источник>КапитальныеВложенияВАрендованноеИмущество</Источник>
						<Приемник>КапитальныеВложенияВАрендованноеИмущество</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>МашиныИОборудование --&gt; МашиныИОборудование</Наименование>
						<Порядок>250</Порядок>
						<Источник>МашиныИОборудование</Источник>
						<Приемник>МашиныИОборудование</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>МноголетниеНасаждения --&gt; МноголетниеНасаждения</Наименование>
						<Порядок>300</Порядок>
						<Источник>МноголетниеНасаждения</Источник>
						<Приемник>МноголетниеНасаждения</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ОбъектыПриродопользования --&gt; ОбъектыПриродопользо</Наименование>
						<Порядок>350</Порядок>
						<Источник>ОбъектыПриродопользования</Источник>
						<Приемник>ОбъектыПриродопользования</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ОфисноеОборудование --&gt; ОфисноеОборудование</Наименование>
						<Порядок>400</Порядок>
						<Источник>ОфисноеОборудование</Источник>
						<Приемник>ОфисноеОборудование</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ПродуктивныйСкот --&gt; ПродуктивныйСкот</Наименование>
						<Порядок>450</Порядок>
						<Источник>ПродуктивныйСкот</Источник>
						<Приемник>ПродуктивныйСкот</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПроизводственныйИХозяйственныйИнвентарь --&gt; Произв</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПроизводственныйИХозяйственныйИнвентарь</Источник>
						<Приемник>ПроизводственныйИХозяйственныйИнвентарь</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ПрочиеОбъекты --&gt; ПрочееИмуществоТребующееГосударс</Наименование>
						<Порядок>550</Порядок>
						<Источник>ПрочееИмуществоТребующееГосударственнойРегистрации</Источник>
						<Приемник>ПрочееИмуществоТребующееГосударственнойРегистрации</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>РабочийСкот --&gt; РабочийСкот</Наименование>
						<Порядок>600</Порядок>
						<Источник>РабочийСкот</Источник>
						<Приемник>РабочийСкот</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>Сооружения --&gt; Сооружения</Наименование>
						<Порядок>650</Порядок>
						<Источник>Сооружения</Источник>
						<Приемник>Сооружения</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ТранспортныеСредства --&gt; ТранспортныеСредства</Наименование>
						<Порядок>700</Порядок>
						<Источник>ТранспортныеСредства</Источник>
						<Приемник>ТранспортныеСредства</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыОперацийРеализацияТоваров</Код>
				<Наименование>Перечисление: Виды операций с активами и конфигурациями</Наименование>
				<Порядок>200</Порядок>
				<Источник>ПеречислениеСсылка.itilprofВидыОпераций</Источник>
				<Приемник>ПеречислениеСсылка.ВидыОперацийРеализацияТоваров</Приемник>
				<Свойства/>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыОперацийКомплектацияНоменклатуры</Код>
				<Наименование>Перечисление: Причины замены комплектующих</Наименование>
				<Порядок>250</Порядок>
				<Источник>ПеречислениеСсылка.ПР_ПричиныЗаменыКомплектующих</Источник>
				<Приемник>ПеречислениеСсылка.ВидыОперацийКомплектацияНоменклатуры</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Комплектация --&gt; Комплектация</Наименование>
						<Порядок>50</Порядок>
						<Источник>Комплектация</Источник>
						<Приемник>Комплектация</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Разукомплектация --&gt; Разукомплектация</Наименование>
						<Порядок>100</Порядок>
						<Источник>Разукомплектация</Источник>
						<Приемник>Разукомплектация</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="false">
			<Код>Документы</Код>
			<Наименование>Документы</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="false">
				<Код>itilprofПоступлениеАктивов</Код>
				<Наименование>itilprofПоступлениеАктивов</Наименование>
				<Порядок>50</Порядок>
				<КодПравилаКонвертации>ПоступлениеТоваровУслуг                           </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.itilprofПоступлениеАктивов</ОбъектВыборки>
			</Правило>
			<Правило Отключить="false">
				<Код>ПР_РасходМатериаловДляОбмена</Код>
				<Наименование>Расход материалов (для обмена)</Наименование>
				<Порядок>150</Порядок>
				<КодПравилаКонвертации>РасходМатериалов                                  </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПР_РасходМатериаловДляОбмена</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если НЕ Объект.Проведен Или Объект.ПометкаУдаления Тогда
	
	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("GUIDИсточника", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	ИсходящиеДанные.Вставить("ИмяМетаданныхПриемника", "ТребованиеНакладная");
	ИсходящиеДанные.Вставить("Проведен", Объект.Проведен);
	ИсходящиеДанные.Вставить("ПометкаУдаления", Объект.ПометкаУдаления);
	
	ИмяПКО = "ПереносПризнакаПометкаУдаленияИНеПроведен";
	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>ПР_РеализацияТовараДляОбмена</Код>
				<Наименование>Реализация товара (для обмена)</Наименование>
				<Порядок>200</Порядок>
				<КодПравилаКонвертации>РеализацияТовара                                  </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПР_РеализацияТовараДляОбмена</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если НЕ Объект.Проведен Или Объект.ПометкаУдаления Тогда
	
	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("GUIDИсточника", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	ИсходящиеДанные.Вставить("ИмяМетаданныхПриемника", "РеализацияТоваровУслуг");
	ИсходящиеДанные.Вставить("Проведен", Объект.Проведен);
	ИсходящиеДанные.Вставить("ПометкаУдаления", Объект.ПометкаУдаления);
	
	ИмяПКО = "ПереносПризнакаПометкаУдаленияИНеПроведен";
	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>ПР_ПередачаОСДляОбмена</Код>
				<Наименование>Передача ОС (для обмена)</Наименование>
				<Порядок>250</Порядок>
				<КодПравилаКонвертации>ПередачаОС                                        </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПР_ПередачаОСДляОбмена</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если НЕ Объект.Проведен Или Объект.ПометкаУдаления Тогда
	
	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("GUIDИсточника", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	ИсходящиеДанные.Вставить("ИмяМетаданныхПриемника", "ПередачаОС");
	ИсходящиеДанные.Вставить("Проведен", Объект.Проведен);
	ИсходящиеДанные.Вставить("ПометкаУдаления", Объект.ПометкаУдаления);
	
	ИмяПКО = "ПереносПризнакаПометкаУдаленияИНеПроведен";
	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>ПР_ПеремещениеТоваровДляОбмена</Код>
				<Наименование>Перемещение товаров (для обмена)</Наименование>
				<Порядок>300</Порядок>
				<КодПравилаКонвертации>ПеремещениеТоваров                                </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПР_ПеремещениеТоваровДляОбмена</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если НЕ Объект.Проведен Или Объект.ПометкаУдаления Тогда
	
	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("GUIDИсточника", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	ИсходящиеДанные.Вставить("ИмяМетаданныхПриемника", "ПеремещениеТоваров");
	ИсходящиеДанные.Вставить("Проведен", Объект.Проведен);
	ИсходящиеДанные.Вставить("ПометкаУдаления", Объект.ПометкаУдаления);
	
	ИмяПКО = "ПереносПризнакаПометкаУдаленияИНеПроведен";
	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>ПР_ПоступлениеТоваровУслугДляОбмена</Код>
				<Наименование>Поступление товаров и услуг (для обмена)</Наименование>
				<Порядок>350</Порядок>
				<КодПравилаКонвертации>ПоступлениеТоваровУслугИзПеремещения              </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПР_ПоступлениеТоваровУслугДляОбмена</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если НЕ Объект.Проведен Или Объект.ПометкаУдаления Тогда
	
	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("GUIDИсточника", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	ИсходящиеДанные.Вставить("ИмяМетаданныхПриемника", "ПоступлениеТоваровУслуг");
	ИсходящиеДанные.Вставить("Проведен", Объект.Проведен);
	ИсходящиеДанные.Вставить("ПометкаУдаления", Объект.ПометкаУдаления);
	
	ИмяПКО = "ПереносПризнакаПометкаУдаленияИНеПроведен";
	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>ПР_ПринятиеКУчетуОСДляОбмена</Код>
				<Наименование>Принятие к учету ОС (для обмена)</Наименование>
				<Порядок>400</Порядок>
				<КодПравилаКонвертации>ПринятиеКУчетуОС                                  </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПР_ПринятиеКУчетуОСДляОбмена</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если НЕ Объект.Проведен Или Объект.ПометкаУдаления Тогда
	
	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("GUIDИсточника", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	ИсходящиеДанные.Вставить("ИмяМетаданныхПриемника", "ПринятиеКУчетуОС");
	ИсходящиеДанные.Вставить("Проведен", Объект.Проведен);
	ИсходящиеДанные.Вставить("ПометкаУдаления", Объект.ПометкаУдаления);
	
	ИмяПКО = "ПереносПризнакаПометкаУдаленияИНеПроведен";
	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>ПР_КомплектацияНоменклатурыДляОбмена</Код>
				<Наименование>Комплектация номенклатуры  (для обмена)</Наименование>
				<Порядок>450</Порядок>
				<КодПравилаКонвертации>КомплектацияНоменклатуры                          </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПР_КомплектацияНоменклатурыДляОбмена</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если НЕ Объект.Проведен Или Объект.ПометкаУдаления Тогда
	
	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("GUIDИсточника", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	ИсходящиеДанные.Вставить("ИмяМетаданныхПриемника", "КомплектацияНоменклатуры");
	ИсходящиеДанные.Вставить("Проведен", Объект.Проведен);
	ИсходящиеДанные.Вставить("ПометкаУдаления", Объект.ПометкаУдаления);
	
	ИмяПКО = "ПереносПризнакаПометкаУдаленияИНеПроведен";
	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>ПР_МодернизацияОСДляОбмена</Код>
				<Наименование>Модернизация ОС (для обмена)</Наименование>
				<Порядок>450</Порядок>
				<КодПравилаКонвертации>МодернизацияОС                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПР_МодернизацияОСДляОбмена</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если НЕ Объект.Проведен Или Объект.ПометкаУдаления Тогда
	
	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("GUIDИсточника", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	ИсходящиеДанные.Вставить("ИмяМетаданныхПриемника", "МодернизацияОС");
	ИсходящиеДанные.Вставить("Проведен", Объект.Проведен);
	ИсходящиеДанные.Вставить("ПометкаУдаления", Объект.ПометкаУдаления);
	
	ИмяПКО = "ПереносПризнакаПометкаУдаленияИНеПроведен";
	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>ПР_СписаниеОСДляОбмена</Код>
				<Наименование>Списание ОС  (для обмена)</Наименование>
				<Порядок>450</Порядок>
				<КодПравилаКонвертации>СписаниеОС                                        </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПР_СписаниеОСДляОбмена</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если НЕ Объект.Проведен Или Объект.ПометкаУдаления Тогда
	
	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("GUIDИсточника", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	ИсходящиеДанные.Вставить("ИмяМетаданныхПриемника", "СписаниеОС");
	ИсходящиеДанные.Вставить("Проведен", Объект.Проведен);
	ИсходящиеДанные.Вставить("ПометкаУдаления", Объект.ПометкаУдаления);
	
	ИмяПКО = "ПереносПризнакаПометкаУдаленияИНеПроведен";
	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
			<Правило Отключить="false">
				<Код>ПР_ПеремещениеОСДляОбмена</Код>
				<Наименование>Перемещение ОС (для обмена)</Наименование>
				<Порядок>450</Порядок>
				<КодПравилаКонвертации>ПеремещениеОС                                     </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>ДокументСсылка.ПР_ПеремещениеОСДляОбмена</ОбъектВыборки>
				<ПередВыгрузкойОбъекта>Если НЕ Объект.Проведен Или Объект.ПометкаУдаления Тогда
	
	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("GUIDИсточника", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	ИсходящиеДанные.Вставить("ИмяМетаданныхПриемника", "ПеремещениеОС");
	ИсходящиеДанные.Вставить("Проведен", Объект.Проведен);
	ИсходящиеДанные.Вставить("ПометкаУдаления", Объект.ПометкаУдаления);
	
	ИмяПКО = "ПереносПризнакаПометкаУдаленияИНеПроведен";
	
КонецЕсли;</ПередВыгрузкойОбъекта>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>100</Порядок>
			<Правило Отключить="false">
				<Код>ПР_НоменклатураПоставщиков</Код>
				<Наименование>ПР_НоменклатураПоставщиков</Наименование>
				<Порядок>50</Порядок>
				<КодПравилаКонвертации>НоменклатураПоставщиков                           </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ПР_НоменклатураПоставщиков</ОбъектВыборки>
			</Правило>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Группа Имя="ПеремещениеАктивов">
			<Алгоритм Имя="ДопСведенияТЧМодернизацииОС" ИспользуетсяПриЗагрузке="true">
				<Текст>Запрос = Новый Запрос;

Запрос.УстановитьПараметр("ОсновноеСредство", Строка.ОсновноеСредство);
Запрос.УстановитьПараметр("Организация", Объект.Организация);
Запрос.УстановитьПараметр("Дата", Новый Граница(Объект.Дата, ВидГраницы.Исключая));

Запрос.Текст =
"ВЫБРАТЬ
|	ОсновныеСредства.Ссылка КАК ОсновноеСредство
|ПОМЕСТИТЬ ВТТаблицаОС
|ИЗ
|	Справочник.ОсновныеСредства КАК ОсновныеСредства
|ГДЕ
|	ОсновныеСредства.Ссылка = &amp;ОсновноеСредство
|
|ИНДЕКСИРОВАТЬ ПО
|	ОсновноеСредство
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер,
|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Период КАК Период,
|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
|ПОМЕСТИТЬ ВТИнвентарныйНомер
|ИЗ
|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
|			&amp;Дата,
|			Организация = &amp;Организация
|				И ОсновноеСредство = &amp;ОсновноеСредство) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
|
|ИНДЕКСИРОВАТЬ ПО
|	ОсновноеСредство
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования,
|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРабот
|ПОМЕСТИТЬ ВТСрокИспользованияБУ
|ИЗ
|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
|			&amp;Дата,
|			Организация = &amp;Организация
|				И ОсновноеСредство = &amp;ОсновноеСредство) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
|
|ИНДЕКСИРОВАТЬ ПО
|	ОсновноеСредство
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования
|ПОМЕСТИТЬ ВТСрокИспользованияНУ
|ИЗ
|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
|			&amp;Дата,
|			Организация = &amp;Организация
|				И ОсновноеСредство = &amp;ОсновноеСредство) КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних
|
|ИНДЕКСИРОВАТЬ ПО
|	ОсновноеСредство
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВТТаблицаОС.ОсновноеСредство,
|	ЕСТЬNULL(ВТСрокИспользованияБУ.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользованияБУ,
|	ЕСТЬNULL(ВТСрокИспользованияБУ.ОбъемПродукцииРабот, 0) КАК ОбъемПродукцииРаботБУ,
|	ЕСТЬNULL(ВТСрокИспользованияНУ.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользованияНУ,
|	ЕСТЬNULL(ВТИнвентарныйНомер.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
|	ЕСТЬNULL(ВТИнвентарныйНомер.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период
|ИЗ
|	ВТТаблицаОС КАК ВТТаблицаОС
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСрокИспользованияБУ КАК ВТСрокИспользованияБУ
|		ПО ВТТаблицаОС.ОсновноеСредство = ВТСрокИспользованияБУ.ОсновноеСредство
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСрокИспользованияНУ КАК ВТСрокИспользованияНУ
|		ПО ВТТаблицаОС.ОсновноеСредство = ВТСрокИспользованияНУ.ОсновноеСредство
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвентарныйНомер КАК ВТИнвентарныйНомер
|		ПО ВТТаблицаОС.ОсновноеСредство = ВТИнвентарныйНомер.ОсновноеСредство";

ТаблицаРезультат = Запрос.Выполнить().Выгрузить();

СписокКолонок = "";
Для Каждого Колонка Из ТаблицаРезультат.Колонки Цикл
	СписокКолонок = СписокКолонок + Колонка.Имя + ",";
КонецЦикла;
СписокКолонок = Лев(СписокКолонок, СтрДлина(СписокКолонок) - 1);

СтруктураСведений = Новый Структура(СписокКолонок);
Для Каждого СтрокаРезультата Из ТаблицаРезультат Цикл
	ЗаполнитьЗначенияСвойств(СтруктураСведений, СтрокаРезультата);
КонецЦикла;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗаменаОСПоРегиструСоответствия" ИспользуетсяПриЗагрузке="true">
				<Текст>ОСТабличнаяЧасть = ПараметрыОбъекта["ОСТабличнаяЧасть"];
ИндексСтроки = Объект.ОС.Индекс(ОбъектКоллекции);
СтрокаТЧ = ОСТабличнаяЧасть.Получить(ИндексСтроки);
Инвентарный = СтрокаТЧ.ИнвентарныйНомер;

Если ЗначениеЗаполнено(СтрокаТЧ.ГУИДПрихода) Тогда
	ГУИДПрихода = СтрокаТЧ.ГУИДПрихода;
Иначе
	ГУИДПрихода = "";
КонецЕсли;

Если ЗначениеЗаполнено(СтрокаТЧ.ГУИДОС) Тогда
	ГУИДОС = СтрокаТЧ.ГУИДОС;
Иначе
	ГУИДОС = "";
КонецЕсли;
	
Запрос = Новый Запрос;
Запрос.УстановитьПараметр("ГУИДПрихода", ГУИДПрихода);
Запрос.УстановитьПараметр("ГУИДОС", ГУИДОС);
Запрос.УстановитьПараметр("Организация", Объект.Организация);

Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
|	ПР_ОсновныеСредстваITIL.Организация КАК Организация,
|	ПР_ОсновныеСредстваITIL.GUIDОСВITIL КАК GUIDОСВITIL,
|	ПР_ОсновныеСредстваITIL.GUIDПриходаВITIL КАК GUIDПриходаВITIL,
|	ПР_ОсновныеСредстваITIL.ОсновноеСредство КАК ОсновноеСредство
|ИЗ
|	РегистрСведений.ПР_ОсновныеСредстваITIL КАК ПР_ОсновныеСредстваITIL
|ГДЕ
|	ПР_ОсновныеСредстваITIL.Организация = &amp;Организация
|	И ПР_ОсновныеСредстваITIL.GUIDОСВITIL = &amp;ГУИДОС
|	И ПР_ОсновныеСредстваITIL.GUIDПриходаВITIL = &amp;ГУИДПрихода";      

Результат = Запрос.Выполнить();

Если Результат.Пустой() Тогда
	НовоеОС = Справочники.ОсновныеСредства.СоздатьЭлемент();
	
	Если ЗначениеЗаполнено(СтрокаТЧ.Наименование) Тогда
		НовоеОС.Наименование = СтрокаТЧ.Наименование;
		НовоеОС.НаименованиеПолное = СтрокаТЧ.Наименование; // {{ ПРОФРЕШЕНИЕ, Мальцев Е.Д. - 26.07.2023 - #УправлениеАктивами }}
	Иначе
		НовоеОС.Наименование = "";
		НовоеОС.НаименованиеПолное = ""; // {{ ПРОФРЕШЕНИЕ, Мальцев Е.Д. - 26.07.2023 - #УправлениеАктивами }}
	КонецЕсли;
	
	Если СтрокаТЧ.ПометкаУдаления &lt;&gt; Неопределено Тогда
		НовоеОС.ПометкаУдаления = СтрокаТЧ.ПометкаУдаления;
	Иначе
		НовоеОС.ПометкаУдаления = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаТЧ.ГруппаОС) Тогда
		НовоеОС.ГруппаОС = СтрокаТЧ.ГруппаОС;
	Иначе
		НовоеОС.ГруппаОС = Перечисления.ГруппыОС.ПустаяСсылка(); 
	КонецЕсли;
	
	ГУИДРодителя = СтрокаТЧ.ГУИДРодителя;
	Если ЗначениеЗаполнено(ГУИДРодителя) Тогда
		УИД = Новый УникальныйИдентификатор(ГУИДРодителя);
		Родитель = Справочники.ОсновныеСредства.ПолучитьСсылку(УИД);
		Если ЗначениеЗаполнено(Родитель) Тогда
			НовоеОС.Родитель = Родитель;
		КонецЕсли;
	КонецЕсли;
	
	КонфЕдиница = СтрокаТЧ.КонфигурационнаяЕдиница;
	Если ЗначениеЗаполнено(КонфЕдиница) Тогда
		УИД = Новый УникальныйИдентификатор(КонфЕдиница);
		Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(УИД);
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			НовоеОС.ПрослеживаемыйТовар = Номенклатура.ПрослеживаемыйТовар;
			Если НовоеОС.ПрослеживаемыйТовар Тогда
				НовоеОС.КодТНВЭД = Номенклатура.КодТНВЭД;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	НовоеОС.ЕдиницаУчета = Перечисления.ЕдиницыУчетаОС.ИнвентарныйОбъект;
	
	НовоеОС.Записать();
	
	ИнвентарныйНомер = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "пр_ИнвентарныйНомерITIL");  
	ТаблицаСвойствИЗначений = Новый Массив;
	ТаблицаСвойствИЗначений.Добавить(Новый Структура("Свойство, Значение", ИнвентарныйНомер, СтрокаТЧ.ИнвентарныйНомер));   
	
	СсылкаПроверяемогоОбъекта = НовоеОС.Ссылка;
	ПроверяемыйОбъект = НовоеОС;
	
	Выполнить(Алгоритмы.ЗаполнениеДопРеквизита);	
	
	НовоеОС = НовоеОС.Ссылка;
	
	Запись = РегистрыСведений.ПР_ОсновныеСредстваITIL.СоздатьМенеджерЗаписи();      
	Запись.GUIDОСВITIL = ГУИДОС;
	Запись.GUIDПриходаВITIL = ГУИДПрихода;
	Запись.Организация = Объект.Организация; 
	Запись.ОсновноеСредство = НовоеОС; 
	Запись.Записать();
	
Иначе
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НовоеОС = Выборка.ОсновноеСредство;
	КонецЦикла;
	
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнениеДопРеквизита" ИспользуетсяПриЗагрузке="true">
				<Текст>ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
ТаблицаДопРеквизитов.Колонки.Добавить("Свойство", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"));
ТаблицаДопРеквизитов.Колонки.Добавить("Значение");
ТаблицаДопРеквизитов.Колонки.Добавить("ТекстоваяСтрока");

ТаблицаДопСведений = ТаблицаДопРеквизитов.СкопироватьКолонки();

Для Каждого СтрокаТаблицыСвойств Из ТаблицаСвойствИЗначений Цикл
	Если СтрокаТаблицыСвойств.Свойство.ЭтоДополнительноеСведение Тогда
		НоваяСтрока = ТаблицаДопСведений.Добавить();
	Иначе
		НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
		
		Если ТипЗнч(СтрокаТаблицыСвойств.Значение) = Тип("Строка")
			И СтрДлина(СтрокаТаблицыСвойств.Значение) &gt; 1024 Тогда
			НоваяСтрока.ТекстоваяСтрока = СтрокаТаблицыСвойств.Значение;
		КонецЕсли;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицыСвойств, "Свойство,Значение");
КонецЦикла;

ЕстьДопРеквизиты = ТаблицаДопРеквизитов.Количество() &gt; 0;
ЕстьДопСведения  = ТаблицаДопСведений.Количество() &gt; 0;

МассивСвойств = УправлениеСвойствами.СвойстваОбъекта(СсылкаПроверяемогоОбъекта);

МассивДопРеквизитов = Новый Массив;
МассивДопСведений = Новый Массив;

Для Каждого ДопСвойство Из МассивСвойств Цикл
	Если ДопСвойство.ЭтоДополнительноеСведение Тогда
		МассивДопСведений.Добавить(ДопСвойство);
	Иначе
		МассивДопРеквизитов.Добавить(ДопСвойство);
	КонецЕсли;
КонецЦикла;

НачатьТранзакцию();
Попытка
	Если ЕстьДопРеквизиты Тогда
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить(СсылкаПроверяемогоОбъекта.Метаданные().ПолноеИмя());
		ЭлементБлокировки.УстановитьЗначение("Ссылка", СсылкаПроверяемогоОбъекта);
		Блокировка.Заблокировать();
		
		ЗаблокироватьДанныеДляРедактирования(СсылкаПроверяемогоОбъекта);
		
		Для Каждого ДопРеквизит Из ТаблицаДопРеквизитов Цикл
			Если МассивДопРеквизитов.Найти(ДопРеквизит.Свойство) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			МассивСтрок = ПроверяемыйОбъект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", ДопРеквизит.Свойство));
			Если МассивСтрок.Количество() Тогда
				СтрокаСвойства = МассивСтрок[0];
			Иначе
				СтрокаСвойства = ПроверяемыйОбъект.ДополнительныеРеквизиты.Добавить();
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(СтрокаСвойства, ДопРеквизит, "Свойство,Значение,ТекстоваяСтрока");
		КонецЦикла;
		ПроверяемыйОбъект.Записать();
	КонецЕсли;
	
	Если ЕстьДопСведения Тогда
		Для Каждого ДопСведение Из ТаблицаДопСведений Цикл
			Если МассивДопСведений.Найти(ДопСведение.Свойство) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ДополнительныеСведения");
			ЭлементБлокировки.УстановитьЗначение("Объект", СсылкаПроверяемогоОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Свойство", ДопСведение.Свойство);
			Блокировка.Заблокировать();
			
			МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
			
			МенеджерЗаписи.Объект = СсылкаПроверяемогоОбъекта;
			МенеджерЗаписи.Свойство = ДопСведение.Свойство;
			МенеджерЗаписи.Значение = ДопСведение.Значение;
			
			МенеджерЗаписи.Записать(Истина);
		КонецЦикла;
		
	КонецЕсли;
	ЗафиксироватьТранзакцию();
Исключение
	ОтменитьТранзакцию();
	ВызватьИсключение;
КонецПопытки;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнениеСведенийПрослеживаемости" ИспользуетсяПриЗагрузке="true">
				<Текст>ТЗ = Объект[ИмяТаблицы].Выгрузить();

Объект.СведенияПрослеживаемости.Очистить();

Для Каждого Строка Из Объект[ИмяТаблицы] Цикл
	
	Если ТЗ.Колонки.Найти("ПрослеживаемыйКомплект") &lt;&gt; Неопределено Тогда
		ПрослежКомпл = Строка.ПрослеживаемыйКомплект;
	Иначе
		ПрослежКомпл = Ложь;
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
		Или ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ТребованиеНакладная")
		Или ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПередачаОС")
		Или ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КомплектацияНоменклатуры")
		Или ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.СписаниеОС") Тогда
		ЭтоПоступл = Ложь;
	Иначе
		ЭтоПоступл = Истина;
	КонецЕсли;
	
	Если Строка.ПрослеживаемыйТовар Тогда
		
		ПараметрыФормыПодбора = Новый Структура();
		ПараметрыФормыПодбора.Вставить("ЭтоПоступление",         ЭтоПоступл);
		ПараметрыФормыПодбора.Вставить("ЭтоКомиссия",            Ложь);
		ПараметрыФормыПодбора.Вставить("ЭтоИсходныеРНПТ",        Ложь);
		ПараметрыФормыПодбора.Вставить("ПрослеживаемыйКомплект", ПрослежКомпл);
		СтруктураПараметров = Новый Структура();    
		
		Выполнить(Алгоритмы.СоставлениеСтруктурыДляПрослеживаемости);
		
		ТоварКомитентаНаПродажу = БухгалтерскийУчетПовтИсп.СчетУчетаКомиссионногоТовара(СтруктураПараметров.СчетУчета) 
		И Не СтруктураПараметров.ЭтоПоступление И Не СтруктураПараметров.ЭтоВводОстатковПоЗабалансу;
		
		Запрос = Новый Запрос;
		ТекстЗапроса = "";
		Выполнить(Алгоритмы.ПолучениеТекстаЗапроса);		
		
		Запрос.Текст = ТекстЗапроса;
		
		Если СтруктураПараметров.ЭтоПринятиеКУчетуОС Тогда
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			Счетчик = 0;
			КоличествоОС = Объект[ИмяТаблицы].Количество();
			
			Для Каждого СтрокаЗапроса Из РезультатЗапроса Цикл 				
				Пока Счетчик &lt; КоличествоОС Цикл
					Остаток = СтрокаЗапроса.КоличествоОстаток;
					
					Если Остаток &gt; 0 Тогда
						НовыйУИД = Строка(Новый УникальныйИдентификатор());
						Объект[ИмяТаблицы][Счетчик].ИдентификаторСтроки = НовыйУИД;
						
						НоваяСтрокаПрослеживаемости = Объект.СведенияПрослеживаемости.Добавить();
						НоваяСтрокаПрослеживаемости.КоличествоПрослеживаемости = 1;
						НоваяСтрокаПрослеживаемости.ИдентификаторСтроки = НовыйУИД;
						НоваяСтрокаПрослеживаемости.Количество = 1;
						НоваяСтрокаПрослеживаемости.РНПТ = СтрокаЗапроса.РНПТ;
						НоваяСтрокаПрослеживаемости.СтранаПроисхождения = СтрокаЗапроса.СтранаПроисхождения;
						
						Остаток = Остаток - 1;
						Счетчик = Счетчик + 1;
					Иначе 
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Прервать;
			
		ИначеЕсли СтруктураПараметров.ЭтоСписаниеОС Тогда 
			
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			Счетчик = 0;
			КоличествоОС = Объект[ИмяТаблицы].Количество();
			
			Для Каждого СтрокаЗапроса Из РезультатЗапроса Цикл 				
				Пока Счетчик &lt; КоличествоОС Цикл
					Остаток = СтрокаЗапроса.КоличествоОстаток;
					
					Если Остаток &gt; 0 Тогда
						НовыйУИД = Строка.КлючСтроки;
						
						НоваяСтрокаПрослеживаемости = Объект.СведенияПрослеживаемости.Добавить();
						НоваяСтрокаПрослеживаемости.КоличествоПрослеживаемости = 1;
						НоваяСтрокаПрослеживаемости.ИдентификаторСтроки = НовыйУИД;
						НоваяСтрокаПрослеживаемости.Количество = 1;
						НоваяСтрокаПрослеживаемости.РНПТ = СтрокаЗапроса.РНПТ;
						НоваяСтрокаПрослеживаемости.СтранаПроисхождения = СтрокаЗапроса.СтранаПроисхождения;
						НоваяСтрокаПрослеживаемости.Номенклатура = СтрокаЗапроса.Комплектующие;
						
						Остаток = Остаток - 1;
						Счетчик = Счетчик + 1;
					Иначе 
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Прервать;

		Иначе
			Выборка = Запрос.Выполнить().Выбрать();
			НовоеКоличество = Строка.Количество;
			
			НовыйУИД = Строка(Новый УникальныйИдентификатор());
			Пока Выборка.Следующий() Цикл 
				
				Если НовоеКоличество &lt;= 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если НовоеКоличество &gt;= Выборка.КоличествоОстаток Тогда
					
					Строка.ИдентификаторСтроки = НовыйУИД;
					
					НоваяСтрокаПрослеживаемости = Объект.СведенияПрослеживаемости.Добавить();
					НоваяСтрокаПрослеживаемости.КоличествоПрослеживаемости = Выборка.КоличествоОстаток;
					НоваяСтрокаПрослеживаемости.ИдентификаторСтроки = НовыйУИД;
					НоваяСтрокаПрослеживаемости.Количество = Выборка.КоличествоОстаток;
					НоваяСтрокаПрослеживаемости.РНПТ = Выборка.РНПТ;       
					
					Если Не ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
						НоваяСтрокаПрослеживаемости.СтранаПроисхождения = Выборка.СтранаПроисхождения;
					КонецЕсли;
					
					НовоеКоличество = НовоеКоличество - Выборка.КоличествоОстаток;
				Иначе
					Строка.ИдентификаторСтроки = НовыйУИД;
					
					НоваяСтрокаПрослеживаемости = Объект.СведенияПрослеживаемости.Добавить();
					НоваяСтрокаПрослеживаемости.КоличествоПрослеживаемости = НовоеКоличество;
					НоваяСтрокаПрослеживаемости.ИдентификаторСтроки = НовыйУИД;
					НоваяСтрокаПрослеживаемости.Количество = НовоеКоличество;
					НоваяСтрокаПрослеживаемости.РНПТ = Выборка.РНПТ;  

					Если Не ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
						НоваяСтрокаПрослеживаемости.СтранаПроисхождения = Выборка.СтранаПроисхождения;
					КонецЕсли;
					
					НовоеКоличество = НовоеКоличество - Выборка.КоличествоОстаток;
				КонецЕсли; 	
			КонецЦикла;
		КонецЕсли;   		
	КонецЕсли; 	
КонецЦикла;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнениеСведенийПрослеживаемостиПоПоступлениям" ИспользуетсяПриЗагрузке="true">
				<Текст>Если ТипПринятия = "ПерепродажаТовара" Тогда
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументПоступление", Объект.пит_ДокументПоступление);
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	Запрос.Текст = "ВЫБРАТЬ
	|	ПоступлениеОборудование.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ПоступлениеОборудование.Ссылка КАК Ссылка,
	|	ПоступлениеОборудование.Номенклатура КАК Номенклатура	
	|ПОМЕСТИТЬ ВТ_ПоступлениеОборудование
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеОборудование
	|ГДЕ
	|	ПоступлениеОборудование.Ссылка = &amp;ДокументПоступление
	|	И ПоступлениеОборудование.Номенклатура = &amp;Номенклатура
	|;
	|ВЫБРАТЬ
	|	СведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(СведенияПрослеживаемости.Количество) КАК Количество,
	|	ВТ_ПоступлениеОборудование.Номенклатура КАК Номенклатура
	|ИЗ
	|	ВТ_ПоступлениеОборудование КАК ВТ_ПоступлениеОборудование
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.СведенияПрослеживаемости КАК СведенияПрослеживаемости
	|	ПО ВТ_ПоступлениеОборудование.Ссылка = СведенияПрослеживаемости.Ссылка
	|	И ВТ_ПоступлениеОборудование.ИдентификаторСтроки = СведенияПрослеживаемости.ИдентификаторСтроки
	|СГРУППИРОВАТЬ ПО
	|	СведенияПрослеживаемости.РНПТ,
	|	СведенияПрослеживаемости.СтранаПроисхождения,
	|	ВТ_ПоступлениеОборудование.Номенклатура";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	КоличествоОС = Объект[ИмяТаблицы].Количество();
	Объект.СведенияПрослеживаемости.Очистить();
	Счетчик = 0;
	
	Пока Выборка.Следующий() Цикл
		
		ТекущийОстаток = Выборка.Количество;
		Если ТекущийОстаток &lt;= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Пока Счетчик &lt; КоличествоОС Цикл
			
			Строка = Объект[ИмяТаблицы].Получить(Счетчик);
			
			Если ТекущийОстаток &gt; 0 Тогда
				
				Строка.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
				НоваяПрослеживаемость = Объект.СведенияПрослеживаемости.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяПрослеживаемость, Выборка);
				НоваяПрослеживаемость.Количество = 1;
				НоваяПрослеживаемость.КоличествоПрослеживаемости = 1;
				НоваяПрослеживаемость.ИдентификаторСтроки = Строка.ИдентификаторСтроки;
				
				ТекущийОстаток = ТекущийОстаток - 1;
				Счетчик = Счетчик + 1;
			Иначе
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецЕсли;

Если ТипПринятия = "ПерепродажаОС" Тогда
	
	ТаблицаГУИДов = ИсточникПринятия["ТаблицаГУИДов"];
	ГУИДПередачиОС = ИсточникПринятия["ГУИДПередачиОС"];
	
	Если ТаблицаГУИДов &lt;&gt; Неопределено И ГУИДПередачиОС &lt;&gt; Неопределено Тогда
		ПередачаОС = Документы.ПередачаОС.ПолучитьСсылку(Новый УникальныйИдентификатор(ГУИДПередачиОС));
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТабГУИДов", ТаблицаГУИДов);
		Запрос.УстановитьПараметр("ПередачаОС", ПередачаОС);
		Запрос.Текст = "ВЫБРАТЬ
		|	ТабГУИДов.ГУИДАктива КАК ГУИДАктива,
		|	ТабГУИДов.ГУИДПриходаПередачиОС КАК ГУИДПриходаПередачиОС,
		|	ТабГУИДов.ГУИДПриходаПринятияОС КАК ГУИДПриходаПринятияОС
		|ПОМЕСТИТЬ ВТ_ГУИДов
		|ИЗ
		|	&amp;ТабГУИДов КАК ТабГУИДов
		|;
		|ВЫБРАТЬ
		|	пр_ОсновныеСредстваITIL.ОсновноеСредство КАК ОСТекущий,
		|	ВТ_ГУИДов.ГУИДАктива КАК ГУИДАктива,
		|	ВТ_ГУИДов.ГУИДПриходаПередачиОС КАК ГУИДПриходаПередачиОС
		|ПОМЕСТИТЬ ВТ_ОсновныеСредстваТекущие
		|ИЗ
		|	ВТ_ГУИДов КАК ВТ_ГУИДов
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пр_ОсновныеСредстваITIL КАК пр_ОсновныеСредстваITIL
		|	ПО ВТ_ГУИДов.ГУИДАктива = пр_ОсновныеСредстваITIL.GUIDОСВITIL
		|	И ВТ_ГУИДов.ГУИДПриходаПринятияОС = пр_ОсновныеСредстваITIL.GUIDПриходаВITIL
		|;
		|ВЫБРАТЬ
		|	ВТ_ОсновныеСредстваТекущие.ОСТекущий КАК ОСТекущий,
		|	РегОсновныеСредстваITIL.ОсновноеСредство КАК ОСПредыдущий,
		|	&amp;ПередачаОС КАК ПередачаОС
		|ПОМЕСТИТЬ ВТ_СвязанныеОС
		|ИЗ
		|	ВТ_ОсновныеСредстваТекущие КАК ВТ_ОсновныеСредстваТекущие
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пр_ОсновныеСредстваITIL КАК РегОсновныеСредстваITIL
		|	ПО ВТ_ОсновныеСредстваТекущие.ГУИДАктива  = РегОсновныеСредстваITIL.GUIDОСВITIL
		|	И ВТ_ОсновныеСредстваТекущие.ГУИДПриходаПередачиОС = РегОсновныеСредстваITIL.GUIDПриходаВITIL
		|;
		|ВЫБРАТЬ
		|	ВТ_СвязанныеОС.ОСТекущий КАК ОС,
		|	ТЧПередачаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВТ_СвязанныеОС.ПередачаОС КАК ПередачаОС
		|ПОМЕСТИТЬ ВТ_ОС
		|ИЗ
		|	ВТ_СвязанныеОС КАК ВТ_СвязанныеОС
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОС.ОС КАК ТЧПередачаОС
		|	ПО ВТ_СвязанныеОС.ПередачаОС = ТЧПередачаОС.Ссылка
		|	И ВТ_СвязанныеОС.ОСПредыдущий = ТЧПередачаОС.ОсновноеСредство
		|;
		|ВЫБРАТЬ
		|	СведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	ВТ_ОС.ОС КАК ОС
		|ИЗ
		|	ВТ_ОС КАК ВТ_ОС
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОС.СведенияПрослеживаемости КАК СведенияПрослеживаемости
		|	ПО ВТ_ОС.ПередачаОС = СведенияПрослеживаемости.Ссылка
		|	И ВТ_ОС.ИдентификаторСтроки = СведенияПрослеживаемости.ИдентификаторСтроки";
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СтрокаОС = Объект.ОС.Найти(Выборка.ОС, "ОсновноеСредство");
			Если СтрокаОС &lt;&gt; Неопределено Тогда
				СтрокаОС.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор());
				СтрокаПрослеживаемость = Объект.СведенияПрослеживаемости.Добавить();
				СтрокаПрослеживаемость.РНПТ = Выборка.РНПТ;
				СтрокаПрослеживаемость.ИдентификаторСтроки = СтрокаОС.ИдентификаторСтроки;
				СтрокаПрослеживаемость.Количество = 1;
				СтрокаПрослеживаемость.КоличествоПрослеживаемости = 1;
				СтрокаПрослеживаемость.СтранаПроисхождения = Объект.Номенклатура.СтранаПроисхождения;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнениеСтрокиПеремещениеТоваров" ИспользуетсяПриЗагрузке="true">
				<Текст>// Подготовка структур

ДанныеСтрокиТаблицы = Новый Структура(
"Номенклатура, Коэффициент, Количество,
|СчетУчета, НовыйСчетУчета, СпособУчетаНДС"); // Для ПараметрыЗаполненияСчетовУчета
ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ОбъектКоллекции);

// Заполнение параметров

ПараметрыЗаполненияСчетовУчета = СчетаУчетаВДокументахКлиентСервер.НовыйПараметрыЗаполнения(
"ПеремещениеТоваров",
"Товары.Номенклатура",
			Объект,
			ОбъектКоллекции,
			ДанныеОбъекта,
			ДанныеСтрокиТаблицы);

ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.СчетУчета", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.НовыйСчетУчета", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.СпособУчетаНДС", Истина);

ПараметрыОбработки = Новый Структура();
ПараметрыОбработки.Вставить("ДанныеСтрокиТаблицы", 	 ДанныеСтрокиТаблицы);
ПараметрыОбработки.Вставить("ДанныеОбъекта", 		 ДанныеОбъекта);
ПараметрыОбработки.Вставить("СчетаУчетаКЗаполнению", ПараметрыЗаполненияСчетовУчета.КЗаполнению);

//В функции получаем только нужные параметры

ЗаполненныеСчета = СчетаУчетаВДокументах.ЗаполнитьРеквизитыПриИзменении(
			Документы.ПеремещениеТоваров,
			ПараметрыОбработки.СчетаУчетаКЗаполнению,
			ПараметрыОбработки.ДанныеОбъекта,
			"Товары",
			ПараметрыОбработки.ДанныеСтрокиТаблицы);

ЗаполнитьЗначенияСвойств(ПараметрыОбработки.ДанныеСтрокиТаблицы, ЗаполненныеСчета);

//Если Не ЗначениеЗаполнено(ПараметрыОбработки.ДанныеОбъекта.ТипЦен) Тогда
//	ПараметрыОбработки.ДанныеОбъекта.Вставить("СпособЗаполненияЦены", Перечисления.СпособыЗаполненияЦен.ПоЗакупочнымЦенам);
//КонецЕсли;

//ПараметрыОбработки.ДанныеОбъекта.Вставить("СпособЗаполненияРозничнойЦены", Перечисления.СпособыЗаполненияЦен.ПоЗакупочнымЦенам);

//СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
//ОбъектКоллекции.Номенклатура, ПараметрыОбработки.ДанныеОбъекта, Ложь);

//Если СведенияОНоменклатуре &lt;&gt; Неопределено Тогда
//	ПараметрыОбработки.ДанныеСтрокиТаблицы.СтранаПроисхождения = СведенияОНоменклатуре.СтранаПроисхождения;
//	ПараметрыОбработки.ДанныеСтрокиТаблицы.НомерГТД = СведенияОНоменклатуре.НомерГТД;
//	ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйТовар = СведенияОНоменклатуре.ПрослеживаемыйТовар Или СведенияОНоменклатуре.ПрослеживаемыйКомплект;
//	ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйКомплект = СведенияОНоменклатуре.ПрослеживаемыйКомплект;
//КонецЕсли;
ЗаполнитьЗначенияСвойств(ОбъектКоллекции, ПараметрыОбработки.ДанныеСтрокиТаблицы, "СчетУчета, СпособУчетаНДС, НовыйСчетУчета");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнениеСтрокиПоступлениеТоваровИзПеремещения" ИспользуетсяПриЗагрузке="true">
				<Текст>// Подготовка структур

ДанныеСтрокиТаблицы = Новый Структура(
"Номенклатура, ЕдиницаИзмерения, Коэффициент, Количество, 
|СчетНаОплатуПокупателю, СчетНаОплатуПокупателюПредставление,
|Цена, Сумма, СтавкаНДС, СуммаНДС,
|СчетУчета, СпособУчетаНДС, СчетУчетаНДС, НомерГТД, СтранаПроисхождения"); // Для ПараметрыЗаполненияСчетовУчета
ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ОбъектКоллекции);

// Заполнение параметров

ПараметрыЗаполненияСчетовУчета = СчетаУчетаВДокументахКлиентСервер.НовыйПараметрыЗаполнения(
"ПоступлениеТоваровУслуг",
"Оборудование.Номенклатура",
			Объект,
			ОбъектКоллекции,
			ДанныеОбъекта,
			ДанныеСтрокиТаблицы);

ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Оборудование.СпособУчетаНДС", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Оборудование.СчетУчетаНДС", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Оборудование.СчетУчета", Истина);

ПараметрыОбработки = Новый Структура();
ПараметрыОбработки.Вставить("ДанныеСтрокиТаблицы", 	 ДанныеСтрокиТаблицы);
ПараметрыОбработки.Вставить("ДанныеОбъекта", 		 ДанныеОбъекта);
ПараметрыОбработки.Вставить("СчетаУчетаКЗаполнению", ПараметрыЗаполненияСчетовУчета.КЗаполнению);

//В функции получаем только нужные параметры

ЗаполненныеСчета = СчетаУчетаВДокументах.ЗаполнитьРеквизитыПриИзменении(
			Документы.ПоступлениеТоваровУслуг,
			ПараметрыОбработки.СчетаУчетаКЗаполнению,
			ПараметрыОбработки.ДанныеОбъекта,
			"Оборудование",
			ПараметрыОбработки.ДанныеСтрокиТаблицы);

ЗаполнитьЗначенияСвойств(ПараметрыОбработки.ДанныеСтрокиТаблицы, ЗаполненныеСчета);

СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
ОбъектКоллекции.Номенклатура, ПараметрыОбработки.ДанныеОбъекта, Ложь);

Если СведенияОНоменклатуре &lt;&gt; Неопределено Тогда
	ПараметрыОбработки.ДанныеСтрокиТаблицы.СтранаПроисхождения = СведенияОНоменклатуре.СтранаПроисхождения;
	ПараметрыОбработки.ДанныеСтрокиТаблицы.НомерГТД = СведенияОНоменклатуре.НомерГТД;
	//ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйТовар = СведенияОНоменклатуре.ПрослеживаемыйТовар Или СведенияОНоменклатуре.ПрослеживаемыйКомплект;
	//ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйКомплект = СведенияОНоменклатуре.ПрослеживаемыйКомплект;
КонецЕсли;
ЗаполнитьЗначенияСвойств(ОбъектКоллекции, ПараметрыОбработки.ДанныеСтрокиТаблицы, "СчетУчета, СпособУчетаНДС, СчетУчетаНДС, НомерГТД, СтранаПроисхождения");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнениеСтрокиПринятиеКУчетуОС" ИспользуетсяПриЗагрузке="true">
				<Текст>// Подготовка структур

ДанныеСтрокиТаблицы = Новый Структура(
"ПрослеживаемыйТовар"); // Для ПараметрыЗаполненияСчетовУчета
ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ОбъектКоллекции);

ДанныеСтрокиТаблицы.ПрослеживаемыйТовар = ОбъектКоллекции.ОсновноеСредство.ПрослеживаемыйТовар;
//ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйКомплект = СведенияОНоменклатуре.ПрослеживаемыйКомплект;
ЗаполнитьЗначенияСвойств(ОбъектКоллекции, ДанныеСтрокиТаблицы, "ПрослеживаемыйТовар");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнениеСтрокиРасходМатериалов" ИспользуетсяПриЗагрузке="true">
				<Текст>// Подготовка структур

ДанныеСтрокиТаблицы = Новый Структура(
"Номенклатура, Коэффициент, Количество,
|Счет, СтатьяЗатрат, НоменклатурнаяГруппа, НомерГТД, СтранаПроисхождения, ОтражениеВУСН"); // Для ПараметрыЗаполненияСчетовУчета
ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ОбъектКоллекции);

// Заполнение параметров

ПараметрыЗаполненияСчетовУчета = СчетаУчетаВДокументахКлиентСервер.НовыйПараметрыЗаполнения(
"ТребованиеНакладная",
"Материалы.Номенклатура",
			Объект,
			ОбъектКоллекции,
			ДанныеОбъекта,
			ДанныеСтрокиТаблицы);

ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Материалы.Счет", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Материалы.СтатьяЗатрат", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Материалы.НоменклатурнаяГруппа", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Материалы.СпособУчетаНДС", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Материалы.ОтражениеВУСН", Истина);


ПараметрыОбработки = Новый Структура();
ПараметрыОбработки.Вставить("ДанныеСтрокиТаблицы", 	 ДанныеСтрокиТаблицы);
ПараметрыОбработки.Вставить("ДанныеОбъекта", 		 ДанныеОбъекта);
ПараметрыОбработки.Вставить("СчетаУчетаКЗаполнению", ПараметрыЗаполненияСчетовУчета.КЗаполнению);

//В функции получаем только нужные параметры

ЗаполненныеСчета = СчетаУчетаВДокументах.ЗаполнитьРеквизитыПриИзменении(
			Документы.ТребованиеНакладная,
			ПараметрыОбработки.СчетаУчетаКЗаполнению,
			ПараметрыОбработки.ДанныеОбъекта,
			"Материалы",
			ПараметрыОбработки.ДанныеСтрокиТаблицы);

ЗаполнитьЗначенияСвойств(ПараметрыОбработки.ДанныеСтрокиТаблицы, ЗаполненныеСчета);

//Если Не ЗначениеЗаполнено(ПараметрыОбработки.ДанныеОбъекта.ТипЦен) Тогда
//	ПараметрыОбработки.ДанныеОбъекта.Вставить("СпособЗаполненияЦены", Перечисления.СпособыЗаполненияЦен.ПоЗакупочнымЦенам);
//КонецЕсли;

//ПараметрыОбработки.ДанныеОбъекта.Вставить("СпособЗаполненияРозничнойЦены", Перечисления.СпособыЗаполненияЦен.ПоЗакупочнымЦенам);

СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
ОбъектКоллекции.Номенклатура, ПараметрыОбработки.ДанныеОбъекта, Ложь);

Если СведенияОНоменклатуре &lt;&gt; Неопределено Тогда
	ПараметрыОбработки.ДанныеСтрокиТаблицы.СтранаПроисхождения = СведенияОНоменклатуре.СтранаПроисхождения;
	ПараметрыОбработки.ДанныеСтрокиТаблицы.НомерГТД = СведенияОНоменклатуре.НомерГТД;
	//ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйТовар = СведенияОНоменклатуре.ПрослеживаемыйТовар Или СведенияОНоменклатуре.ПрослеживаемыйКомплект;
	//ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйКомплект = СведенияОНоменклатуре.ПрослеживаемыйКомплект;
КонецЕсли;
ЗаполнитьЗначенияСвойств(ОбъектКоллекции, ПараметрыОбработки.ДанныеСтрокиТаблицы, "Счет, НомерГТД, СтранаПроисхождения");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнениеСтрокиРеализацияТоваров" ИспользуетсяПриЗагрузке="true">
				<Текст>// Подготовка структур

ДанныеСтрокиТаблицы = Новый Структура(
"Номенклатура, ЕдиницаИзмерения, Коэффициент, Количество, 
|СчетНаОплатуПокупателю, СчетНаОплатуПокупателюПредставление,
|Цена, Сумма, СтавкаНДС, СуммаНДС,
|СчетУчета, КодТНВЭД, СчетДоходов, СчетУчетаНДСПоРеализации, СчетРасходов, НомерГТД, СтранаПроисхождения"); // Для ПараметрыЗаполненияСчетовУчета
ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ОбъектКоллекции);

// Заполнение параметров

ПараметрыЗаполненияСчетовУчета = СчетаУчетаВДокументахКлиентСервер.НовыйПараметрыЗаполнения(
"РеализацияТоваровУслуг",
"Товары.Номенклатура",
			Объект,
			ОбъектКоллекции,
			ДанныеОбъекта,
			ДанныеСтрокиТаблицы);

ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.СчетУчета", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.СчетДоходов", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.СчетУчетаНДСПоРеализации", Истина);
ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.СчетРасходов", Истина);

ПараметрыОбработки = Новый Структура();
ПараметрыОбработки.Вставить("ДанныеСтрокиТаблицы", 	 ДанныеСтрокиТаблицы);
ПараметрыОбработки.Вставить("ДанныеОбъекта", 		 ДанныеОбъекта);
ПараметрыОбработки.Вставить("СчетаУчетаКЗаполнению", ПараметрыЗаполненияСчетовУчета.КЗаполнению);

//В функции получаем только нужные параметры

ЗаполненныеСчета = СчетаУчетаВДокументах.ЗаполнитьРеквизитыПриИзменении(
			Документы.РеализацияТоваровУслуг,
			ПараметрыОбработки.СчетаУчетаКЗаполнению,
			ПараметрыОбработки.ДанныеОбъекта,
			"Товары",
			ПараметрыОбработки.ДанныеСтрокиТаблицы);

ЗаполнитьЗначенияСвойств(ПараметрыОбработки.ДанныеСтрокиТаблицы, ЗаполненныеСчета);

СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
ОбъектКоллекции.Номенклатура, ПараметрыОбработки.ДанныеОбъекта, Ложь);

Если СведенияОНоменклатуре &lt;&gt; Неопределено Тогда
	ПараметрыОбработки.ДанныеСтрокиТаблицы.СтранаПроисхождения = СведенияОНоменклатуре.СтранаПроисхождения;
	ПараметрыОбработки.ДанныеСтрокиТаблицы.НомерГТД = СведенияОНоменклатуре.НомерГТД;
	ПараметрыОбработки.ДанныеСтрокиТаблицы.КодТНВЭД = СведенияОНоменклатуре.КодТНВЭД;
	//ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйТовар = СведенияОНоменклатуре.ПрослеживаемыйТовар Или СведенияОНоменклатуре.ПрослеживаемыйКомплект;
	//ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйКомплект = СведенияОНоменклатуре.ПрослеживаемыйКомплект;
КонецЕсли;
ЗаполнитьЗначенияСвойств(ОбъектКоллекции, ПараметрыОбработки.ДанныеСтрокиТаблицы, "СчетУчета, КодТНВЭД, СчетДоходов, СчетУчетаНДСПоРеализации, СчетРасходов, НомерГТД, СтранаПроисхождения");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПолучениеТекстаЗапроса" ИспользуетсяПриЗагрузке="true">
				<Текст>Выполнить(Алгоритмы.ТекстЗапросаПоУмолчанию);
Запрос.УстановитьПараметр("Организация",             СтруктураПараметров.Организация);
Запрос.УстановитьПараметр("Период",                  Новый Граница(КонецДня(СтруктураПараметров.Период), ВидГраницы.Включая));
Запрос.УстановитьПараметр("Номенклатура",            СтруктураПараметров.Номенклатура);
Запрос.УстановитьПараметр("СтранаПроисхождения",     СтруктураПараметров.СтранаПроисхождения);
Запрос.УстановитьПараметр("Комиссионер",             СтруктураПараметров.Комиссионер);
Запрос.УстановитьПараметр("Комитент",                СтруктураПараметров.Комитент);
Запрос.УстановитьПараметр("ЭтоПоступление",          СтруктураПараметров.ЭтоПоступление ИЛИ СтруктураПараметров.ОткрыватьДляПросмотра);
Запрос.УстановитьПараметр("ПоказыватьТолькоОстатки", СтруктураПараметров.ПоказыватьТолькоОстатки);
Запрос.УстановитьПараметр("ПрослеживаемыйКомплект",  СтруктураПараметров.ПрослеживаемыйКомплект);
Запрос.УстановитьПараметр("Комплектующие",           СтруктураПараметров.Комплектующие);
Запрос.УстановитьПараметр("ЭтоРазукомплектация",     СтруктураПараметров.ЭтоРазукомплектация);

Если ТоварКомитентаНаПродажу Тогда
	Запрос.УстановитьПараметр("ВидЗапасов", Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию);
Иначе
	Запрос.УстановитьПараметр("ВидЗапасов", СтруктураПараметров.ВидЗапасов);
КонецЕсли;

Если СтруктураПараметров.ЭтоВозвратРозница Тогда
	Выполнить(Алгоритмы.ТекстЗапросаВозвратТоваровРозница);
	Запрос.УстановитьПараметр("ДатаРеализации",        СтруктураПараметров.ДатаРеализации);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента", СтруктураПараметров.ДатаТекущегоДокумента);
	Запрос.УстановитьПараметр("ТекущийДокумент",       СтруктураПараметров.ТекущийДокумент);
	
ИначеЕсли СтруктураПараметров.ЭтоВозвратПоставщику И Не ТоварКомитентаНаПродажу Тогда
	Выполнить(Алгоритмы.ТекстЗапросаВозвратТоваровПоставщику);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента", СтруктураПараметров.ДатаТекущегоДокумента);
	Запрос.УстановитьПараметр("ДокументРеализации",    СтруктураПараметров.ДокументРеализации);
	
	Если НЕ СтруктураПараметров.ПоставщикРезидентТаможенногоСоюза Тогда
		Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.ТекущийДокумент);
	КонецЕсли;
	
ИначеЕсли СтруктураПараметров.ЭтоВозвратКомиссия И Не СтруктураПараметров.ВозвратКомиссияПоТекДокументу Тогда
	Выполнить(Алгоритмы.ТекстЗапросаВозвратТоваровКомиссия);
	Запрос.УстановитьПараметр("ВыставленСФ",           СтруктураПараметров.ВыставленСФ); 
	Запрос.УстановитьПараметр("ДокументРеализации",    СтруктураПараметров.ДокументРеализации);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента", СтруктураПараметров.ДатаТекущегоДокумента);
	Запрос.УстановитьПараметр("ТекущийДокумент",       СтруктураПараметров.ТекущийДокумент);
	Запрос.УстановитьПараметр("СчетФактура",           СтруктураПараметров.СчетФактура);
	Запрос.УстановитьПараметр("Покупатель",            СтруктураПараметров.Покупатель);
	
ИначеЕсли ТоварКомитентаНаПродажу Тогда
	Если Не ЗначениеЗаполнено(СтруктураПараметров.Комитент) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Комитент = &amp;Комитент", "ИСТИНА");
	КонецЕсли;
ИначеЕсли СтруктураПараметров.ЭтоСоставноеОС Тогда 
	Выполнить(Алгоритмы.ТекстЗапросаПринятиеКУчетуОСОбъектСтроительства);
	Запрос.УстановитьПараметр("ОбъектСтроительства", СтруктураПараметров.ОбъектСтроительства);
ИначеЕсли СтруктураПараметров.ЭтоОС И СтруктураПараметров.ЭтоСведенияПООстаткамОС Тогда
	Выполнить(Алгоритмы.ТекстЗапросаПрослеживаемыеОстаткиОС);
	Запрос.УстановитьПараметр("ОсновноеСредство", СтруктураПараметров.ОсновноеСредство); 
ИначеЕсли СтруктураПараметров.ЭтоСписаниеОС И СтруктураПараметров.ЭтоОС Тогда 
	Выполнить(Алгоритмы.ТекстЗапросаПрослеживаемыеОстаткиОС);
	Запрос.УстановитьПараметр("ОсновноеСредство", СтруктураПараметров.ОсновноеСредство);	
ИначеЕсли СтруктураПараметров.ЭтоОС Тогда
	Выполнить(Алгоритмы.ТекстЗапросаПринятиеКУчетуОСОборудование);
ИначеЕсли СтруктураПараметров.ГрупповойОбъектОС И (СтруктураПараметров.ЭтоПродажа Или СтруктураПараметров.СписаниеОС) Тогда
	Выполнить(Алгоритмы.ТекстЗапросаПодборРНПТПоГрупповымОС);
	Запрос.УстановитьПараметр("ОсновноеСредство", СтруктураПараметров.ОсновноеСредство);
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПометкаУдаленияУПроведенныхДокументов" ИспользуетсяПриЗагрузке="true">
				<Текст>Если Объект.Проведен И Объект.ПометкаУдаления Тогда
	Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения, РежимПроведенияДокумента.Неоперативный);
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="РасчетАмортизацииСписаниеОС" ИспользуетсяПриЗагрузке="true">
				<Текст>ДокументКонтекст = Объект;

пит_ФактическаяДатаСписанияОС = ДокументКонтекст.Дата;
ДокументКонтекст.Записать();

ТаблицаДокумента = ДокументКонтекст.ОС.Выгрузить();

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
Запрос.УстановитьПараметр("Ссылка", ДокументКонтекст.Ссылка);
Запрос.УстановитьПараметр("Дата", ДокументКонтекст.Дата);
Запрос.УстановитьПараметр("пит_ФактическаяДатаСписанияОС", пит_ФактическаяДатаСписанияОС);
Запрос.УстановитьПараметр("Номер", ДокументКонтекст.Номер);
Запрос.УстановитьПараметр("Организация", ДокументКонтекст.Организация);
Запрос.УстановитьПараметр("СобытиеОС", ДокументКонтекст.СобытиеОС);
Запрос.УстановитьПараметр("ТаблицаДокумента", ТаблицаДокумента);

Запрос.Текст =
"ВЫБРАТЬ
|	&amp;Ссылка КАК Регистратор,
|	&amp;Дата КАК Период,
|	&amp;Номер КАК Номер,
|	&amp;Организация КАК Организация,
|	&amp;СобытиеОС КАК СобытиеОС
|ПОМЕСТИТЬ ТаблицаРеквизиты
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	Реквизиты.Регистратор КАК Регистратор,
|	Реквизиты.Организация КАК Организация,
|	Реквизиты.Номер КАК Номер,
|	Реквизиты.Период КАК Период,
|	Реквизиты.Период КАК ДатаРасчета,
|	Реквизиты.СобытиеОС КАК СобытиеОС,
|	ИСТИНА КАК ВыдаватьСообщения,
|	"""" КАК ИмяСписка,
|	""Расчет амортизации"" КАК Содержание
|ИЗ
|	ТаблицаРеквизиты КАК Реквизиты
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	т1.НомерСтроки КАК НомерСтроки,
|	т1.ОсновноеСредство КАК ОсновноеСредство,
|	т1.пит_СтоимостьЧЛБУ КАК СтоимостьЧЛБУ,
|	т1.пит_СтоимостьЧЛНУ КАК СтоимостьЧЛНУ,
|	т1.пит_АмортизацияЧЛБУ КАК АмортизацияЧЛБУ,
|	т1.пит_АмортизацияЧЛНУ КАК АмортизацияЧЛНУ,
|	т1.пит_АмортизацияЗаТекущийМесяцБУ КАК АмортизацияЗаТекущийМесяцБУ,
|	т1.пит_АмортизацияЗаТекущийМесяцНУ КАК АмортизацияЗаТекущийМесяцНУ,
|	т1.пит_СрокДляНачисленияАмортизацииБУ КАК СрокДляНачисленияАмортизацииБУ
|ПОМЕСТИТЬ ТаблицаДокумента
|ИЗ
|	&amp;ТаблицаДокумента КАК т1
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
|	ТаблицаДокумента.СтоимостьЧЛБУ КАК СтоимостьЧЛБУ,
|	ТаблицаДокумента.СтоимостьЧЛНУ КАК СтоимостьЧЛНУ,
|	ТаблицаДокумента.АмортизацияЧЛБУ КАК АмортизацияЧЛБУ,
|	ТаблицаДокумента.АмортизацияЧЛНУ КАК АмортизацияЧЛНУ,
|	ТаблицаДокумента.АмортизацияЗаТекущийМесяцБУ КАК АмортизацияЗаТекущийМесяцБУ,
|	ТаблицаДокумента.АмортизацияЗаТекущийМесяцНУ КАК АмортизацияЗаТекущийМесяцНУ,
|	ТаблицаДокумента.СрокДляНачисленияАмортизацииБУ КАК СрокДляНачисленияАмортизацииБУ
|ИЗ
|	ТаблицаДокумента КАК ТаблицаДокумента";
Результат = Запрос.ВыполнитьПакет();

ПараметрыРасчета = Новый Структура;
ПараметрыРасчета.Вставить("Реквизиты", Результат[1].Выгрузить());
ПараметрыРасчета.Вставить("ТаблицаОС", Результат[3].Выгрузить());

ПараметрыНачисленияАмортизации = УчетОС.ПодготовитьТаблицыАмортизацииОСИСуммАмортизационнойПремии(ПараметрыРасчета.ТаблицаОС, ПараметрыРасчета.Реквизиты, Отказ);

Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

Запрос.УстановитьПараметр("ТабАмортизации", ПараметрыНачисленияАмортизации.Амортизация.ТаблицаАмортизации);
Запрос.УстановитьПараметр("СправкаРасчет", ПараметрыНачисленияАмортизации.Амортизация.СправкаРасчет);
Запрос.Текст =
"ВЫБРАТЬ
|	т1.ОбъектУчета КАК ОбъектУчета,
|	т1.СуммаАмортизацииБУ КАК СуммаАмортизацииБУ,
|	т1.СуммаАмортизацииНУ КАК СуммаАмортизацииНУ,
|	т1.СуммаАмортизацииПР КАК СуммаАмортизацииПР,
|	т1.СуммаАмортизацииВР КАК СуммаАмортизацииВР,
|	т1.СуммаКапитальныхВложенийВключаемыхВРасходы КАК СуммаКапитальныхВложенийВключаемыхВРасходы
|ПОМЕСТИТЬ ТабАмортизации
|ИЗ
|	&amp;ТабАмортизации КАК т1
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	т2.Объект КАК ОсновноеСредство,
|	т2.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
|	т2.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
|	т2.ОстатокСрокаПолезногоИспользованияБУ КАК ОстатокСрокаПолезногоИспользованияБУ,
|	т2.ОстатокСрокаПолезногоИспользованияНУ КАК ОстатокСрокаПолезногоИспользованияНУ
|ПОМЕСТИТЬ ТабАмортизацииСправка
|ИЗ
|	&amp;СправкаРасчет КАК т2";
Запрос.Выполнить();

Реквизиты = ПараметрыРасчета.Реквизиты[0];

Запрос.УстановитьПараметр("Дата", Новый Граница(Реквизиты.Период, ВидГраницы.Исключая));
Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
Запрос.УстановитьПараметр("Ссылка", Реквизиты.Регистратор);
Запрос.УстановитьПараметр("ТаблицаОС", ПараметрыРасчета.ТаблицаОС);

Запрос.Текст =
"ВЫБРАТЬ
|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
|	&amp;Организация КАК Организация,
|	ТаблицаОС.СтоимостьЧЛБУ КАК СтоимостьЧЛБУ,
|	ТаблицаОС.СтоимостьЧЛНУ КАК СтоимостьЧЛНУ,
|	ТаблицаОС.АмортизацияЧЛБУ КАК АмортизацияЧЛБУ,
|	ТаблицаОС.АмортизацияЧЛНУ КАК АмортизацияЧЛНУ,
|	ТаблицаОС.АмортизацияЗаТекущийМесяцБУ КАК АмортизацияЗаТекущийМесяцБУ,
|	ТаблицаОС.АмортизацияЗаТекущийМесяцНУ КАК АмортизацияЗаТекущийМесяцНУ,
|	ТаблицаОС.СрокДляНачисленияАмортизацииБУ КАК СрокДляНачисленияАмортизацииБУ
|ПОМЕСТИТЬ СписокОС
|ИЗ
|	&amp;ТаблицаОС КАК ТаблицаОС
|
|ИНДЕКСИРОВАТЬ ПО
|	ОсновноеСредство
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	СчетаУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
|	СчетаУчетаОС.СчетУчета КАК СчетУчета,
|	СчетаУчетаОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
|ПОМЕСТИТЬ СчетаУчетаОС
|ИЗ
|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
|			&amp;Дата,
|			Организация = &amp;Организация
|				И ОсновноеСредство В
|					(ВЫБРАТЬ
|						СписокОС.ОсновноеСредство
|					ИЗ
|						СписокОС КАК СписокОС)) КАК СчетаУчетаОС
|
|ИНДЕКСИРОВАТЬ ПО
|	ОсновноеСредство
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	СчетаУчетаОС.СчетУчета КАК Счет
|ПОМЕСТИТЬ РазличныеСчетаУчетаОС
|ИЗ
|	СчетаУчетаОС КАК СчетаУчетаОС
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	СчетаУчетаОС.СчетНачисленияАмортизации
|ИЗ
|	СчетаУчетаОС КАК СчетаУчетаОС
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПервоначальныеСведенияОСБУ.ОсновноеСредство КАК ОсновноеСредство,
|	ПервоначальныеСведенияОСБУ.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
|ПОМЕСТИТЬ ПервоначальныеСведенияОСБУ
|ИЗ
|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
|			&amp;Дата,
|			Организация = &amp;Организация
|				И ОсновноеСредство В
|					(ВЫБРАТЬ
|						СписокОС.ОсновноеСредство
|					ИЗ
|						СписокОС)) КАК ПервоначальныеСведенияОСБУ
|
|ИНДЕКСИРОВАТЬ ПО
|	ОсновноеСредство
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПервоначальныеСведенияОСНУ.ОсновноеСредство КАК ОсновноеСредство,
|	ПервоначальныеСведенияОСНУ.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов
|ПОМЕСТИТЬ ПервоначальныеСведенияОСНУ
|ИЗ
|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
|			&amp;Дата,
|			Организация = &amp;Организация
|				И ОсновноеСредство В
|					(ВЫБРАТЬ
|						СписокОС.ОсновноеСредство
|					ИЗ
|						СписокОС)) КАК ПервоначальныеСведенияОСНУ
|
|ИНДЕКСИРОВАТЬ ПО
|	ОсновноеСредство";
Запрос.Выполнить();

ВидыСубконто = Новый Массив;
ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);

Запрос.Текст =
"ВЫБРАТЬ
|	СтоимостьОС.Субконто1 КАК ОсновноеСредство,
|	СтоимостьОС.Счет КАК Счет,
|	СтоимостьОС.СуммаОстатокДт КАК СуммаОстатокДт,
|	СтоимостьОС.СуммаНУОстатокДт КАК СуммаНУОстатокДт,
|	СтоимостьОС.СуммаПРОстатокДт КАК СуммаПРОстатокДт,
|	СтоимостьОС.СуммаВРОстатокДт КАК СуммаВРОстатокДт,
|	СтоимостьОС.СуммаОстатокКт КАК СуммаОстатокКт,
|	СтоимостьОС.СуммаНУОстатокКт КАК СуммаНУОстатокКт,
|	СтоимостьОС.СуммаПРОстатокКт КАК СуммаПРОстатокКт,
|	СтоимостьОС.СуммаВРОстатокКт КАК СуммаВРОстатокКт
|ПОМЕСТИТЬ СтоимостьОС
|ИЗ
|	РегистрБухгалтерии.Хозрасчетный.Остатки(
|			&amp;Дата,
|			Счет В
|				(ВЫБРАТЬ
|					РазличныеСчетаУчетаОС.Счет
|				ИЗ
|					РазличныеСчетаУчетаОС КАК РазличныеСчетаУчетаОС),
|			&amp;ВидыСубконто,
|			Организация = &amp;Организация
|				И Субконто1 В
|					(ВЫБРАТЬ
|						СписокОС.ОсновноеСредство
|					ИЗ
|						СписокОС КАК СписокОС)) КАК СтоимостьОС
|
|ИНДЕКСИРОВАТЬ ПО
|	ОсновноеСредство,
|	Счет
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	СписокОС.НомерСтроки КАК НомерСтроки,
|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
|	СписокОС.СтоимостьЧЛБУ КАК СтоимостьЧЛБУ,
|	СписокОС.СтоимостьЧЛНУ КАК СтоимостьЧЛНУ,
|	СписокОС.АмортизацияЧЛБУ КАК АмортизацияЧЛБУ,
|	СписокОС.АмортизацияЧЛНУ КАК АмортизацияЧЛНУ,
|	СписокОС.АмортизацияЗаТекущийМесяцБУ КАК АмортизацияЗаТекущийМесяцБУ,
|	СписокОС.АмортизацияЗаТекущийМесяцНУ КАК АмортизацияЗаТекущийМесяцНУ,
|	СчетаУчетаОС.СчетУчета КАК СчетУчета,
|	СчетаУчетаОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
|	ЕСТЬNULL(СтоимостьОС.СуммаОстатокДт, 0) КАК СтоимостьОС,
|	ЕСТЬNULL(СтоимостьОС.СуммаНУОстатокДт, 0) - ЕСТЬNULL(ТабАмортизации.СуммаКапитальныхВложенийВключаемыхВРасходы, 0) КАК СтоимостьОСНУ,
|	ЕСТЬNULL(СтоимостьОС.СуммаПРОстатокДт, 0) КАК СтоимостьОСПР,
|	ЕСТЬNULL(СтоимостьОС.СуммаВРОстатокДт, 0) + ЕСТЬNULL(ТабАмортизации.СуммаКапитальныхВложенийВключаемыхВРасходы, 0) КАК СтоимостьОСВР,
|	ЕСТЬNULL(АмортизацияОС.СуммаОстатокКт, 0) КАК АмортизацияОС,
|	ЕСТЬNULL(ТабАмортизации.СуммаАмортизацииБУ, 0) КАК АмортизацияОСТекущийМесяц,
|	ЕСТЬNULL(АмортизацияОС.СуммаНУОстатокКт, 0) КАК АмортизацияОСНУ,
|	ЕСТЬNULL(ТабАмортизации.СуммаАмортизацииНУ, 0) КАК АмортизацияОСНУТекущийМесяц,
|	ЕСТЬNULL(ТабАмортизацииСправка.СрокПолезногоИспользованияБУ, 0) КАК СрокПолезногоИспользованияБУ,
|	ЕСТЬNULL(ТабАмортизацииСправка.СрокПолезногоИспользованияНУ, 0) КАК СрокПолезногоИспользованияНУ,
|	ЕСТЬNULL(ТабАмортизацииСправка.ОстатокСрокаПолезногоИспользованияБУ, 0) - 1 КАК УстарелОстатокСрокаПолезногоИспользованияБУ,
|	ЕСТЬNULL(ТабАмортизацииСправка.СрокПолезногоИспользованияБУ - РАЗНОСТЬДАТ(пит_ФактДатаОСПринятиеКУчету.пит_ФактическаяДатаОС, &amp;пит_ФактическаяДатаСписанияОС, МЕСЯЦ), ЕСТЬNULL(ТабАмортизацииСправка.ОстатокСрокаПолезногоИспользованияБУ, 0)) КАК ОстатокСрокаПолезногоИспользованияБУ,
//|	ЕСТЬNULL(ТабАмортизацииСправка.СрокПолезногоИспользованияБУ - РАЗНОСТЬДАТ(пит_ФактДатаОСПринятиеКУчету.пит_ФактическаяДатаОС, пит_ФактДатаОСЧастичнаяЛиквидация.пит_ФактическаяДатаОС, МЕСЯЦ), ТабАмортизацииСправка.ОстатокСрокаПолезногоИспользованияБУ) КАК ОстатокСрокаПолезногоИспользованияБУ,
|	ЕСТЬNULL(ТабАмортизацииСправка.ОстатокСрокаПолезногоИспользованияНУ, 0) - 1 КАК ОстатокСрокаПолезногоИспользованияНУ,
|	пит_ФактДатаОСПринятиеКУчету.пит_ФактическаяДатаОС КАК пит_ФактическаяДатаОСПринятиеКУчету,
|	пит_ФактДатаОСЧастичнаяЛиквидация.пит_ФактическаяДатаОС КАК пит_ФактическаяДатаОСЧастичнаяЛиквидация
|ИЗ
|	СписокОС КАК СписокОС
|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСБУ КАК ПервоначальныеСведенияОСБУ
|		ПО СписокОС.ОсновноеСредство = ПервоначальныеСведенияОСБУ.ОсновноеСредство
|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСНУ КАК ПервоначальныеСведенияОСНУ
|		ПО СписокОС.ОсновноеСредство = ПервоначальныеСведенияОСНУ.ОсновноеСредство
|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчетаОС КАК СчетаУчетаОС
|		ПО СписокОС.ОсновноеСредство = СчетаУчетаОС.ОсновноеСредство
|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОС КАК СтоимостьОС
|		ПО (СчетаУчетаОС.ОсновноеСредство = СтоимостьОС.ОсновноеСредство)
|			И (СчетаУчетаОС.СчетУчета = СтоимостьОС.Счет)
|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОС КАК АмортизацияОС
|		ПО (СчетаУчетаОС.ОсновноеСредство = АмортизацияОС.ОсновноеСредство)
|			И (СчетаУчетаОС.СчетНачисленияАмортизации = АмортизацияОС.Счет)
|		ЛЕВОЕ СОЕДИНЕНИЕ ТабАмортизации КАК ТабАмортизации
|		ПО СписокОС.ОсновноеСредство = ТабАмортизации.ОбъектУчета
|		ЛЕВОЕ СОЕДИНЕНИЕ ТабАмортизацииСправка КАК ТабАмортизацииСправка
|		ПО СписокОС.ОсновноеСредство = ТабАмортизацииСправка.ОсновноеСредство
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пит_ФактДатаОС.СрезПоследних(, пит_ВидыОперацийОС = ЗНАЧЕНИЕ(Перечисление.пит_ВидыОперацийОС.ВводОС)) КАК пит_ФактДатаОСПринятиеКУчету
|		ПО СписокОС.ОсновноеСредство = пит_ФактДатаОСПринятиеКУчету.ОсновноеСредство
|			И СписокОС.Организация = пит_ФактДатаОСПринятиеКУчету.Организация
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пит_ФактДатаОС.СрезПоследних(, пит_ВидыОперацийОС = ЗНАЧЕНИЕ(Перечисление.пит_ВидыОперацийОС.ЧастичнаяЛиквидация)) КАК пит_ФактДатаОСЧастичнаяЛиквидация
|		ПО СписокОС.ОсновноеСредство = пит_ФактДатаОСЧастичнаяЛиквидация.ОсновноеСредство
|			И СписокОС.Организация = пит_ФактДатаОСЧастичнаяЛиквидация.Организация
|
|УПОРЯДОЧИТЬ ПО
|	НомерСтроки";
ТаблицаРезультата = Запрос.Выполнить().Выгрузить();

Для каждого СтрокаДанных Из ТаблицаРезультата Цикл
	
	Если СтрокаДанных.СтоимостьОС=0 Тогда
		// Ошибка расчета
		СтрокаДанных.АмортизацияЧЛБУ = 0;
	Иначе
		СтрокаДанных.АмортизацияЧЛБУ = (СтрокаДанных.АмортизацияОС + СтрокаДанных.АмортизацияОСТекущийМесяц) * СтрокаДанных.СтоимостьЧЛБУ / СтрокаДанных.СтоимостьОС;
	КонецЕсли; 
	
	Если СтрокаДанных.СтоимостьОСНУ=0 Тогда
		// Ошибка расчета
		СтрокаДанных.АмортизацияЧЛНУ = 0;
	Иначе
		СтрокаДанных.АмортизацияЧЛНУ = (СтрокаДанных.АмортизацияОСНУ + СтрокаДанных.АмортизацияОСНУТекущийМесяц) * СтрокаДанных.СтоимостьЧЛНУ / СтрокаДанных.СтоимостьОСНУ;
	КонецЕсли; 
	
КонецЦикла; 

БылиИзменения = Ложь;
Для каждого СтрокаДокумента Из ДокументКонтекст.ОС Цикл
	СтрокаРезультата = ТаблицаРезультата.Найти(СтрокаДокумента.ОсновноеСредство, "ОсновноеСредство");
	Если СтрокаРезультата &lt;&gt; Неопределено Тогда
		БылиИзменения = Истина;
		СтрокаДокумента.пит_АмортизацияЧЛБУ = СтрокаРезультата.АмортизацияЧЛБУ;
		СтрокаДокумента.пит_АмортизацияЧЛНУ = СтрокаРезультата.АмортизацияЧЛНУ;
		СтрокаДокумента.пит_АмортизацияЗаТекущийМесяцБУ = СтрокаРезультата.АмортизацияОСТекущийМесяц;
		СтрокаДокумента.пит_АмортизацияЗаТекущийМесяцНУ = СтрокаРезультата.АмортизацияОСНУТекущийМесяц;
		СтрокаДокумента.пит_СрокДляНачисленияАмортизацииБУ = ?(СтрокаРезультата.ОстатокСрокаПолезногоИспользованияБУ&lt;0, 0, СтрокаРезультата.ОстатокСрокаПолезногоИспользованияБУ);
	КонецЕсли;
КонецЦикла;</Текст>
			</Алгоритм>
			<Алгоритм Имя="РасчетЦеныСуммыСуммыНДСПередачаОС" ИспользуетсяПриЗагрузке="true">
				<Текст>Запрос = Новый Запрос("ВЫБРАТЬ
|	ХозрасчетныйОстатки.СуммаОстаток КАК БУ,
|	ХозрасчетныйОстатки.СуммаНУОстаток КАК НУ
|ИЗ
|	РегистрБухгалтерии.Хозрасчетный.Остатки(&amp;МоментВремени, Счет В ИЕРАРХИИ (&amp;Счет), &amp;ВидСубконто, Субконто1 = &amp;ОС) КАК ХозрасчетныйОстатки");  

Запрос.УстановитьПараметр("МоментВремени", Новый Граница(Объект.МоментВремени(), ВидГраницы.Исключая)); 
Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.ОсновныеСредства);
Запрос.УстановитьПараметр("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
Запрос.УстановитьПараметр("ОС", ОбъектКоллекции.ОсновноеСредство);

Выборка = Запрос.Выполнить().Выбрать();

Если Выборка.Следующий() Тогда	
	БУ01 = Выборка.БУ;
	НУ01 = Выборка.НУ;
Иначе
	БУ01 = 0;
	НУ01 = 0;
КонецЕсли;

Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.АмортизацияОсновныхСредств);
Выборка = Запрос.Выполнить().Выбрать();

Если Выборка.Следующий() Тогда	
	БУ02 = Выборка.БУ;
	НУ02 = Выборка.НУ;
Иначе
	БУ02 = 0;
	НУ02 = 0;
КонецЕсли;

БУ02 = Макс(-БУ02, БУ02);
НУ02 = Макс(-НУ02, НУ02);

Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);
Выборка = Запрос.Выполнить().Выбрать();

Если Выборка.Следующий() Тогда	
	БУ03 = Выборка.БУ;
	НУ03 = Выборка.НУ;
Иначе
	БУ03 = 0;
	НУ03 = 0;
КонецЕсли;

УстановитьПривилегированныйРежим(Истина);

Запрос = Новый Запрос;

Если Метаданные.Документы.Найти("АвизоОСВходящее") &lt;&gt; Неопределено Тогда 
	ДопУсловие = " И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.АвизоОСВходящее";
Иначе
	ДопУсловие = "";
КонецЕсли;

Организация = Объект.Организация;

ГоловнаяОрганизация = Организация.ГоловнаяОрганизация;
Если Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
	ГоловнаяОрганизация = Организация;
КонецЕсли;
Запрос.УстановитьПараметр("Организация", 		Организация);
Запрос.УстановитьПараметр("ГоловнаяОрганизация",ГоловнаяОрганизация);
Запрос.УстановитьПараметр("СостояниеОС", 		Перечисления.СостоянияОС.ПринятоКУчету);
Запрос.УстановитьПараметр("ОС",					ОбъектКоллекции.ОсновноеСредство);
Запрос.Текст = 
"ВЫБРАТЬ ПЕРВЫЕ 1
|	СостоянияОСОрганизаций.Регистратор КАК Документ,
|	СостоянияОСОрганизаций.ДатаСостояния КАК Дата
|ИЗ
|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
|
|ГДЕ
|	СостоянияОСОрганизаций.ОсновноеСредство = &amp;ОС И
|	СостоянияОСОрганизаций.Организация В 
|		(ВЫБРАТЬ
|				Организации.Ссылка КАК Ссылка
|			ИЗ
|				Справочник.Организации КАК Организации
|			ГДЕ
|				(Организации.Ссылка = &amp;ГоловнаяОрганизация
|					ИЛИ Организации.ГоловнаяОрганизация = &amp;ГоловнаяОрганизация
|					ИЛИ Организации.Ссылка = &amp;Организация)) И
|	СостоянияОСОрганизаций.Состояние = &amp;СостояниеОС" + ДопУсловие + "
|
|УПОРЯДОЧИТЬ ПО
|	Дата УБЫВ";
ВыборкаДоков = Запрос.Выполнить().Выбрать();

Если ВыборкаДоков.Следующий()  Тогда
	ДатаВводаВЭксплуатацию = ВыборкаДоков.Дата;	
Иначе
	ДатаВводаВЭксплуатацию = '00010101'; 
КонецЕсли;

РазностьДат = Цел((ТекущаяДатаСеанса() - ДатаВводаВЭксплуатацию)/31536000);

Цена = 0;

Если БУ01 + БУ03 &lt;= 100000 Тогда
    Цена = БУ01 + БУ03 - БУ02;
Иначе 
	Цена = НУ01 + НУ03 - НУ02;
    Если РазностьДат &lt; 5 Тогда
        Цена = Цена + (БУ01 + БУ03) - (НУ01 + НУ03);
	КонецЕсли;  
КонецЕсли;

Если Цена &lt; 1000 Тогда
    Цена = 1000;
КонецЕсли; 

ОбъектКоллекции.Цена = Окр(Цена, 2, 1);
ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(ОбъектКоллекции);
ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ОбъектКоллекции, Объект.СуммаВключаетНДС);  

Если (НУ01 + НУ03) &lt;= 0 Тогда
	НУСоответствует = Ложь;  
	Субконто = Статья651;
Иначе
	Субконто = Статья652;
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="СоставлениеСтруктурыДляПрослеживаемости" ИспользуетсяПриЗагрузке="true">
				<Текст>ДокументСсылка = Объект.Ссылка;
ТекущиеДанные  = Строка;

ЭтоПоступлениеТоваровИУслуг = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг");
ЭтоКорректировкаПоступления = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаПоступления");
ЭтоВводОстатков             = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВводНачальныхОстатков");
ЭтоПринятиеКУчетуОС         = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПринятиеКУчетуОС");
ЭтоМодернизацияОС           = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.МодернизацияОС");
ЭтоПокупкаОС                = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И ИмяТаблицы = "ОсновныеСредства";
ЭтоПередачаТоваровКомитенту = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПередачаТоваров") 
И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту");
ЭтоСписаниеОС               = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеОС");
ЭтоВозвратПоставщику        = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику");

Если ЭтоПоступлениеТоваровИУслуг 
	 Или ЭтоВозвратПоставщику
	 Или ЭтоКорректировкаПоступления Тогда
	ПоставщикРезидентТаможенногоСоюза = Справочники.Контрагенты.КонтрагентРезидентТаможенногоСоюза(Объект.Контрагент);
КонецЕсли;

// Предопределенные значения
ДатаРеализации                      = '00010101';
ДатаТекущегоДокумента               = '00010101';
ЭтоВозвратРозница                   = Ложь;
ЭтоВозвратКомиссия                  = Ложь;
ВыставленСФ                         = Ложь;
СчетФактура                         = Новый СписокЗначений;
ДокументРеализации                  = Неопределено;
Покупатель                          = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
Цена                                = 0;
Комитент                            = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
ВидЗапасов                          = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка");
Комиссионер                         = ?(ПараметрыФормыПодбора.ЭтоКомиссия, Объект.Контрагент, ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка"));
ВозвратКомиссияПоТекДокументу       = Ложь;
ЭтоОС                               = Ложь;
ЭтоСоставноеОС                      = Ложь;
ОбъектСтроительства                 = ПредопределенноеЗначение("Справочник.ОбъектыСтроительства.ПустаяСсылка");
ЕстьРасхождения                     = ЭтоПоступлениеТоваровИУслуг И Объект.ЕстьРасхождения;
ЭтоВвозИзЕАЭС                       = ЭтоПоступлениеТоваровИУслуг И ПоставщикРезидентТаможенногоСоюза;
ЭтоВозвратВЕАЭС                     = ЭтоВозвратПоставщику И ПоставщикРезидентТаможенногоСоюза;
ЭтоКорректировкаПоступленияЕАЭС     = ЭтоКорректировкаПоступления И ПоставщикРезидентТаможенногоСоюза;
Сумма                               = 0;
Комплектующие                       = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
ОсновноеСредство                    = ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка");
ТребуетсяКонтрольЗаполненияСуммы    = Ложь;
ЭтоПродажа                          = Ложь;
ВалютаДокумента                     = ПредопределенноеЗначение("Справочник.Валюты.ПустаяСсылка");
СтранаПроисхождения                 = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
ТребуетсяКолонкаСтранаПроисхождения = Ложь;
ТребуетсяСуммаНДС                   = Ложь;
ГрупповойОбъектОС                   = Ложь;
ЭтоВводОстатковПоЗабалансу          = Ложь;

ЭтоСведенияПООстаткамОС				= ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПередачаОС");

// Контроль заполнения суммы в документе и отображение колонки сумма в форме подбора разные вещи
// Например, для комплекта списываемого в требовании накладной колонка сумма в форме подбора должна быть, но заполнение этой колонки не обязательно
// И перед открытием формы подбора не осуществляется контроль, что колонка сумма заполнена
ТребуетсяКонтрольЗаполненияСуммы    = Ложь;
ТребуетсяОтображениеКолонкиСумма    = Ложь;

Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КомплектацияНоменклатуры")
	И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация") Тогда
	ЭтоРазукомплектация = Истина;
Иначе
	ЭтоРазукомплектация = Ложь;
КонецЕсли;

// Параметры по основным средствам
ЗначениеПеречисленияГрупповойОбъект = ПредопределенноеЗначение("Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект");

Если ЭтоПокупкаОС Тогда
	ЭтоОС = Истина;
	ГрупповойОбъектОС = ТекущиеДанные.ОсновноеСредство.ЕдиницаУчета = ЗначениеПеречисленияГрупповойОбъект;
КонецЕсли;

Если ЭтоПринятиеКУчетуОС Тогда
	ЭтоОС = Истина;
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование") Тогда
		Номенклатура = Объект.Номенклатура;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПринятияКУчетуОсновныхСредств.ОбъектыСтроительства") Тогда
		ЭтоСоставноеОС = Истина;
		ОбъектСтроительства = Объект.ОбъектСтроительства;
		Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	КонецЕсли;
КонецЕсли;

Если ЭтоМодернизацияОС Тогда
	ЭтоСоставноеОС = Истина;
	ЭтоОС = Истина;
	ОбъектСтроительства = Объект.ОбъектСтроительства;
	Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
КонецЕсли;

Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПередачаОС") Тогда
	ЭтоОС = Истина;
	ЭтоПродажа = Истина;
	ГрупповойОбъектОС = ТекущиеДанные.ОсновноеСредство.ЕдиницаУчета = ЗначениеПеречисленияГрупповойОбъект;
	СтавкаНДС = ТекущиеДанные.СтавкаНДС;
	СуммаНДС = ТекущиеДанные.СуммаНДС;
	ТребуетсяСуммаНДС = СтавкаНДС &lt;&gt; ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС")
	И СтавкаНДС &lt;&gt; ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС0")
	И Не ГрупповойОбъектОС;
КонецЕсли;

Если ЭтоСписаниеОС Тогда 
	ЭтоОС = Истина;
	ГрупповойОбъектОС = ТекущиеДанные.ОсновноеСредство.ЕдиницаУчета = ЗначениеПеречисленияГрупповойОбъект;
КонецЕсли;

Если ЭтоОС Тогда
	ОсновноеСредство = ТекущиеДанные.ОсновноеСредство;
КонецЕсли;

// Определение суммовых параметров, необходимости отражения колонки сумма, необходимости контроля заполнения суммы
ИспользуетсяВалютаРеглУчета = Ложь;
// Заполнение суммы, если такой реквизит есть 
Если ПараметрыФормыПодбора.ПрослеживаемыйКомплект Или ЭтоОС И Не ГрупповойОбъектОС И НЕ ЭтоВводОстатков Тогда
	ТребуетсяКонтрольЗаполненияСуммы = Истина;
	ТребуетсяОтображениеКолонкиСумма = Истина;
	Если ПараметрыФормыПодбора.ЭтоКомиссия И Не ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
		ТребуетсяКонтрольЗаполненияСуммы = Ложь;
		ТребуетсяОтображениеКолонкиСумма = Ложь;
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") 
		И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетОСписании") Тогда
		ТребуетсяКонтрольЗаполненияСуммы = Ложь;
		ТребуетсяОтображениеКолонкиСумма = Ложь;
	ИначеЕсли ЭтоВводОстатков Тогда
		ТребуетсяКонтрольЗаполненияСуммы = Ложь;
		ТребуетсяОтображениеКолонкиСумма = Ложь;
	ИначеЕсли (ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
		Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
		Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаРеализации")) И ПараметрыФормыПодбора.ЭтоКомиссия 
		Или ЭтоМодернизацияОС Тогда
		ТребуетсяКонтрольЗаполненияСуммы = Ложь;
		ТребуетсяОтображениеКолонкиСумма = Ложь;
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		Сумма = ТекущиеДанные.Сумма;
		ТребуетсяКонтрольЗаполненияСуммы = Истина;
		ТребуетсяОтображениеКолонкиСумма = Истина;
		ИспользуетсяВалютаРеглУчета = Истина;
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеТоваров")
		Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТребованиеНакладная")
		Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеМатериаловИзЭксплуатации") Тогда
		ТребуетсяКонтрольЗаполненияСуммы = Ложь;
		ТребуетсяОтображениеКолонкиСумма = Истина;
		ИспользуетсяВалютаРеглУчета = Истина;
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПередачаОборудованияВМонтаж") 
		Или (ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПринятиеКУчетуОС")
		И Не Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПринятияКУчетуОсновныхСредств.ПоРезультатамИнвентаризации"))
		Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КомплектацияНоменклатуры")
		Или ЭтоПередачаТоваровКомитенту Тогда
		ТребуетсяКонтрольЗаполненияСуммы = Ложь;
		ТребуетсяОтображениеКолонкиСумма = Ложь;
	ИначеЕсли (ЭтоПринятиеКУчетуОС
		И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПринятияКУчетуОсновныхСредств.ПоРезультатамИнвентаризации")) Тогда
		Сумма = Объект.СтоимостьБУ;
		ИспользуетсяВалютаРеглУчета = Истина;
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ВидДоговора = ПрослеживаемостьФормыВызовСервера.ПолучитьВидДоговора(Объект.ДоговорКонтрагента);
		Если ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером") Тогда
			ТребуетсяКонтрольЗаполненияСуммы = Ложь;
			ТребуетсяОтображениеКолонкиСумма = Ложь;
		ИначеЕсли Объект.СуммаВключаетНДС Тогда
			Сумма = ТекущиеДанные.Сумма - ТекущиеДанные.СуммаНДС;
		Иначе
			Сумма = ТекущиеДанные.Сумма;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаПоступления") И ПараметрыФормыПодбора.ЭтоКомиссияПоПродаже Тогда
		ТребуетсяКонтрольЗаполненияСуммы = Ложь;
		ТребуетсяОтображениеКолонкиСумма = Ложь;
	ИначеЕсли ЭтоСписаниеОС Тогда
		ТребуетсяКонтрольЗаполненияСуммы = Ложь;
		ТребуетсяОтображениеКолонкиСумма = Ложь;
	ИначеЕсли Объект.СуммаВключаетНДС Тогда
		Сумма = ТекущиеДанные.Сумма - ТекущиеДанные.СуммаНДС;
	Иначе
		Сумма = ТекущиеДанные.Сумма;
	КонецЕсли;
КонецЕсли;

Если ТребуетсяОтображениеКолонкиСумма Тогда
	ВалютаДокумента = ?(ИспользуетсяВалютаРеглУчета,
	ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета(),
	Объект.ВалютаДокумента);
КонецЕсли;

Если ЭтоВводОстатков И ИмяТаблицы = "БухСправка" Тогда
	ЭтоВводОстатковПоЗабалансу = Истина;
КонецЕсли;

Если ЭтоВводОстатков
	И ТекущиеДанные.СчетУчета = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств") Тогда
	ВводОстатковПо0803 = Истина;
	ОбъектСтроительства = ТекущиеДанные.Номенклатура;
Иначе
	ВводОстатковПо0803 = Ложь;
КонецЕсли;

// Параметры по разукомплектации
Если Не ЭтоОС И Не ЭтоРазукомплектация И Не ЭтоВводОстатковПоЗабалансу Тогда
	Номенклатура = ТекущиеДанные.Номенклатура;
ИначеЕсли ЭтоРазукомплектация Тогда
	Номенклатура = Объект.Номенклатура;
ИначеЕсли ЭтоВводОстатковПоЗабалансу Тогда
	Если ТипЗнч(ТекущиеДанные.Субконто1) = Тип("СправочникСсылка.Номенклатура") Тогда
		Номенклатура = ТекущиеДанные.Субконто1;
	ИначеЕсли ТипЗнч(ТекущиеДанные.Субконто2) = Тип("СправочникСсылка.Номенклатура") Тогда
		Номенклатура = ТекущиеДанные.Субконто2;
	ИначеЕсли ТипЗнч(ТекущиеДанные.Субконто3) = Тип("СправочникСсылка.Номенклатура") Тогда
		Номенклатура = ТекущиеДанные.Субконто3;
	КонецЕсли;
КонецЕсли;

СтруктураПараметров = Новый Структура;
СтруктураПараметров.Вставить("Организация",                      Объект.Организация);
СтруктураПараметров.Вставить("Номенклатура",                     Номенклатура);
СтруктураПараметров.Вставить("Период",                           Объект.Дата);
СтруктураПараметров.Вставить("ИмяТаблицы",                       ИмяТаблицы);
СтруктураПараметров.Вставить("ВыборПоОстаткам",                  НЕ ПараметрыФормыПодбора.ЭтоПоступление);
СтруктураПараметров.Вставить("ЭтоОС",                            ЭтоОС);
СтруктураПараметров.Вставить("ЭтоСоставноеОС",                   ЭтоСоставноеОС);
СтруктураПараметров.Вставить("ОбъектСтроительства",              ОбъектСтроительства);
СтруктураПараметров.Вставить("ПрослеживаемыйКомплект",           ПараметрыФормыПодбора.ПрослеживаемыйКомплект);
СтруктураПараметров.Вставить("Сумма",                            Сумма);
СтруктураПараметров.Вставить("Комплектующие",                    ?(ЭтоРазукомплектация, ТекущиеДанные.Номенклатура, Комплектующие));
СтруктураПараметров.Вставить("ЭтоРазукомплектация",              ЭтоРазукомплектация);
СтруктураПараметров.Вставить("ОсновноеСредство",                 ОсновноеСредство);
СтруктураПараметров.Вставить("СтавкаНДС",                        СтавкаНДС);
СтруктураПараметров.Вставить("СуммаНДС",                         СуммаНДС);
СтруктураПараметров.Вставить("ЭтоПродажа",                       ЭтоПродажа);
СтруктураПараметров.Вставить("ВалютаДокумента",                  ВалютаДокумента);
СтруктураПараметров.Вставить("ТребуетсяЗаполнениеСуммы",         ТребуетсяКонтрольЗаполненияСуммы);
СтруктураПараметров.Вставить("ТребуетсяОтображениеКолонкиСумма", ТребуетсяОтображениеКолонкиСумма);
СтруктураПараметров.Вставить("ГрупповойОбъектОС",                ГрупповойОбъектОС);
СтруктураПараметров.Вставить("ЭтоСписаниеОС",                       ЭтоСписаниеОС);
СтруктураПараметров.Вставить("ЭтоВводОстатковПоЗабалансу",       ЭтоВводОстатковПоЗабалансу);
Структурапараметров.Вставить("ВводОстатковПо0803",               ВводОстатковПо0803); 

Структурапараметров.Вставить("ЭтоСведенияПООстаткамОС",          ЭтоСведенияПООстаткамОС);
Структурапараметров.Вставить("ЭтоПринятиеКУчетуОС",          	 ЭтоПринятиеКУчетуОС);

Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
	Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТребованиеНакладная")  Тогда
	Структурапараметров.Вставить("ПоказыватьТолькоОстатки",Истина);
Иначе
	Структурапараметров.Вставить("ПоказыватьТолькоОстатки",Ложь);
КонецЕсли;

Если ТекущиеДанные.ПрослеживаемыйТовар Или ВводОстатковПо0803
	И (НЕ ЭтоВвозИзЕАЭС ИЛИ ЭтоВозвратВЕАЭС ИЛИ ЭтоКорректировкаПоступленияЕАЭС) Тогда
	ЕстьОшибкиЗаполнения = Ложь;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") И ИмяТаблицы = "ТоварыВозвращенные" Тогда
		ЭтоВозвратКомиссия = Истина;
		ДокументРеализации = ТекущиеДанные.ДокументРеализации;
		ДатаТекущегоДокумента = КонецДня(Объект.Дата);
		КлючСтроки = ТекущиеДанные.КлючСтроки;
		СтрокаСПокупателем = Объект.Возвраты.НайтиСтроки(Новый Структура("КлючСтроки", КлючСтроки));
		ВозвратКомиссияПоТекДокументу = ТекущиеДанные.ПоТекущемуДокументу;
		Если СтрокаСПокупателем.Количество() &gt; 0 Тогда
			ВыставленСФ = СтрокаСПокупателем[0].ВыставленСФ;
			Покупатель  = СтрокаСПокупателем[0].Покупатель;
		КонецЕсли;
		Если ВыставленСФ Тогда
			МассивСФ = Объект.ВозвратыИсходныеДокументы.НайтиСтроки(Новый Структура("КлючСтроки", КлючСтроки));
			Для Каждого Строка Из МассивСФ Цикл
				Если ЗначениеЗаполнено(Строка.ИсходныйДокумент) И Не ТекущиеДанные.ПоТекущемуДокументу Тогда
					СчетФактура.Добавить(Строка.ИсходныйДокумент);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьРасхождения Тогда
		КоличествоРНПТ = Мин(ТекущиеДанные.Количество, ТекущиеДанные.КоличествоПоДокументу);
	ИначеЕсли ГрупповойОбъектОС Тогда
		КоличествоРНПТ = ТекущиеДанные.Количество;
	ИначеЕсли Не ЭтоОС Тогда
		КоличествоРНПТ = ТекущиеДанные.Количество;
	КонецЕсли;
	
	// Установим дополнительные ограничения по комиссионным товарам
	
	Если ЭтоПередачаТоваровКомитенту Тогда
		Комитент    = Объект.Контрагент;
		ВидЗапасов = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента");
	КонецЕсли;
	
	// Установим параметры по возвратам
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") И НЕ ПараметрыФормыПодбора.ЭтоКомиссия Тогда
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") И ИмяТаблицы = "Возвраты" Тогда
		ЭтоВозвратРозница     = Истина;
		ДатаТекущегоДокумента = КонецДня(Объект.Дата);
		ДатаРеализации        = ТекущиеДанные.ДатаРеализации;
	ИначеЕсли ЭтоВозвратПоставщику И НЕ ПараметрыФормыПодбора.ЭтоПоступление Тогда
		Если ПараметрыФормыПодбора.ЭтоКомиссия Тогда 
			Комитент    = Объект.Контрагент;
			ВидЗапасов  = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию");
			Комиссионер = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
			ДатаТекущегоДокумента = КонецДня(Объект.Дата);
		Иначе
			ЭтоВозвратПоставщику  = Истина;
			ДатаТекущегоДокумента = КонецДня(Объект.Дата);
			Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент) Тогда
				Комитент   = ТекущиеДанные.Контрагент;
				ВидЗапасов = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЭтоОС И Не ПараметрыФормыПодбора.ПрослеживаемыйКомплект И Не ЭтоВводОстатковПоЗабалансу
		Или ЭтоВозвратПоставщику Тогда
		СтранаПроисхождения = ТекущиеДанные.СтранаПроисхождения;
	КонецЕсли;
	
	Если (ЭтоПродажа Или ЭтоСписаниеОС) И ГрупповойОбъектОС Тогда
		ТребуетсяКолонкаСтранаПроисхождения = Истина;
	ИначеЕсли ЭтоОС И Не ГрупповойОбъектОС Тогда
		ТребуетсяКолонкаСтранаПроисхождения = Истина;
	ИначеЕсли ЭтоВводОстатковПоЗабалансу Тогда
		ТребуетсяКолонкаСтранаПроисхождения = Истина;
	ИначеЕсли ПараметрыФормыПодбора.ПрослеживаемыйКомплект Тогда
		Если ЭтоПередачаТоваровКомитенту Тогда 
			ТребуетсяКолонкаСтранаПроисхождения = Ложь;
		ИначеЕсли ЭтоВозвратПоставщику Тогда
			ТребуетсяКолонкаСтранаПроисхождения = Ложь;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
			ТребуетсяКолонкаСтранаПроисхождения = Истина;
		ИначеЕсли ЭтоВводОстатков Тогда
			ТребуетсяКолонкаСтранаПроисхождения = Истина
		ИначеЕсли ПараметрыФормыПодбора.ЭтоПоступление Тогда
			ТребуетсяКолонкаСтранаПроисхождения = Ложь;
		Иначе
			ТребуетсяКолонкаСтранаПроисхождения = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ТекущиеДанныеВСтруктуре = Новый Структура("СчетУчета", ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка"));
	ЗаполнитьЗначенияСвойств(ТекущиеДанныеВСтруктуре, ТекущиеДанные); // СчетУчета может отсутствовать в табличной части. 
	
	СтруктураПараметров.Вставить("Количество",                        ?(ЭтоОС И Не ГрупповойОбъектОС, 1, КоличествоРНПТ));
	СтруктураПараметров.Вставить("СтранаПроисхождения",               СтранаПроисхождения);
	СтруктураПараметров.Вставить("ЭтоВозвратРозница",                 ЭтоВозвратРозница);
	СтруктураПараметров.Вставить("ЭтоВозвратПоставщику",              ЭтоВозвратПоставщику);
	СтруктураПараметров.Вставить("ДатаРеализации",                    ДатаРеализации);
	СтруктураПараметров.Вставить("ДатаТекущегоДокумента",             ДатаТекущегоДокумента);
	СтруктураПараметров.Вставить("ТекущийДокумент",                   ДокументСсылка);
	СтруктураПараметров.Вставить("ДокументРеализации",                ДокументРеализации);
	СтруктураПараметров.Вставить("Цена",                              Цена);
	СтруктураПараметров.Вставить("Комитент",                          Комитент);
	СтруктураПараметров.Вставить("Комиссионер",                       Комиссионер);
	СтруктураПараметров.Вставить("ВидЗапасов",                        ВидЗапасов);
	СтруктураПараметров.Вставить("ВыставленСФ",                       ВыставленСФ);
	СтруктураПараметров.Вставить("ЭтоВозвратКомиссия",                ЭтоВозвратКомиссия);
	СтруктураПараметров.Вставить("Покупатель",                        Покупатель);
	СтруктураПараметров.Вставить("СчетФактура",                       СчетФактура);
	СтруктураПараметров.Вставить("ВозвратКомиссияПоТекДокументу",     ВозвратКомиссияПоТекДокументу);
	СтруктураПараметров.Вставить("ЭтоИсходныеРНПТ",                   ПараметрыФормыПодбора.ЭтоИсходныеРНПТ);
	СтруктураПараметров.Вставить("ОткрыватьДляПросмотра",             ПараметрыФормыПодбора.ЭтоИсходныеРНПТ Или (ЭтоСписаниеОС И Не ГрупповойОбъектОС));
	СтруктураПараметров.Вставить("ПоставщикРезидентТаможенногоСоюза", ЭтоВозвратВЕАЭС);
	СтруктураПараметров.Вставить("СчетУчета",                         ТекущиеДанныеВСтруктуре.СчетУчета);
	СтруктураПараметров.Вставить("ТребуетсяКолонкаСтранаПроисхождения", ТребуетсяКолонкаСтранаПроисхождения);
	СтруктураПараметров.Вставить("ТребуетсяСуммаНДС",                 ТребуетсяСуммаНДС);
	
	Если ЭтоВводОстатков Тогда
		ИДСтроки = ТекущиеДанные.Ключ;
	ИначеЕсли ЭтоСписаниеОС Тогда
		ИДСтроки = ТекущиеДанные.КлючСтроки;
	Иначе
		ИДСтроки = ТекущиеДанные.ИдентификаторСтроки;
	КонецЕсли;
	АдресТаблицыРНПТВХранилище = ОбщегоНазначенияБПВызовСервера.ПоместитьРНПТВХранилище(
	Объект, ИДСтроки, ДокументСсылка.УникальныйИдентификатор(), ПараметрыФормыПодбора.ЭтоИсходныеРНПТ);
	
	СтруктураПараметров.Вставить("АдресТаблицыРНПТВХранилище", АдресТаблицыРНПТВХранилище);
	СтруктураПараметров.Вставить("ЭтоПоступление", ПараметрыФормыПодбора.ЭтоПоступление);
	
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ТекстЗапросаВозвратТоваровКомиссия" ИспользуетсяПриЗагрузке="true">
				<Текст>ТекстЗапроса = "ВЫБРАТЬ
|	ОтчетКомиссионераОПродажахТовары.Номенклатура КАК Номенклатура,
|	ОтчетКомиссионераОПродажахПокупатели.Покупатель КАК Покупатель,
|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура КАК СчетФактура,
|	ОтчетКомиссионераОПродажахПокупатели.ВыставленСФ КАК ВыставленСФ,
|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.РНПТ КАК РНПТ,
|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Комитент КАК Комитент,
|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Количество КАК Количество,
|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
|	ОтчетКомиссионераОПродажахТовары.Ссылка.Организация КАК Организация,
|	ВЫБОР
|		КОГДА ОтчетКомиссионераОПродажахТовары.ПрослеживаемыйКомплект
|			ТОГДА ОтчетКомиссионераОПродажахСведенияПрослеживаемости.СтранаПроисхождения
|		ИНАЧЕ ОтчетКомиссионераОПродажахТовары.СтранаПроисхождения
|	КОНЕЦ КАК СтранаПроисхождения,
|	ОтчетКомиссионераОПродажахТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Номенклатура КАК Комплектующие
|ПОМЕСТИТЬ РеализацияИВозврат
|ИЗ
|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.СведенияПрослеживаемости КАК ОтчетКомиссионераОПродажахСведенияПрослеживаемости
|			ПО ОтчетКомиссионераОПродажахТовары.Ссылка = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Ссылка
|				И ОтчетКомиссионераОПродажахТовары.ИдентификаторСтроки = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.ИдентификаторСтроки
|		ПО ОтчетКомиссионераОПродажахПокупатели.Ссылка = ОтчетКомиссионераОПродажахТовары.Ссылка
|			И ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ОтчетКомиссионераОПродажахТовары.КлючСтроки
|ГДЕ
|	ОтчетКомиссионераОПродажахПокупатели.Ссылка = &amp;ДокументРеализации
|	И ОтчетКомиссионераОПродажахПокупатели.Покупатель = &amp;Покупатель
|	И ОтчетКомиссионераОПродажахТовары.Номенклатура = &amp;Номенклатура
|	И ВЫБОР
|			КОГДА &amp;ПрослеживаемыйКомплект
|				ТОГДА ИСТИНА
|			ИНАЧЕ ОтчетКомиссионераОПродажахТовары.СтранаПроисхождения = &amp;СтранаПроисхождения
|		КОНЕЦ
|	И ВЫБОР
|			КОГДА ОтчетКомиссионераОПродажахПокупатели.ВыставленСФ
|				ТОГДА ОтчетКомиссионераОПродажахПокупатели.СчетФактура В (&amp;СчетФактура)
|			ИНАЧЕ ИСТИНА
|		КОНЕЦ
|	И ОтчетКомиссионераОПродажахПокупатели.ВыставленСФ = &amp;ВыставленСФ
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ОтчетКомиссионераОПродажахТоварыВозвращенные.Номенклатура,
|	ОтчетКомиссионераОПродажахВозвраты.Покупатель,
|	ОтчетКомиссионераОПродажахВозвратыИсходныеДокументы.ИсходныйДокумент,
|	ОтчетКомиссионераОПродажахВозвраты.ВыставленСФ,
|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.РНПТ,
|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Комитент,
|	-ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Количество,
|	-ОтчетКомиссионераОПродажахСведенияПрослеживаемости.КоличествоПрослеживаемости,
|	ВложенныйЗапрос.Организация,
|	ВЫБОР
|		КОГДА ОтчетКомиссионераОПродажахТоварыВозвращенные.ПрослеживаемыйКомплект
|			ТОГДА ОтчетКомиссионераОПродажахСведенияПрослеживаемости.СтранаПроисхождения
|		ИНАЧЕ ОтчетКомиссионераОПродажахТоварыВозвращенные.СтранаПроисхождения
|	КОНЕЦ,
|	ОтчетКомиссионераОПродажахТоварыВозвращенные.ПрослеживаемыйКомплект,
|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Номенклатура
|ИЗ
|	(ВЫБРАТЬ
|		ПрослеживаемыеТовары.Регистратор КАК Регистратор,
|		ПрослеживаемыеТовары.Организация КАК Организация
|	ИЗ
|		РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
|	ГДЕ
|		ПрослеживаемыеТовары.Организация = &amp;Организация
|		И ПрослеживаемыеТовары.Номенклатура = &amp;Номенклатура
|		И ВЫБОР
|				КОГДА &amp;ПрослеживаемыйКомплект
|					ТОГДА ИСТИНА
|				ИНАЧЕ ПрослеживаемыеТовары.СтранаПроисхождения = &amp;СтранаПроисхождения
|			КОНЕЦ
|		И ПрослеживаемыеТовары.Комиссионер = &amp;Комиссионер
|		И ПрослеживаемыеТовары.Период &lt;= &amp;ДатаТекущегоДокумента
|		И ПрослеживаемыеТовары.Регистратор &lt;&gt; &amp;ТекущийДокумент
|		И ПрослеживаемыеТовары.ОснованиеДляВозврата = &amp;ДокументРеализации) КАК ВложенныйЗапрос
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ОтчетКомиссионераОПродажахТоварыВозвращенные
|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.ВозвратыИсходныеДокументы КАК ОтчетКомиссионераОПродажахВозвратыИсходныеДокументы
|			ПО ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка = ОтчетКомиссионераОПродажахВозвратыИсходныеДокументы.Ссылка
|				И ОтчетКомиссионераОПродажахТоварыВозвращенные.КлючСтроки = ОтчетКомиссионераОПродажахВозвратыИсходныеДокументы.КлючСтроки
|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.СведенияПрослеживаемости КАК ОтчетКомиссионераОПродажахСведенияПрослеживаемости
|			ПО ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Ссылка
|				И ОтчетКомиссионераОПродажахТоварыВозвращенные.ИдентификаторСтроки = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.ИдентификаторСтроки
|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ОтчетКомиссионераОПродажахВозвраты
|			ПО ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка = ОтчетКомиссионераОПродажахВозвраты.Ссылка
|				И ОтчетКомиссионераОПродажахТоварыВозвращенные.КлючСтроки = ОтчетКомиссионераОПродажахВозвраты.КлючСтроки
|		ПО ВложенныйЗапрос.Регистратор = ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка
|ГДЕ
|	ОтчетКомиссионераОПродажахТоварыВозвращенные.Номенклатура = &amp;Номенклатура
|	И ОтчетКомиссионераОПродажахТоварыВозвращенные.ДокументРеализации = &amp;ДокументРеализации
|	И ВЫБОР
|			КОГДА &amp;ПрослеживаемыйКомплект
|				ТОГДА ИСТИНА
|			ИНАЧЕ ОтчетКомиссионераОПродажахТоварыВозвращенные.СтранаПроисхождения = &amp;СтранаПроисхождения
|		КОНЕЦ
|	И ВЫБОР
|			КОГДА &amp;ВыставленСФ
|				ТОГДА ОтчетКомиссионераОПродажахВозвратыИсходныеДокументы.ИсходныйДокумент В (&amp;СчетФактура)
|			ИНАЧЕ ИСТИНА
|		КОНЕЦ
|	И ОтчетКомиссионераОПродажахВозвраты.ВыставленСФ = &amp;ВыставленСФ
|	И ОтчетКомиссионераОПродажахВозвраты.Покупатель = &amp;Покупатель
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	РеализацияИВозврат.Номенклатура КАК Номенклатура,
|	РеализацияИВозврат.РНПТ КАК РНПТ,
|	РеализацияИВозврат.Комитент КАК Комитент,
|	СУММА(РеализацияИВозврат.Количество) КАК Количество,
|	СУММА(РеализацияИВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
|	РеализацияИВозврат.Организация КАК Организация,
|	РеализацияИВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
|	РеализацияИВозврат.Комплектующие КАК Комплектующие,
|	РеализацияИВозврат.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
|ПОМЕСТИТЬ РеализацияМинусВозвратИтого
|ИЗ
|	РеализацияИВозврат КАК РеализацияИВозврат
|
|СГРУППИРОВАТЬ ПО
|	РеализацияИВозврат.Номенклатура,
|	РеализацияИВозврат.РНПТ,
|	РеализацияИВозврат.Комитент,
|	РеализацияИВозврат.Организация,
|	РеализацияИВозврат.СтранаПроисхождения,
|	РеализацияИВозврат.Комплектующие,
|	РеализацияИВозврат.ПрослеживаемыйКомплект
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ЕСТЬNULL(РеализацияМинусВозвратИтого.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
|	ЕСТЬNULL(РеализацияМинусВозвратИтого.Количество, 0) КАК Количество,
|	ЕСТЬNULL(РеализацияМинусВозвратИтого.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
|	НомераГТД.Ссылка КАК РНПТ,
|	ЕСТЬNULL(РеализацияМинусВозвратИтого.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Комитент,
|	ЕСТЬNULL(РеализацияМинусВозвратИтого.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
|	РеализацияМинусВозвратИтого.Организация КАК Организация,
|	ИСТИНА КАК ПрослеживаемыйТовар
|ИЗ
|	Справочник.НомераГТД КАК НомераГТД
|		ЛЕВОЕ СОЕДИНЕНИЕ РеализацияМинусВозвратИтого КАК РеализацияМинусВозвратИтого
|		ПО (РеализацияМинусВозвратИтого.РНПТ = НомераГТД.Ссылка)
|ГДЕ
|	ВЫБОР
|			КОГДА &amp;ПоказыватьТолькоОстатки
|				ТОГДА РеализацияМинусВозвратИтого.Количество &gt; 0
|			ИНАЧЕ ИСТИНА
|		КОНЕЦ
|
|УПОРЯДОЧИТЬ ПО
|	Комитент,
|	Номенклатура";</Текст>
			</Алгоритм>
			<Алгоритм Имя="ТекстЗапросаВозвратТоваровПоставщику" ИспользуетсяПриЗагрузке="true">
				<Текст>Если СтруктураПараметров.ПоставщикРезидентТаможенногоСоюза Тогда
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка КАК Уведомление,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки КАК НомерКорректировки,
	|	МАКСИМУМ(УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки) КАК НомерКорректировкиМаксимальный
	|ПОМЕСТИТЬ ТаблицаТекущихУведомлений
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент = &amp;ДокументРеализации
	|
	|СГРУППИРОВАТЬ ПО
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.РНПТ КАК РНПТ,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация КАК Организация,
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОВвозеПрослеживаемыхТоваровТовары.СтранаПроисхождения
	|		ИНАЧЕ УведомлениеОВвозеПрослеживаемыхТоваровТовары.СтранаПроисхожденияПослеИзменения
	|	КОНЕЦ КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ДанныеПоУведомлению
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОВвозеПрослеживаемыхТоваров.Товары КАК УведомлениеОВвозеПрослеживаемыхТоваровТовары
	|		ПО (УведомлениеОВвозеПрослеживаемыхТоваровТовары.Ссылка = УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка)
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка В
	|			(ВЫБРАТЬ
	|				ТаблицаТекущихУведомлений.Уведомление КАК Уведомление
	|			ИЗ
	|				ТаблицаТекущихУведомлений КАК ТаблицаТекущихУведомлений
	|			ГДЕ
	|				ТаблицаТекущихУведомлений.НомерКорректировки = ТаблицаТекущихУведомлений.НомерКорректировкиМаксимальный)
	|
	|СГРУППИРОВАТЬ ПО
	|	УведомлениеОВвозеПрослеживаемыхТоваров.РНПТ,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация,
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОВвозеПрослеживаемыхТоваровТовары.СтранаПроисхождения
	|		ИНАЧЕ УведомлениеОВвозеПрослеживаемыхТоваровТовары.СтранаПроисхожденияПослеИзменения
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеТоварыОстатки.Организация КАК Организация,
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.КоличествоОстаток КАК Количество,
	|	ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
	|	ИСТИНА КАК ПрослеживаемыйТовар,
	|	ПрослеживаемыеТоварыОстатки.Комплектующие КАК Номенклатура
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|			&amp;ДатаТекущегоДокумента,
	|			(РНПТ, Номенклатура, СтранаПроисхождения) В
	|				(ВЫБРАТЬ
	|					ДанныеПоУведомлению.РНПТ КАК РНПТ,
	|					ДанныеПоУведомлению.Номенклатура КАК Номенклатура,
	|					ДанныеПоУведомлению.СтранаПроисхождения КАК СтранаПроисхождения
	|				ИЗ
	|					ДанныеПоУведомлению КАК ДанныеПоУведомлению)) КАК ПрослеживаемыеТоварыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО ПрослеживаемыеТоварыОстатки.РНПТ = НомераГТД.Ссылка
	|ГДЕ
	|	ПрослеживаемыеТоварыОстатки.Организация = &amp;Организация
	|	И ПрослеживаемыеТоварыОстатки.СтранаПроисхождения = &amp;СтранаПроисхождения
	|	И ПрослеживаемыеТоварыОстатки.Номенклатура = &amp;Номенклатура
	|	И ПрослеживаемыеТоварыОстатки.Комиссионер = &amp;Комиссионер
	|	И ПрослеживаемыеТоварыОстатки.ВидЗапасов = &amp;ВидЗапасов
	|	И ПрослеживаемыеТоварыОстатки.Комитент = &amp;Комитент
	|	И НЕ &amp;ЭтоПоступление
	|	И ВЫБОР
	|			КОГДА &amp;ПоказыватьТолькоОстатки
	|				ТОГДА ПрослеживаемыеТоварыОстатки.КоличествоОстаток &gt; 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
Иначе
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СправочникНомераГТД.Ссылка КАК РНПТ,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Комитент,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ИСТИНА КАК ПрослеживаемыйТовар
	|ИЗ
	|	Справочник.НомераГТД КАК СправочникНомераГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПоступленияМинусВозврат.РНПТ КАК РНПТ,
	|			ПоступленияМинусВозврат.Организация КАК Организация,
	|			ПоступленияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|			ПоступленияМинусВозврат.Номенклатура КАК Номенклатура,
	|			ПоступленияМинусВозврат.Комитент КАК Комитент,
	|			СУММА(ПоступленияМинусВозврат.Количество) КАК Количество,
	|			СУММА(ПоступленияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|			ПоступленияМинусВозврат.Комплектующие КАК Комплектующие
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ЗакупленныеТовары.Организация КАК Организация,
	|				ЗакупленныеТовары.Номенклатура КАК Номенклатура,
	|				ЗакупленныеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|				ЗакупленныеТовары.Количество КАК Количество,
	|				ЗакупленныеТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|				ЗакупленныеТовары.РНПТ КАК РНПТ,
	|				ЗакупленныеТовары.Комитент КАК Комитент,
	|				ЗакупленныеТовары.Комплектующие КАК Комплектующие
	|			ИЗ
	|				РегистрНакопления.ПрослеживаемыеТовары КАК ЗакупленныеТовары
	|			ГДЕ
	|				ЗакупленныеТовары.Организация = &amp;Организация
	|				И ЗакупленныеТовары.Номенклатура = &amp;Номенклатура
	|				И ЗакупленныеТовары.СтранаПроисхождения = &amp;СтранаПроисхождения
	|				И ЗакупленныеТовары.Комиссионер = &amp;Комиссионер
	|				И ЗакупленныеТовары.Комитент = &amp;Комитент
	|				И ЗакупленныеТовары.ВидЗапасов = &amp;ВидЗапасов
	|				И ЗакупленныеТовары.Регистратор = &amp;ДокументРеализации
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ВозвращенныеТовары.Организация,
	|				ВозвращенныеТовары.Номенклатура,
	|				ВозвращенныеТовары.СтранаПроисхождения,
	|				ВЫБОР
	|					КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА ВозвращенныеТовары.Количество
	|					ИНАЧЕ -ВозвращенныеТовары.Количество
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА ВозвращенныеТовары.КоличествоПрослеживаемости
	|					ИНАЧЕ -ВозвращенныеТовары.КоличествоПрослеживаемости
	|				КОНЕЦ,
	|				ВозвращенныеТовары.РНПТ,
	|				ВозвращенныеТовары.Комитент,
	|				ВозвращенныеТовары.Комплектующие
	|			ИЗ
	|				РегистрНакопления.ПрослеживаемыеТовары КАК ВозвращенныеТовары
	|			ГДЕ
	|				ВозвращенныеТовары.Организация = &amp;Организация
	|				И ВозвращенныеТовары.Номенклатура = &amp;Номенклатура
	|				И ВозвращенныеТовары.СтранаПроисхождения = &amp;СтранаПроисхождения
	|				И ВозвращенныеТовары.Комиссионер = &amp;Комиссионер
	|				И ВозвращенныеТовары.Комитент = &amp;Комитент
	|				И ВозвращенныеТовары.ВидЗапасов = &amp;ВидЗапасов
	|				И ВозвращенныеТовары.Период &lt;= &amp;ДатаТекущегоДокумента
	|				И ВозвращенныеТовары.Регистратор &lt;&gt; &amp;ТекущийДокумент
	|				И ВозвращенныеТовары.ОснованиеДляВозврата = &amp;ДокументРеализации) КАК ПоступленияМинусВозврат
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПоступленияМинусВозврат.РНПТ,
	|			ПоступленияМинусВозврат.СтранаПроисхождения,
	|			ПоступленияМинусВозврат.Номенклатура,
	|			ПоступленияМинусВозврат.Организация,
	|			ПоступленияМинусВозврат.Комитент,
	|			ПоступленияМинусВозврат.Комплектующие) КАК ПрослеживаемыеТоварыОстатки
	|		ПО СправочникНомераГТД.Ссылка = ПрослеживаемыеТоварыОстатки.РНПТ
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &amp;ПоказыватьТолькоОстатки
	|				ТОГДА ПрослеживаемыеТоварыОстатки.Количество &gt; 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Комитент,
	|	Номенклатура";
	
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ТекстЗапросаВозвратТоваровРозница" ИспользуетсяПриЗагрузке="true">
				<Текст>ТекстЗапроса =
"ВЫБРАТЬ
|	СправочникНомераГТД.Ссылка КАК РНПТ,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
|	ВЫБОР
|		КОГДА &amp;ПрослеживаемыйКомплект
|			ТОГДА ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
|		ИНАЧЕ ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
|	КОНЕЦ КАК Номенклатура,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Комитент,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Количество, 0) КАК Количество,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
|	ПрослеживаемыеТоварыОстатки.Комплектующие КАК Комплектующие,
|	ИСТИНА КАК ПрослеживаемыйТовар
|ИЗ
|	Справочник.НомераГТД КАК СправочникНомераГТД
|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|			РеализацияМинусВозврат.РНПТ КАК РНПТ,
|			РеализацияМинусВозврат.Организация КАК Организация,
|			РеализацияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
|			РеализацияМинусВозврат.Номенклатура КАК Номенклатура,
|			РеализацияМинусВозврат.Комитент КАК Комитент,
|			СУММА(РеализацияМинусВозврат.Количество) КАК Количество,
|			СУММА(РеализацияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
|			РеализацияМинусВозврат.Комплектующие КАК Комплектующие
|		ИЗ
|			(ВЫБРАТЬ
|				РеализованныеТовары.Организация КАК Организация,
|				РеализованныеТовары.Номенклатура КАК Номенклатура,
|				РеализованныеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
|				РеализованныеТовары.Количество КАК Количество,
|				РеализованныеТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
|				РеализованныеТовары.РНПТ КАК РНПТ,
|				РеализованныеТовары.Комитент КАК Комитент,
|				РеализованныеТовары.Комплектующие КАК Комплектующие
|			ИЗ
|				РегистрНакопления.ПрослеживаемыеТовары КАК РеализованныеТовары
|			ГДЕ
|				РеализованныеТовары.Организация = &amp;Организация
|				И РеализованныеТовары.Номенклатура = &amp;Номенклатура
|				И ВЫБОР
|						КОГДА &amp;ПрослеживаемыйКомплект
|							ТОГДА ИСТИНА
|						ИНАЧЕ РеализованныеТовары.СтранаПроисхождения = &amp;СтранаПроисхождения
|					КОНЕЦ
|				И РеализованныеТовары.Комиссионер = &amp;Комиссионер
|				И РеализованныеТовары.ВидЗапасов = &amp;ВидЗапасов
|				И &amp;ДатаРеализации = НАЧАЛОПЕРИОДА(РеализованныеТовары.Период, ДЕНЬ)
|				И РеализованныеТовары.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
|				И РеализованныеТовары.Регистратор &lt;&gt; &amp;ТекущийДокумент
|				И РеализованныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
|			
|			ОБЪЕДИНИТЬ ВСЕ
|			
|			ВЫБРАТЬ
|				ВозвращенныеТовары.Организация,
|				ВозвращенныеТовары.Номенклатура,
|				ВозвращенныеТовары.СтранаПроисхождения,
|				-ВозвращенныеТовары.Количество,
|				-ВозвращенныеТовары.КоличествоПрослеживаемости,
|				ВозвращенныеТовары.РНПТ,
|				ВозвращенныеТовары.Комитент,
|				ВозвращенныеТовары.Комплектующие
|			ИЗ
|				РегистрНакопления.ПрослеживаемыеТовары КАК ВозвращенныеТовары
|			ГДЕ
|				ВозвращенныеТовары.Организация = &amp;Организация
|				И ВозвращенныеТовары.Номенклатура = &amp;Номенклатура
|				И ВЫБОР
|						КОГДА &amp;ПрослеживаемыйКомплект
|							ТОГДА ИСТИНА
|						ИНАЧЕ ВозвращенныеТовары.СтранаПроисхождения = &amp;СтранаПроисхождения
|					КОНЕЦ
|				И ВозвращенныеТовары.Комиссионер = &amp;Комиссионер
|				И ВозвращенныеТовары.ВидЗапасов = &amp;ВидЗапасов
|				И ВозвращенныеТовары.Период &lt;= &amp;ДатаТекущегоДокумента
|				И ВозвращенныеТовары.Регистратор &lt;&gt; &amp;ТекущийДокумент
|				И ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
|				И ВозвращенныеТовары.ДатаРеализации = &amp;ДатаРеализации) КАК РеализацияМинусВозврат
|		
|		СГРУППИРОВАТЬ ПО
|			РеализацияМинусВозврат.РНПТ,
|			РеализацияМинусВозврат.СтранаПроисхождения,
|			РеализацияМинусВозврат.Номенклатура,
|			РеализацияМинусВозврат.Организация,
|			РеализацияМинусВозврат.Комитент,
|			РеализацияМинусВозврат.Комплектующие) КАК ПрослеживаемыеТоварыОстатки
|		ПО СправочникНомераГТД.Ссылка = ПрослеживаемыеТоварыОстатки.РНПТ
|ГДЕ
|	ВЫБОР
|			КОГДА &amp;ПоказыватьТолькоОстатки
|				ТОГДА ПрослеживаемыеТоварыОстатки.Количество &gt; 0
|			ИНАЧЕ ИСТИНА
|		КОНЕЦ
|
|УПОРЯДОЧИТЬ ПО
|	Комитент,
|	Номенклатура";

Если ТипЗнч(СтруктураПараметров.ТекущийДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
	"И ВозвращенныеТовары.Регистратор &lt;&gt; &amp;ТекущийДокумент", 
	"И ВозвращенныеТовары.Регистратор &lt;&gt; &amp;ТекущийДокумент И ВозвращенныеТовары.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя");
ИначеЕсли ТипЗнч(СтруктураПараметров.ТекущийДокумент) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда 
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
	"И ВозвращенныеТовары.Регистратор &lt;&gt; &amp;ТекущийДокумент", 
	"И ВозвращенныеТовары.Регистратор &lt;&gt; &amp;ТекущийДокумент И ВозвращенныеТовары.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах");
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ТекстЗапросаПодборРНПТПоГрупповымОС" ИспользуетсяПриЗагрузке="true">
				<Текст>ТекстЗапроса = "ВЫБРАТЬ
|	ПрослеживаемыеОСОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
|	ПрослеживаемыеОСОстатки.Организация КАК Организация,
|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ,
|	ПрослеживаемыеОСОстатки.КоличествоОстаток КАК Количество,
|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
|ИЗ
|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
|			&amp;Период,
|			Организация = &amp;Организация
|				И ОсновноеСредство = &amp;ОсновноеСредство) КАК ПрослеживаемыеОСОстатки
|ГДЕ
|	ПрослеживаемыеОСОстатки.КоличествоОстаток &gt; 0
|
|СГРУППИРОВАТЬ ПО
|	ПрослеживаемыеОСОстатки.Организация,
|	ПрослеживаемыеОСОстатки.СтранаПроисхождения,
|	ПрослеживаемыеОСОстатки.РНПТ,
|	ПрослеживаемыеОСОстатки.КоличествоОстаток,
|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток";</Текст>
			</Алгоритм>
			<Алгоритм Имя="ТекстЗапросаПоУмолчанию" ИспользуетсяПриЗагрузке="true">
				<Текст>ТекстЗапроса = "ВЫБРАТЬ
|	СправочникНомераГТД.Ссылка КАК РНПТ,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
|	ВЫБОР
|		КОГДА &amp;ПрослеживаемыйКомплект
|			ТОГДА ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
|		ИНАЧЕ ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
|	КОНЕЦ КАК Номенклатура,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток, 0) КАК КоличествоПрослеживаемости,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Комитент,
|	ИСТИНА КАК ПрослеживаемыйТовар
|ПОМЕСТИТЬ ВТ_Остатки
|ИЗ
|	Справочник.НомераГТД КАК СправочникНомераГТД
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары.Остатки(
|				&amp;Период,
|				Организация = &amp;Организация
|					И ВЫБОР
|						КОГДА &amp;ПрослеживаемыйКомплект
|							ТОГДА ИСТИНА
|						ИНАЧЕ СтранаПроисхождения = &amp;СтранаПроисхождения
|					КОНЕЦ
|					И Номенклатура = &amp;Номенклатура
|					И Комитент = &amp;Комитент
|					И Комиссионер = &amp;Комиссионер
|					И ВидЗапасов = &amp;ВидЗапасов
|					И ВЫБОР
|						КОГДА &amp;ЭтоРазукомплектация
|							ТОГДА Комплектующие = &amp;Комплектующие
|						ИНАЧЕ ИСТИНА
|					КОНЕЦ) КАК ПрослеживаемыеТоварыОстатки
|		ПО (ПрослеживаемыеТоварыОстатки.РНПТ = СправочникНомераГТД.Ссылка)
|ГДЕ
|	НЕ &amp;ЭтоПоступление
|	И ВЫБОР
|			КОГДА &amp;ПоказыватьТолькоОстатки
|				ТОГДА ПрослеживаемыеТоварыОстатки.КоличествоОстаток &gt; 0
|			ИНАЧЕ ИСТИНА
|		КОНЕЦ
|
|СГРУППИРОВАТЬ ПО
|	СправочникНомераГТД.Ссылка,
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)),
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)),
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоОстаток, 0),
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток, 0),
|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
|	ВЫБОР
|		КОГДА &amp;ПрослеживаемыйКомплект
|			ТОГДА ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
|		ИНАЧЕ ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
|	КОНЕЦ
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВТ_Остатки.РНПТ КАК РНПТ,
|	ВТ_Остатки.Организация КАК Организация,
|	ВТ_Остатки.СтранаПроисхождения КАК СтранаПроисхождения,
|	ВТ_Остатки.Номенклатура КАК Номенклатура,
|	ВТ_Остатки.КоличествоОстаток КАК КоличествоОстаток,
|	ВТ_Остатки.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
|	ВТ_Остатки.Комитент КАК Комитент,
|	ВТ_Остатки.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
|	ПрослеживаемыеТовары.Период КАК Период
|ИЗ
|	ВТ_Остатки КАК ВТ_Остатки
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
|		ПО ВТ_Остатки.РНПТ = ПрослеживаемыеТовары.РНПТ
|			И ВТ_Остатки.Организация = ПрослеживаемыеТовары.Организация
|			И ВТ_Остатки.СтранаПроисхождения = ПрослеживаемыеТовары.СтранаПроисхождения
|			И ВТ_Остатки.Номенклатура = ПрослеживаемыеТовары.Номенклатура
|			И ВТ_Остатки.Комитент = ПрослеживаемыеТовары.Комитент
|ГДЕ
|	ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
|
|УПОРЯДОЧИТЬ ПО
|	Период";</Текст>
			</Алгоритм>
			<Алгоритм Имя="ТекстЗапросаПринятиеКУчетуОСОборудование" ИспользуетсяПриЗагрузке="true">
				<Текст>ТекстЗапроса = "ВЫБРАТЬ
|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
|	ПрослеживаемыеТоварыОстатки.Организация КАК Организация,
|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
|	СУММА(ПрослеживаемыеТоварыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
|	СУММА(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемости,
|	ПрослеживаемыеТоварыОстатки.Номенклатура КАК Номенклатура,
|	ПрослеживаемыеТовары.Период КАК Период
|ИЗ
|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
|			&amp;Период,
|			Организация = &amp;Организация
|				И Номенклатура = &amp;Номенклатура
|				И Комиссионер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
|				И Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
|				И ВидЗапасов = ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)) КАК ПрослеживаемыеТоварыОстатки
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
|		ПО ПрослеживаемыеТоварыОстатки.Номенклатура = ПрослеживаемыеТовары.Номенклатура
|			И ПрослеживаемыеТоварыОстатки.Комитент = ПрослеживаемыеТовары.Комитент
|			И ПрослеживаемыеТоварыОстатки.СтранаПроисхождения = ПрослеживаемыеТовары.СтранаПроисхождения
|			И ПрослеживаемыеТоварыОстатки.РНПТ = ПрослеживаемыеТовары.РНПТ
|			И ПрослеживаемыеТоварыОстатки.Комиссионер = ПрослеживаемыеТовары.Комиссионер
|			И ПрослеживаемыеТоварыОстатки.ВидЗапасов = ПрослеживаемыеТовары.ВидЗапасов
|			И ПрослеживаемыеТоварыОстатки.Организация = ПрослеживаемыеТовары.Организация
|ГДЕ
|	ПрослеживаемыеТоварыОстатки.КоличествоОстаток &gt; 0
|	И ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
|
|СГРУППИРОВАТЬ ПО
|	ПрослеживаемыеТоварыОстатки.Организация,
|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения,
|	ПрослеживаемыеТоварыОстатки.РНПТ,
|	ПрослеживаемыеТоварыОстатки.Номенклатура,
|	ПрослеживаемыеТовары.Период
|
|УПОРЯДОЧИТЬ ПО
|	Период";</Текст>
			</Алгоритм>
			<Алгоритм Имя="ТекстЗапросаПринятиеКУчетуОСОбъектСтроительства" ИспользуетсяПриЗагрузке="true">
				<Текст>ТекстЗапроса = "ВЫБРАТЬ
|	ПрослеживаемыеОСОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
|	ПрослеживаемыеОСОстатки.Организация КАК Организация,
|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ,
|	ПрослеживаемыеОСОстатки.Комплектующие КАК Номенклатура,
|	ПрослеживаемыеОСОстатки.КоличествоОстаток КАК КоличествоОстаток,
|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости
|ИЗ
|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
|			&amp;Период,
|			Организация = &amp;Организация
|				И ОсновноеСредство = &amp;ОбъектСтроительства) КАК ПрослеживаемыеОСОстатки
|ГДЕ
|	ПрослеживаемыеОСОстатки.КоличествоОстаток &gt; 0
|
|СГРУППИРОВАТЬ ПО
|	ПрослеживаемыеОСОстатки.Организация,
|	ПрослеживаемыеОСОстатки.СтранаПроисхождения,
|	ПрослеживаемыеОСОстатки.РНПТ,
|	ПрослеживаемыеОСОстатки.Комплектующие,
|	ПрослеживаемыеОСОстатки.КоличествоОстаток,
|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток
|
|УПОРЯДОЧИТЬ ПО
|	Номенклатура";</Текст>
			</Алгоритм>
			<Алгоритм Имя="ТекстЗапросаПрослеживаемыеОстаткиОС" ИспользуетсяПриЗагрузке="true">
				<Текст>ТекстЗапроса = "ВЫБРАТЬ
|	ПрослеживаемыеОСОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
|	ПрослеживаемыеОСОстатки.Организация КАК Организация,
|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ,
|	ПрослеживаемыеОСОстатки.КоличествоОстаток КАК КоличествоОстаток,
|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
|	ПрослеживаемыеОсновныеСредства.Период КАК Период,
|	ПрослеживаемыеОсновныеСредства.Комплектующие КАК Комплектующие
|ИЗ
|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
|			&amp;Период,
|			Организация = &amp;Организация
|				И ОсновноеСредство = &amp;ОсновноеСредство) КАК ПрослеживаемыеОСОстатки
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеОсновныеСредства КАК ПрослеживаемыеОсновныеСредства
|		ПО ПрослеживаемыеОСОстатки.Организация = ПрослеживаемыеОсновныеСредства.Организация
|			И ПрослеживаемыеОСОстатки.РНПТ = ПрослеживаемыеОсновныеСредства.РНПТ
|			И ПрослеживаемыеОСОстатки.СтранаПроисхождения = ПрослеживаемыеОсновныеСредства.СтранаПроисхождения
|			И ПрослеживаемыеОСОстатки.ОсновноеСредство = ПрослеживаемыеОсновныеСредства.ОсновноеСредство
|			И ПрослеживаемыеОСОстатки.Комплектующие = ПрослеживаемыеОсновныеСредства.Комплектующие
|ГДЕ
|	ПрослеживаемыеОСОстатки.КоличествоОстаток &gt; 0
|	И ПрослеживаемыеОсновныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
|
|СГРУППИРОВАТЬ ПО
|	ПрослеживаемыеОСОстатки.Организация,
|	ПрослеживаемыеОСОстатки.СтранаПроисхождения,
|	ПрослеживаемыеОСОстатки.РНПТ,
|	ПрослеживаемыеОСОстатки.КоличествоОстаток,
|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток,
|	ПрослеживаемыеОсновныеСредства.Период,
|	ПрослеживаемыеОсновныеСредства.Комплектующие
|
|УПОРЯДОЧИТЬ ПО
|	Период";</Текст>
			</Алгоритм>
		</Группа>
		<Группа Имя="ПоступлениеАктивов">
			<Алгоритм Имя="ЗаписатьВПротоколЗагрузкаТолькоИнформация" ИспользуетсяПриЗагрузке="true">
				<Текст>//// Сообщаем пользователю
//Сообщение = Новый СообщениеПользователю;
//Сообщение.Текст = ТекстСообщения;
//Сообщение.Сообщить();  

// Заносим в протокол загрузки
Уровень = 1;
//ЗаписатьВПротоколВыполнения(ТекстСообщения, , Ложь, Уровень, , Истина);

//// Падаем в ошибку
//ВызватьИсключение ТекстСообщения;</Текст>
				<Параметры>ТекстСообщения</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнениеПолейСтроки" ИспользуетсяПриЗагрузке="true">
				<Текст>Если Это = "Товары" Тогда	
	ДанныеСтрокиТаблицы = Новый Структура(
	"Номенклатура, ЕдиницаИзмерения, Коэффициент, Количество,
	|Цена, Сумма, СтавкаНДС, СуммаНДС,
	|НадписьПоДокументу, КоличествоПоДокументу, СуммаПоДокументу, СуммаНДСПоДокументу, ЦенаПоДокументу, ВсегоПоДокументу,
	|НадписьОтклонение, КоличествоОтклонение, СуммаОтклонение,  СуммаНДСОтклонение, ЦенаОтклонение, ВсегоОтклонение, 
	|НадписьПоФакту, НомерГТД, ПрослеживаемыйТовар, ПрослеживаемыйКомплект, СтранаПроисхождения,
	|ЦенаВРознице, СуммаВРознице, СтавкаНДСВРознице,
	|ОтражениеВУСН, МаркируемаяПродукцияГосИС,
	|ПродукцияМаркируемаяДляГИСМ, ПрослеживаемыйТовар,
	|СчетУчета, СчетУчетаНДС, ПодразделениеЗатрат, Субконто2, Субконто1, Субконто3, СчетЗатрат, СпособУчетаНДС"); // Для ПараметрыЗаполненияСчетовУчета
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ОбъектКоллекции);
	
ИначеЕсли Это = "Оборудование" Тогда
	
	ДанныеСтрокиТаблицы = Новый Структура(
	"Номенклатура, ЕдиницаИзмерения, Коэффициент, Количество,
	|Цена, Сумма, СтавкаНДС, СуммаНДС,
	|НомерГТД, СтранаПроисхождения, Всего, ИдентификаторСтроки, РНПТ, ПодсказкаРНПТ, ПрослеживаемыйТовар, ПрослеживаемыйКомплект,
	|СчетУчета, СчетУчетаНДС, СпособУчетаНДС");   // Для ПараметрыЗаполненияСчетовУчета 	
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ОбъектКоллекции);
	
ИначеЕсли Это = "Услуги" Тогда
	
	ДанныеСтрокиТаблицы = Новый Структура(
	"Номенклатура, ЕдиницаИзмерения, Коэффициент, Количество,
	|Цена, Сумма, СтавкаНДС, СуммаНДС,
	|НомерГТД, СтранаПроисхождения, Всего, ИдентификаторСтроки, РНПТ, ПодсказкаРНПТ, ПрослеживаемыйТовар,
	|АР_ОбъектАренды, 
	|СпособУчетаНДС, СчетЗатрат, Субконто1, Субконто2, Субконто3, ПодразделениеЗатрат, СчетУчетаНДС, СчетЗатратНУ, СубконтоНУ1, СубконтоНУ2, СубконтоНУ3");   // Для ПараметрыЗаполненияСчетовУчета 	
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ОбъектКоллекции);
	
КонецЕсли;

ПараметрыЗаполненияСчетовУчета = СчетаУчетаВДокументахКлиентСервер.НовыйПараметрыЗаполнения(
"ПоступлениеТоваровУслуг",
Это + ".Номенклатура",
Объект,
ОбъектКоллекции,
ДанныеОбъекта,
ДанныеСтрокиТаблицы);

Если Это = "Товары" Тогда	
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.ПодразделениеЗатрат", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.Субконто2", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.Субконто1", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.Субконто3", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.СчетЗатрат", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.СпособУчетаНДС", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.СчетУчетаНДС", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Товары.СчетУчета", Истина);
ИначеЕсли Это = "Оборудование" Тогда
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Оборудование.СпособУчетаНДС", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Оборудование.СчетУчетаНДС", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Оборудование.СчетУчета", Истина);
ИначеЕсли Это = "Услуги" Тогда
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.СпособУчетаНДС", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.СчетЗатрат", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.Субконто1", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.Субконто2", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.Субконто3", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.ПодразделениеЗатрат", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.СчетУчетаНДС", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.СчетЗатратНУ", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.СубконтоНУ1", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.СубконтоНУ2", Истина);
	ПараметрыЗаполненияСчетовУчета.КЗаполнению.Вставить("Услуги.СубконтоНУ3", Истина);
КонецЕсли;

ПараметрыОбработки = Новый Структура();
ПараметрыОбработки.Вставить("ДанныеСтрокиТаблицы", 	 ДанныеСтрокиТаблицы);
ПараметрыОбработки.Вставить("ДанныеОбъекта", 		 ДанныеОбъекта);
ПараметрыОбработки.Вставить("СчетаУчетаКЗаполнению", ПараметрыЗаполненияСчетовУчета.КЗаполнению);

ЗаполненныеСчета = СчетаУчетаВДокументах.ЗаполнитьРеквизитыПриИзменении(
Документы.ПоступлениеТоваровУслуг,
ПараметрыОбработки.СчетаУчетаКЗаполнению,
ПараметрыОбработки.ДанныеОбъекта,
Это,
ПараметрыОбработки.ДанныеСтрокиТаблицы);

ЗаполнитьЗначенияСвойств(ПараметрыОбработки.ДанныеСтрокиТаблицы, ЗаполненныеСчета);

Если Не ЗначениеЗаполнено(ПараметрыОбработки.ДанныеОбъекта.ТипЦен) Тогда
	ПараметрыОбработки.ДанныеОбъекта.Вставить("СпособЗаполненияЦены", Перечисления.СпособыЗаполненияЦен.ПоЗакупочнымЦенам);
КонецЕсли;

ПараметрыОбработки.ДанныеОбъекта.Вставить("СпособЗаполненияРозничнойЦены", Перечисления.СпособыЗаполненияЦен.ПоЗакупочнымЦенам);

СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
ОбъектКоллекции.Номенклатура, ПараметрыОбработки.ДанныеОбъекта, Ложь);

Если Это = "Оборудование" Или Это = "Товары" Тогда
	Если СведенияОНоменклатуре &lt;&gt; Неопределено Тогда
		ПараметрыОбработки.ДанныеСтрокиТаблицы.СтранаПроисхождения = СведенияОНоменклатуре.СтранаПроисхождения;
		ПараметрыОбработки.ДанныеСтрокиТаблицы.НомерГТД = СведенияОНоменклатуре.НомерГТД;
		ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйТовар = СведенияОНоменклатуре.ПрослеживаемыйТовар Или СведенияОНоменклатуре.ПрослеживаемыйКомплект;
		ПараметрыОбработки.ДанныеСтрокиТаблицы.ПрослеживаемыйКомплект = СведенияОНоменклатуре.ПрослеживаемыйКомплект;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ОбъектКоллекции, ПараметрыОбработки.ДанныеСтрокиТаблицы, "СчетУчета, СчетУчетаНДС, СтранаПроисхождения, НомерГТД, ПрослеживаемыйТовар, ПрослеживаемыйКомплект");
	
	Если ОбъектКоллекции.ПрослеживаемыйТовар И ОбщегоНазначения.СсылкаСуществует(ЭУПДСсылка) 
		И ЗначениеЗаполнено(ОбъектКоллекции.Номенклатура) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ЭУПДОС.НомерРНПТ КАК НомерРНПТ,
		|	ЭУПДОС.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_НомераРНПТ
		|ИЗ
		|	Документ.ЭлектронныйДокументУПД.ОсновныеСредства КАК ЭУПДОС
		|ГДЕ
		|	ЭУПДОС.Ссылка = &amp;ЭУПД
		|	И ЭУПДОС.Номенклатура = &amp;Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НомераРНПТ.НомерРНПТ КАК НомерРНПТ,
		|	НомераГТД.Ссылка КАК РНПТ,
		|	ВТ_НомераРНПТ.Количество КАК Количество
		|ИЗ
		|	ВТ_НомераРНПТ КАК ВТ_НомераРНПТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
		|		ПО ВТ_НомераРНПТ.НомерРНПТ = НомераГТД.Код";
		Запрос.УстановитьПараметр("ЭУПД", ЭУПДСсылка);
		Запрос.УстановитьПараметр("Номенклатура", ОбъектКоллекции.Номенклатура);
		Выборка = Запрос.Выполнить().Выбрать();
		РНПТ = Неопределено;
		
		ОбъектКоллекции.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор());
		НетРНПТ = Истина;
		
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.РНПТ) Тогда
				РНПТ = Выборка.РНПТ;
			ИначеЕсли ЗначениеЗаполнено(Выборка.НомерРНПТ) Тогда
				Попытка
					РНПТ = Справочники.НомераГТД.СоздатьЭлемент();
					РНПТ.Код = Выборка.НомерРНПТ;
					РНПТ.Комментарий = "Обмен ITIL";
					СтруктураРеквизитов = Справочники.НомераГТД.РегистрационныйНомерИСтранаВвоза(РНПТ.Код);
					ЗаполнитьЗначенияСвойств(РНПТ, СтруктураРеквизитов);
					РНПТ.Записать();
					РНПТ = РНПТ.Ссылка;
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(РНПТ) Тогда	
				СтрокаПрослеживаемости = Объект.СведенияПрослеживаемости.Добавить();
				СтрокаПрослеживаемости.РНПТ = РНПТ;
				СтрокаПрослеживаемости.Количество = Выборка.Количество;
				СтрокаПрослеживаемости.КоличествоПрослеживаемости = СтрокаПрослеживаемости.Количество;
				СтрокаПрослеживаемости.ИдентификаторСтроки = ОбъектКоллекции.ИдентификаторСтроки;
				НетРНПТ = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		Если НетРНПТ Тогда
			ОбъектКоллекции.ИдентификаторСтроки = "";
		КонецЕсли;
		
	КонецЕсли;
ИначеЕсли Это = "Услуги" Тогда
	ЗаполнитьЗначенияСвойств(ОбъектКоллекции, ПараметрыОбработки.ДанныеСтрокиТаблицы, "СчетЗатрат, Субконто1, СчетЗатратНУ, СубконтоНУ1, СчетУчетаНДС");	
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПодготовкаРеквизитов" ИспользуетсяПриЗагрузке="true">
				<Текст>	
	ПлательщикНалогаНаПрибыль   = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
	ПлательщикНДС               = УчетнаяПолитика.ПлательщикНДС(Объект.Организация, Объект.Дата);
	УпрощенныйУчетНДС           = УчетнаяПолитика.УпрощенныйУчетНДС(Объект.Организация, Объект.Дата);
	ПрименениеУСН               = УчетнаяПолитика.ПрименяетсяУСН(Объект.Организация, Объект.Дата);
	ПрименениеУСНДоходы         = УчетнаяПолитика.ПрименяетсяУСНДоходы(Объект.Организация, Объект.Дата);
	ПрименяетсяМалоценка        = УчетнаяПолитика.ПрименяетсяФСБУ5_2019(Объект.Дата);
	СпособОценкиТоваровВРознице = УчетнаяПолитика.СпособОценкиТоваровВРознице(Объект.Организация, Объект.Дата);
	УчитыватьТаруЗаБалансом     = УчетнаяПолитика.УчитыватьТаруЗаБалансом(Объект.Организация, Объект.Дата);
	
	УчетВПродажныхЦенах = СпособОценкиТоваровВРознице = Перечисления.СпособыОценкиТоваровВРознице.ПоПродажнойСтоимости;
	
	ИспользоватьТипыЦенНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьТипыЦенНоменклатуры");	 
	РаздельныйУчетНДСНаСчете19       = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Объект.Организация, Объект.Дата);
	РаздельныйУчетНДС                = УчетнаяПолитика.РаздельныйУчетНДС(Объект.Организация, Объект.Дата);
	ЕстьВалютныйУчет                 = БухгалтерскийУчетПереопределяемый.ИспользоватьВалютныйУчет();
	ВестиУчетПоДоговорам             = ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам");
	//ОбратноеНачислениеНДС            = БухгалтерскийУчетПереопределяемый.ИспользуетсяОбратноеНачислениеНДС();
	Если БухгалтерскийУчетПереопределяемый.ИспользуетсяОбратноеНачислениеНДС() Тогда
		ОбратноеНачислениеНДСБул = Истина;
	Иначе
		ОбратноеНачислениеНДСБул = Ложь;
	КонецЕсли;
	
	ИспользоватьКорректировочныеДокументы               = ПолучитьФункциональнуюОпцию("ИспользоватьКорректировочныеДокументы");
	ОсуществляетсяЗакупкаТоваровУслугЧерезКомиссионеров = ПолучитьФункциональнуюОпцию("ОсуществляетсяЗакупкаТоваровУслугЧерезКомиссионеров");
	ОсуществляетсяЗакупкаТоваровУслугДляКомитентов      = ПолучитьФункциональнуюОпцию("ОсуществляетсяЗакупкаТоваровУслугДляКомитентов");
	ОсуществляетсяРеализацияТоваровУслугКомитентов      = ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугКомитентов");
	ИспользоватьДоставкуТранспортнойКомпанией           = ПолучитьФункциональнуюОпцию("ИспользоватьДоставкуТранспортнойКомпанией");
	ИспользуетсяПланированиеПлатежей                    = ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПлатежейПоставщикам");
	ИспользоватьКонтрольныеЗнакиГИСМ                    = ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольныеЗнакиГИСМ");
	ВестиУчетМаркируемойПродукцииИСМП                   = ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемойПродукцииИСМП");
	СпособЗаполненияСтавкиНДС                           = РаботаСДоговорамиКонтрагентовБП.СпособЗаполненияСтавкиНДСПоДоговору(Объект.ДоговорКонтрагента);
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Объект.Дата);
	
	//СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) И ОбщегоНазначения.СсылкаСуществует(Объект.ДоговорКонтрагента) Тогда
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Объект.ДоговорКонтрагента, 
		"ВидДоговора, ВалютаВзаиморасчетов, УчетАгентскогоНДС, РасчетыВУсловныхЕдиницах, НДСПоСтавкам4и2, ВидАгентскогоДоговора, ЭлектронныеУслуги");
		ВидДоговора          = РеквизитыДоговора.ВидДоговора;
		ЭтоКомиссия          = РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом;
		ЭтоКомиссияНаЗакупку = РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку;
		УчетАгентскогоНДС    = РеквизитыДоговора.УчетАгентскогоНДС;
		ВидАгентскогоДоговора = РеквизитыДоговора.ВидАгентскогоДоговора;
		ВалютаВзаиморасчетов  = РеквизитыДоговора.ВалютаВзаиморасчетов;
		РасчетыВУЕ            = РеквизитыДоговора.РасчетыВУсловныхЕдиницах;
		ПрименяютсяСтавки4и2  = РеквизитыДоговора.НДСПоСтавкам4и2;
		ЭлектронныеУслуги     = РеквизитыДоговора.ЭлектронныеУслуги;
	Иначе
		ВидДоговора          = Неопределено;
		ЭтоКомиссияНаЗакупку = Ложь;
		ЭтоКомиссия 		 = Ложь;
		УчетАгентскогоНДС    = Ложь;
		РасчетыВУЕ           = Ложь;
		ПрименяютсяСтавки4и2 = Ложь;
		ЭлектронныеУслуги    = Ложь;
	КонецЕсли;
	
	ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Склад, "ТипСклада");
	Если ТипСклада &lt;&gt; Перечисления.ТипыСкладов.ОптовыйСклад
		И УчетВПродажныхЦенах
		И (Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование)
		И ВидДоговора &lt;&gt; Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
		РассчитыватьСуммаВРознице = Истина;
	Иначе
		РассчитыватьСуммаВРознице = Ложь;
	КонецЕсли;
	
	Если Объект.НДСНеВыделять Тогда
		СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС");
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку") Тогда
		СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС");
	КонецЕсли;
	
	Если СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС") Тогда
		СпособЗаполненияСтавкиНДС = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияСтавкиНДС.БезНДС");
	Иначе
		СпособЗаполненияСтавкиНДС = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияСтавкиНДС.ИзКарточкиНоменклатуры");
	КонецЕсли;
	
	НТТ = ТипСклада = Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка;
	ПоставщикРезидентТаможенногоСоюза = Справочники.Контрагенты.КонтрагентРезидентТаможенногоСоюза(Объект.Контрагент);
	
	
	СвойстваСчета4112 = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(
	ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ);
	
	РазделениеПоСтавкамВРознице = СвойстваСчета4112.ВидСубконто1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС
	ИЛИ СвойстваСчета4112.ВидСубконто2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС
	ИЛИ СвойстваСчета4112.ВидСубконто3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС;
	
	ДанныеОбъекта.РассчитыватьСуммаВРознице         = РассчитыватьСуммаВРознице;
	ДанныеОбъекта.ЗаполнятьСтавкуНДСВРознице        = НТТ И УчетВПродажныхЦенах И РазделениеПоСтавкамВРознице;
	ДанныеОбъекта.ЭтоКомиссия                       = ЭтоКомиссия;
	ДанныеОбъекта.ПрименяютсяСтавки4и2              = ПрименяютсяСтавки4и2;
	ДанныеОбъекта.СпособЗаполненияСтавкиНДС         = СпособЗаполненияСтавкиНДС;
	ДанныеОбъекта.УчетАгентскогоНДС                 = УчетАгентскогоНДС;
	ДанныеОбъекта.ВидАгентскогоДоговора             = ВидАгентскогоДоговора;
	ДанныеОбъекта.ПоставщикРезидентТаможенногоСоюза = ПоставщикРезидентТаможенногоСоюза;
	ДанныеОбъекта.ЕстьРасхождения                   = Объект.ЕстьРасхождения;
	ДанныеОбъекта.ВедетсяУчетПрослеживаемыхТоваров  = ВедетсяУчетПрослеживаемыхТоваров;
	
	ДанныеОбъекта.ЭлектронныеУслуги 				= ЭлектронныеУслуги;
	ДанныеОбъекта.ВестиУчетПоДоговорам 				= ВестиУчетПоДоговорам;
	ДанныеОбъекта.ОбратноеНачислениеНДС 			= ОбратноеНачислениеНДСБул;
	
	Если Объект.НДСНеВыделять Тогда
		ДанныеОбъекта.Вставить("СтавкаНДС", ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС"));
		ДанныеОбъекта.Вставить("СуммаВключаетНДС", Истина);
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку") Тогда
		ДанныеОбъекта.Вставить("СтавкаНДС", ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС"));
	КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="УстановитьСкладПередВыгрузкойПоступления" ИспользуетсяПриЗагрузке="false">
				<Текст>Если ЗначениеЗаполнено(ОбъектКоллекции.Аналитика1) Тогда
	Если ЗначениеЗаполнено(ОбъектКоллекции.Аналитика1.Склад) Тогда
		Значение = ОбъектКоллекции.Аналитика1.Склад;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	ГРАО.КлючСсылка КАК Склад
			|ИЗ
			|	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(
			|			,
			|			Раздел = ""Обмен_БП_ITIL""
			|				И Ключ = ""ЯвляетсяТранзитнымСкладом""
			|				И Значение = ИСТИНА
			|				И КлючСсылка ССЫЛКА Справочник.Склады) КАК ГРАО";
			Результат = Запрос.Выполнить();
			Если Не Результат.Пустой() Тогда
				Значение = Результат.Выгрузить()[0].Склад;
			Иначе
				Значение = Справочники.Склады.ПустаяСсылка();
			КонецЕсли;

	КонецЕсли;
Иначе
	Значение = Справочники.Склады.ПустаяСсылка();
КонецЕсли;</Текст>
			</Алгоритм>
		</Группа>
	</Алгоритмы>
	<Запросы>
		<Запрос Имя="ЗапросСведенийПрослеживаемостиПоОС" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	ПрослеживаемыеОсновныеСредстваОстатки.РНПТ КАК РНПТ,
	ПрослеживаемыеОсновныеСредстваОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	ПрослеживаемыеОсновныеСредстваОстатки.Комплектующие КАК Комплектующие,
	ПрослеживаемыеОсновныеСредстваОстатки.ОсновноеСредство КАК ОсновноеСредство
ИЗ
	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
			,
			ОсновноеСредство = &amp;ОсновноеСредство
				И Организация = &amp;Организация) КАК ПрослеживаемыеОсновныеСредстваОстатки</Текст>
		</Запрос>
		<Запрос Имя="МОЛиМестонахождениеОСИзРС" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ,
	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение КАК Местонахождение
ИЗ
	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(, ОсновноеСредство = &amp;ОсновноеСредство) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних</Текст>
		</Запрос>
		<Запрос Имя="НайтиГруппуОбъектаСтроительстваВГРАО" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
    ГРАОСрезПоследних.Значение КАК Группа
ИЗ
    РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, Раздел = "Обмен_БП_ITIL" 
                                                        И Ключ = "ГруппаОбъектовСтроительства") КАК ГРАОСрезПоследних</Текст>
		</Запрос>
		<Запрос Имя="НайтиОСВБухУчете" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ РАЗРЕШЕННЫЕ
	ОстаткиИОбороты.Счет КАК Счет,
	ОстаткиИОбороты.Субконто1 КАК Субконто1,
	ОстаткиИОбороты.СуммаНУКонечныйОстаток КАК СуммаНУКонечныйОстаток
ИЗ
	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(, , , , Счет В ИЕРАРХИИ (&amp;Счет), ,) КАК ОстаткиИОбороты
ГДЕ
	ОстаткиИОбороты.Субконто1 = &amp;Субконто1</Текст>
		</Запрос>
		<Запрос Имя="НайтиОтветственногоВГРАО" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
    ГРАОСрезПоследних.Значение КАК Ответственный
ИЗ
    РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, Раздел = "Обмен_БП_ITIL" 
                                                        И Ключ = "ОтветственныйПриОбменеСITIL") КАК ГРАОСрезПоследних</Текст>
		</Запрос>
		<Запрос Имя="НайтиПричинуСписанияОСВГРАО" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
    ГРАОСрезПоследних.Значение КАК Причина
ИЗ
    РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, Раздел = "Обмен_БП_ITIL" 
                                                        И Ключ = "ПричиныСписанияОС") КАК ГРАОСрезПоследних</Текст>
		</Запрос>
		<Запрос Имя="НайтиСобытиеОСОСВГРАО" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
    ГРАОСрезПоследних.КлючСсылка КАК Событие
ИЗ
    РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, Раздел = "Обмен_БП_ITIL" 
                                                        И Ключ = "СобытиеСписанияОС") КАК ГРАОСрезПоследних 
ГДЕ	
	ГРАОСрезПоследних.Значение = &amp;КлючСсылка</Текст>
		</Запрос>
		<Запрос Имя="НайтиСтатьюЗатратМодернизацияОСВГРАО" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
    ГРАОСрезПоследних.Значение КАК Статья
ИЗ
    РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, Раздел = "Обмен_БП_ITIL" 
                                                        И Ключ = "СтаьтяЗатратМодернизацияОС") КАК ГРАОСрезПоследних</Текст>
		</Запрос>
		<Запрос Имя="НайтиСтатьюРасходаДляСписанияОСОСВГРАО" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
    ГРАОСрезПоследних.Значение КАК Статья
ИЗ
    РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, Раздел = "Обмен_БП_ITIL" 
                                                        И Ключ = "СтатьяРасходаСписанияОС") КАК ГРАОСрезПоследних</Текст>
		</Запрос>
		<Запрос Имя="НайтиСубконтоПоМодернизацииВНУ2МодернизацияОСВГРАО" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
    ГРАОСрезПоследних.Значение КАК СубконтоВНУ2
ИЗ
    РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, Раздел = "Обмен_БП_ITIL" 
                                                        И Ключ = "СубконтоПоМодернизацииВНУ2МодернизацияОС") КАК ГРАОСрезПоследних</Текст>
		</Запрос>
		<Запрос Имя="НайтиСубконтоСписаниеОСОСВГРАО" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
    ГРАОСрезПоследних.Значение КАК Субконто
ИЗ
    РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, Раздел = "Обмен_БП_ITIL" 
                                                        И Ключ = "СубконтоСписаниеОС") КАК ГРАОСрезПоследних</Текст>
		</Запрос>
		<Запрос Имя="ПоискДоговораПоКонтрагентуИОрганизации" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	ГРАО.КлючСсылка КАК Договор
ПОМЕСТИТЬ ВТ_ДоговорыКонтрагента
ИЗ
	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, Раздел = "Обмен_БП_ITIL"
																		И Ключ = "СопоставлениеДоговоров") КАК ГРАО
ГДЕ
	ГРАО.Значение = &amp;Контрагент
;
ВЫБРАТЬ
	Договоры.Ссылка КАК Договор,
	Договоры.ТипЦен КАК ТипЦен,
	Договоры.ВалютаВзаиморасчетов КАК Валюта
ИЗ
	ВТ_ДоговорыКонтрагента КАК ВТ_ДоговорыКонтрагента
	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	ПО ВТ_ДоговорыКонтрагента.Договор = Договоры.Ссылка
ГДЕ
	Договоры.Организация = &amp;Организация</Текст>
		</Запрос>
		<Запрос Имя="ПоискКатегорииДоговора" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	ГРАО.Значение КАК КатегорияДоговора
ИЗ
	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(
			,
			Раздел = "Обмен_БП_ITIL"
				И Ключ = "ПередачаОСКатегорияДоговора") КАК ГРАО
;</Текст>
		</Запрос>
		<Запрос Имя="ПоискКонтрагентаПоОрганизации" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	ГРАО.Значение КАК Контрагент
ИЗ
	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, 
							Раздел = "Обмен_БП_ITIL"
							И Ключ = "СопоставлениеОрганизаций"
							И КлючСсылка = &amp;ОрганизацияКонтрагент) КАК ГРАО</Текст>
		</Запрос>
		<Запрос Имя="ПоискПодразделения" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	ГРАО.Значение КАК Подразделение
ИЗ
	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, 
							Раздел = "Обмен_БП_ITIL"
							И Ключ = &amp;КлючСтрока
							И КлючСсылка = &amp;ОрганизацияКонтрагент) КАК ГРАО</Текст>
		</Запрос>
		<Запрос Имя="ПоискПроектаПерепродажи" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	ГРАО.Значение КАК Проект
ИЗ
	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(
			,
			Раздел = "Обмен_БП_ITIL"
				И Ключ = "ПроектДляПерепродажи") КАК ГРАО
;</Текст>
		</Запрос>
		<Запрос Имя="ПоискСтатьиДохода" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	ГРАО.Значение КАК СтатьяДохода
ИЗ
	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(
			,
			Раздел = "Обмен_БП_ITIL"
				И Ключ = "Реализация_СтатьяДохода_ПередачаОС_Субконто") КАК ГРАО
;</Текст>
		</Запрос>
		<Запрос Имя="ПоискСтатьиДохода652" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	ГРАО.Значение КАК СтатьяДохода
ИЗ
	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(
			,
			Раздел = "Обмен_БП_ITIL"
				И Ключ = "Субконто652") КАК ГРАО
;</Текст>
		</Запрос>
		<Запрос Имя="ПоискСчетаУчета" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	ГРАО.Значение КАК СчетУчета
ИЗ
	РегистрСведений.пит_ГибкийРегистрАналитикОбмена.СрезПоследних(, 
							Раздел = "Обмен_БП_ITIL"
							И Ключ = &amp;КлючСтрока) КАК ГРАО</Текст>
		</Запрос>
		<Запрос Имя="ПроверкаУсловияПодразделений" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
	СтруктураПредприятия.Ссылка КАК Ссылка
ИЗ
	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
ГДЕ
	(НЕ СтруктураПредприятия.Ссылка В ИЕРАРХИИ (&amp;ПапкаВГРАО)
			ИЛИ СтруктураПредприятия.Ссылка = &amp;СсылкаБуфетИзГРАО)</Текст>
		</Запрос>
		<Запрос Имя="УчавствуетВЭДОЗапрос" ИспользуетсяПриЗагрузке="true">
			<Текст>ВЫБРАТЬ
		КонтрагентыДополнительныеРеквизиты.Значение КАК Значение
	ИЗ
		Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
	ГДЕ
		КонтрагентыДополнительныеРеквизиты.Ссылка = &amp;Ссылка
		И КонтрагентыДополнительныеРеквизиты.Свойство = &amp;Свойство</Текст>
		</Запрос>
	</Запросы>
</ПравилаОбмена>